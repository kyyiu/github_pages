"use strict";(self.webpackChunkthree=self.webpackChunkthree||[]).push([[251],{8251:function(n,e,t){t.r(e),t.d(e,{default:function(){return g}});var a=t(2791),c=t(1022),o=t(9738),r=t(184),i=new c.xsS,v=new c.cPb(75,window.innerWidth/window.innerHeight,.1,1e3);v.position.set(0,0,1.5),i.add(v);var l=new c._12(2,2),u={u_time:{type:"f",value:1},iChannel0:{value:(new c.dpR).load(t(8396))},u_resolution:{type:"v2",value:new c.FM8}},s=new c.jyz({uniforms:u,vertexShader:"  \nvarying vec2 vUv;\nvoid main() { \n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"\nvarying vec2 vUv;\nuniform float u_time;\nuniform vec2 u_resolution;\nuniform sampler2D iChannel0;\n//random value\nvec2 N22(vec2 p)\n{\n  vec3 a = fract(p.xyx * vec3(123.34, 234.34, 345.65));\n  a += dot(a, a + 34.45);\n  return fract(vec2(a.x * a.y, a.y * a.z));\n}\n\nvec3 burst(vec2 st, vec2 pos, float r, vec3 col)\n{\n    st -= pos;\n    r = 0.6 * r * r;\n\n    /// \u53d1\u5149\u6548\u679c\n    return (r / dot(st, st)) * col * 0.6;\n}\n\n/// s = p0 + ut + 0.5at^2\n/// \u8ddd\u79bb\u52a0\u901f\u5ea6\u516c\u5f0f\nvec2 get_pos(vec2 u, vec2 a, vec2 p0, float t, float ang)\n{\n    /// \u6839\u636e\u521d\u59cb\u4f4d\u7f6e\u3001\u6c34\u5e73\u548c\u5782\u76f4\u7684\u901f\u5ea6\u3001\u52a0\u901f\u5ea6\u6765\u66f4\u65b0\u5f53\u524d\u7684\u4f4d\u7f6e\n    vec2 d = p0 + vec2(u.x * cos(ang), u.y * sin(ang)) * t + 0.5 * a * t * t;\n    return d;\n}\n\n// t \u65f6\u523b\u7684\u7c92\u5b50\u901f\u5ea6\nvec2 get_velocity(vec2 u, vec2 a, float t, float ang)\n{\n    /// \u6839\u636e\u52a0\u901f\u5ea6\u3001\u5f53\u524d\u6c34\u5e73\u548c\u5782\u76f4\u7684\u901f\u5ea6\u6765\u66f4\u65b0\u5f53\u524d\u7684\u901f\u5ea6\n    return vec2(u.x * cos(ang), u.y * sin(ang)) + a * t;\n}\n\n#define rad(x) radians(x)\nfloat np = 100.;\nfloat snp = 20.;\nfloat R = 0.032;\nfloat R_RATIO = 0.04;\nfloat ACC_RATIO = 0.03;\nfloat ANG = 90.;\nvec3 palette(float t) {\n  vec3 a = vec3(0.5);\n  vec3 b = vec3(0.5);\n  vec3 c = vec3(1.0);\n  vec3 d = vec3(0.263, 0.416, 0.557);\n  return a + b*cos(6.28318*(c*t*d));\n}\nvoid main()\n{\n    vec2 uv = vUv.xy ;\n    vec3 col = vec3(0.0);\n    float t = mod(u_time, 10.);\n\n    vec2 u = vec2(0.);                ///< \u521d\u901f\u5ea6\n    const vec2 acc = vec2(0.0, -9.8); ///< \u91cd\u529b\u52a0\u901f\u5ea6 acc\n    float ang = rad(ANG);             ///< \u4e0a\u5347\u7c92\u5b50\u7684\u53d1\u5c04\u89d2\u5ea6\n\n    vec3 particles = vec3(0.0); //particle\n\n   for (float i = 0.; i < np; i++)\n   {\n      float r = R;\n       vec2 rand = N22(vec2(i));\n\n       /// @note \u7206\u70b8\u524d\u7684\u7c92\u5b50\u4e0a\u5347\n\n      /// \u521d\u59cb\u4f4d\u7f6e\n       vec2 ip = vec2(sin(30.*rand.x), -1. + r);\n\n       /// \u771f\u6b63\u521d\u59cb\u5316\u901f\u5ea6\n       u = vec2(sin(5.*rand.x), 5. + sin(4.*rand.y));\n\n       float t_i = t - i / 5.; ///< \u65f6\u95f4\u5dee\u5f02\u5316\n        vec2 s = get_pos(u, acc, ip, t_i, ang);\n        vec2 v = get_velocity(u, acc, t_i, ang);\n\n       /// \u8ba1\u7b97\u7ad6\u76f4\u5411\u4e0a\u7684\u8fd0\u52a8\u65f6\u95f4\n        float t_up = u.y * sin(ang) / abs(acc.y);\n        /// \u6839\u636e\u65f6\u95f4\u8ba1\u7b97\u51fa\u5411\u4e0a\u8fd0\u52a8\u7684\u6700\u5927\u9ad8\u5ea6\n        vec2 h_max = get_pos(u, acc, ip, t_up, ang);\n\n        vec3 pcol = palette(u_time);\n\n\n       if (v.y < -0.5) ///< \u4e0b\u843d\u901f\u5ea6\u8d85\u8fc7\u4e00\u5b9a\u5927\u5c0f\u5219\u6d88\u5931\n        {\n            r = 0.0;    ///< \u9690\u85cf\n        }\n      particles += burst(uv, s, r, pcol); ///< \u53d1\u5c04\u4e0a\u5347\u7684\u7c92\u5b50\n\n\n      /// @note \u7206\u70b8\u540e\u7684\u7c92\u5b50\u6269\u6563\n       /// \u5f53\u7c92\u5b50\u505c\u6b62\u4e0a\u5347\uff0c\u4e14\u7c92\u5b50\u7684\u5f53\u524d\u65f6\u95f4\u5df2\u7ecf\u8fbe\u5230\u4e86\u4e0a\u5347\u7684\u65f6\u95f4\n\n        if (v.y > -6.5 && v.y < 0.0 && t_i >= t_up /*&& SPAWN == 1*/)\n               {\n           /// \u628a\u4e00\u4e2a\u5706\u6839\u636e\u89d2\u5ea6\u5206\u6210\u82e5\u5e72\u4efd\u6247\u5f62\n           float unit = (360. / snp);\n           for (float j = 0.0; j < snp; j++)\n          {\n               float ang = rad(j * unit);\n\n                float r = 0.035;             ///< \u5fc3\u5f62\u7c92\u5b50\u7684\u534a\u5f84\n              r -= (t_i - t_up) * R_RATIO; ///< \u6839\u636e\u65f6\u95f4\u5dee\u6765\u6539\u53d8\u7c92\u5b50\u7684\u5927\u5c0f\uff08\u53d8\u5c0f\uff09\n\n               /// --------------------------------------------------\n               /// @note \u6839\u636e\uff08\u5355\u4f4d\u5706\u7684\uff09\u89d2\u5ea6\u8ba1\u7b97\u7b1b\u5361\u5c14\u5750\u6807\n                float x = cos(ang); //coords of unit circle\n                float y = sin(ang);\n                /// \u5fc3\u5f62\u516c\u5f0f\n                y = y + abs(x) * sqrt( (8. - abs(x)) / 50.0 );\n              /// \u5fc3\u5f62\u901f\u5ea6\u5411\u91cf\uff0c\u968f\u7740\u65f6\u95f4\u800c\u53d8\u5c0f\n                vec2 heart = vec2(x * x + y * y) * (0.4 / (t_i * sqrt(t_i)));\n\n                /// \u6839\u636e\u5fc3\u5f62\u7684\u5f53\u524d\u901f\u5ea6\u548c\u52a0\u901f\u5ea6\u3001\u521d\u59cb\u4f4d\u7f6e\u7b49\u66f4\u65b0\u7c92\u5b50\u7684\u4f4d\u7f6e\n                vec2 S = get_pos(heart, acc * ACC_RATIO, h_max, t_i - (t_up), ang);\n                /// --------------------------------------------------\n\n                vec3 pcol = palette(u_time);\n               particles += burst(uv, S, max(0.0, r), pcol);\n           }\n        }\n\n    }\n\n    col = particles;\n    /// vec3 bgImg = texture2D(iChannel0, uv).rgb;\n    /// gl_FragColor = vec4(col + bgImg,  1.0);\n    gl_FragColor = vec4(col,  1.0);\n}"}),f=new c.Kj0(l,s);i.add(f);var p,d=new c.CP7;function g(){var n=(0,a.useRef)();function e(n){p&&(u.u_time.value+=p.getDelta(),d.render(i,v),window.requestAnimationFrame(e))}return(0,a.useEffect)((function(){return p=new c.SUY,n.current.appendChild(d.domElement),e(),function(){p=null}}),[]),(0,r.jsx)("div",{ref:n})}new o.z(v,d.domElement).enableDamping=!0,d.setSize(window.innerWidth,window.innerHeight)}}]);
//# sourceMappingURL=251.2df5e399.chunk.js.map