{"version":3,"file":"static/js/932.d207441f.chunk.js","mappings":"8MAKMA,EAAQ,IAAIC,EAAAA,IACZC,EAAS,IAAID,EAAAA,IACf,GACAE,OAAOC,WAAWD,OAAOE,YACzB,GACA,IAEJL,EAAMM,WAAa,IAAIL,EAAAA,IAAY,SACnC,IAAMM,EAAQ,IAAIN,EAAAA,IAClBC,EAAOM,SAASC,IAAI,EAAE,IAAI,KAC1BT,EAAMU,IAAIR,GAEV,IAAMS,EAAW,IAAIV,EAAAA,IAEfW,EAAW,IAAIC,EAAAA,EAAcX,EAAQS,EAASG,YACpDF,EAASG,OAAON,IAAI,EAAG,EAAG,GAC1BG,EAASI,SAETJ,EAASK,eAAgB,EACzBN,EAASO,QAAQf,OAAOC,WAAYD,OAAOE,aAC3C,IAASc,EAAgDC,EAA1CC,EAAa,CAAC,EAAGC,EAAa,GAC9B,aACX,IAAMC,GAAYC,EAAAA,EAAAA,UA8BlB,SAASC,IACP,IACIC,EADEC,EAAMC,OAAOC,KAAKR,GAExB,GACEK,EAAMI,KAAKC,MAAMD,KAAKE,SAAWL,EAAIM,cAC/BN,EAAID,KAASJ,IAKvB,SAAmBY,GACjB,GAAIZ,IAAeY,EAAKC,oBAAqB,OAC7C,IAAMC,EAAOf,EAAWa,EAAKC,qBAC7B,QAAaE,IAATD,EAAoB,CACtB,IAAME,EAASnB,EAAMoB,WAAWH,GACnB,SAATF,IACFI,EAAOE,mBAAoB,EAC3BF,EAAOG,QAAQxC,EAAAA,MAEjBqC,EAAOI,QACP,IAAMC,EAAwB,SAAfrB,EACfA,EAAaY,EAAKC,oBAClBG,EAAOM,OACHxB,IACEuB,EACFvB,EAAUyB,SAAU,EAEpBzB,EAAU0B,YAAYR,EAAQ,KAGlClB,EAAYkB,CACd,CACF,CA1BES,CAAWpB,EAAID,IACfsB,WAAWvB,EAAQ,IACrB,CAiCA,SAASwB,IACP,IAAMC,EAAQ/C,OAAOC,WACf+C,EAAShD,OAAOE,YAEtBH,EAAOkD,OAASF,EAAQC,EACxBjD,EAAOmD,yBACP1C,EAASO,QAASgC,EAAOC,EAC3B,CAEA,SAASG,EAAQC,GACf,IAAMC,EAAKjD,EAAMkD,gBACHpB,IAAVlB,GACFA,EAAMH,OAAOwC,GAEf7C,EAAS+C,OAAO1D,EAAOE,GACvBC,OAAOwD,sBAAsBL,EAC/B,CAEA,OAvFAM,EAAAA,EAAAA,YAAU,YA8DV,WACE,IAAMC,EAAU,IAAI5D,EAAAA,IAAsB,SAAU,SAAU,GAC9DD,EAAMU,IAAImD,IACI,IAAI5D,EAAAA,KACZO,SAASC,IAAI,GAAK,EAAG,EAC7B,CAlEEqD,GAOF,WACE,IAAMC,EAAS,IAAIC,EAAAA,EACbC,EAAc,IAAIC,EAAAA,EAExBD,EAAYE,eAAe,YAC3BJ,EAAOK,eAAeH,GACtBF,EAAOM,KACLC,EAAQ,OACR,SAAAC,GACEvE,EAAMU,IAAI6D,EAAKC,OACTD,EAAKC,MACXrD,EAAQ,IAAIlB,EAAAA,IAAqBsE,EAAKC,OACtCD,EAAKlD,WAAWoD,SAAQ,SAAAC,GACtBrD,EAAWqD,EAAIxC,KAAKC,qBAAuBuC,CAC7C,IACAjD,GACF,GAEJ,CAxBEkD,GACAxE,OAAOyE,iBAAkB,SAAU3B,GAAgB,GACnD1B,EAAUsD,QAAQC,YAAYnE,EAASG,YACvCwC,GACF,GAAG,KAiFIyB,EAAAA,EAAAA,KAAA,OAAKC,IAAKzD,GACnB,C,4LC9GI0D,EAAa,IAAIC,QAEjBhB,EAAW,SAAAiB,IAAAC,EAAAA,EAAAA,GAAAlB,EAAAiB,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAApB,GAEhB,SAAAA,EAAaqB,GAAU,IAAAC,EAyBpB,OAzBoBC,EAAAA,EAAAA,GAAA,KAAAvB,IAEtBsB,EAAAH,EAAAK,KAAA,KAAOH,IAEFI,YAAc,GACnBH,EAAKI,cAAgB,CAAC,EACtBJ,EAAKK,cAAgB,KACrBL,EAAKM,eAAiB,KAEtBN,EAAKO,YAAc,EACnBP,EAAKQ,WAAa,GAClBR,EAAKS,iBAAmB,EACxBT,EAAKU,gBAAkB,GAEvBV,EAAKW,oBAAsB,CAC1B3F,SAAU,WACV4F,OAAQ,SACRC,MAAO,QACPC,GAAI,aAELd,EAAKe,sBAAwB,CAC5B/F,SAAU,eACV4F,OAAQ,eACRC,MAAO,eACPC,GAAI,gBACHd,CAEH,CA6TC,OA7TAgB,EAAAA,EAAAA,GAAAtC,EAAA,EAAAuC,IAAA,iBAAAC,MAED,SAAgBC,GAIf,OAFAC,KAAKjB,YAAcgB,EAEZC,IAER,GAAC,CAAAH,IAAA,mBAAAC,MAED,SAAkBG,GAIjB,OAFAD,KAAKhB,cAAgBiB,EAEdD,IAER,GAAC,CAAAH,IAAA,iBAAAC,MAED,SAAgBX,GAIf,OAFAa,KAAKb,YAAcA,EAEZa,IAER,GAAC,CAAAH,IAAA,OAAAC,MAED,SAAMI,EAAKC,EAAQC,EAAYC,GAAU,IAAAC,EAAA,KAElCnD,EAAS,IAAIoD,EAAAA,IAAYP,KAAKrB,SAEpCxB,EAAOqD,QAASR,KAAKD,MACrB5C,EAAOsD,gBAAiB,eACxBtD,EAAOuD,iBAAkBV,KAAKW,eAC9BxD,EAAOyD,mBAAoBZ,KAAKa,iBAEhC1D,EAAOM,KAAMyC,GAAK,SAAEY,GAEnBR,EAAKS,gBAAiBD,EAAQX,GAASa,MAAOX,EAE/C,GAAGD,EAAYC,EAEhB,GAAC,CAAAR,IAAA,kBAAAC,MAED,SAAiBgB,EAAQG,EAAUC,EAAcC,GAEhD,IAAMC,EAAa,CAClBF,aAAcA,GAAgBlB,KAAKT,oBACnC4B,eAAgBA,GAAkBnB,KAAKL,sBACvC0B,eAAiBH,GAGlB,OAAOlB,KAAKsB,eAAgBR,EAAQM,GAAaG,KAAMN,EAExD,GAAC,CAAApB,IAAA,iBAAAC,MAED,SAAgBgB,EAAQM,GAAa,IAiChCI,EAjCgCC,EAAA,KAE9BC,EAAUC,KAAKC,UAAWR,GAIhC,GAAK/C,EAAWwD,IAAKf,GAAW,CAE/B,IAAMgB,EAAazD,EAAW0D,IAAKjB,GAEnC,GAAKgB,EAAWjC,MAAQ6B,EAEvB,OAAOI,EAAWE,QAEZ,GAA2B,IAAtBlB,EAAOmB,WAMlB,MAAM,IAAIC,MAET,gHAOH,CAKA,IAAMC,EAASnC,KAAKX,mBACd+C,EAAWtB,EAAOmB,WAIlBI,EAAkBrC,KAAKsC,WAAYH,EAAQC,GAC/Cb,MAAM,SAAEgB,GAIR,OAFAf,EAASe,EAEF,IAAIC,SAAS,SAAEC,EAASC,GAE9BlB,EAAOmB,WAAYR,GAAW,CAAEM,QAAAA,EAASC,OAAAA,GAEzClB,EAAOoB,YAAa,CAAEC,KAAM,SAAUC,GAAIX,EAAQf,WAAAA,EAAYN,OAAAA,GAAU,CAAEA,GAI3E,GAED,IACCS,MAAM,SAAEwB,GAAO,OAAMtB,EAAKuB,gBAAiBD,EAAQE,SAAU,IA0B/D,OAtBAZ,EACErB,OAAO,kBAAM,CAAI,IACjBO,MAAM,WAEDC,GAAUW,GAEdV,EAAKyB,aAAc1B,EAAQW,EAM7B,IAGD9D,EAAWxE,IAAKiH,EAAQ,CAEvBjB,IAAK6B,EACLM,QAASK,IAIHA,CAER,GAAC,CAAAxC,IAAA,kBAAAC,MAED,SAAiBqD,GAEhB,IAAMF,EAAW,IAAIG,EAAAA,IAEhBD,EAAaE,OAEjBJ,EAASK,SAAU,IAAIC,EAAAA,IAAiBJ,EAAaE,MAAMG,MAAO,IAInE,IAAM,IAAIC,EAAI,EAAGA,EAAIN,EAAaO,WAAWrI,OAAQoI,IAAO,CAE3D,IAAME,EAAYR,EAAaO,WAAYD,GACrCnI,EAAOqI,EAAUrI,KACjBkI,EAAQG,EAAUH,MAClBI,EAAWD,EAAUC,SAE3BX,EAASY,aAAcvI,EAAM,IAAIiI,EAAAA,IAAiBC,EAAOI,GAE1D,CAEA,OAAOX,CAER,GAAC,CAAApD,IAAA,eAAAC,MAED,SAAcI,EAAK4D,GAElB,IAAM3G,EAAS,IAAIoD,EAAAA,IAAYP,KAAKrB,SAKpC,OAJAxB,EAAOqD,QAASR,KAAKjB,aACrB5B,EAAOsD,gBAAiBqD,GACxB3G,EAAOyD,mBAAoBZ,KAAKa,iBAEzB,IAAI2B,SAAS,SAAEC,EAASC,GAE9BvF,EAAOM,KAAMyC,EAAKuC,OAAShH,EAAWiH,EAEvC,GAED,GAAC,CAAA7C,IAAA,UAAAC,MAED,WAIC,OAFAE,KAAK+D,eAEE/D,IAER,GAAC,CAAAH,IAAA,eAAAC,MAED,WAAe,IAAAkE,EAAA,KAEd,GAAKhE,KAAKd,eAAiB,OAAOc,KAAKd,eAEvC,IAAM+E,EAA+B,kBAAhBC,aAAwD,OAA5BlE,KAAKhB,cAAc6D,KAC9DsB,EAAmB,GAsCzB,OApCKF,EAEJE,EAAiBC,KAAMpE,KAAKqE,aAAc,mBAAoB,UAI9DF,EAAiBC,KAAMpE,KAAKqE,aAAc,wBAAyB,SACnEF,EAAiBC,KAAMpE,KAAKqE,aAAc,qBAAsB,iBAIjErE,KAAKd,eAAiBsD,QAAQ8B,IAAKH,GACjC5C,MAAM,SAAEgD,GAER,IAAMC,EAAYD,EAAW,GAEtBN,IAEND,EAAKhF,cAAcyF,WAAaF,EAAW,IAI5C,IAAMG,EAAKC,EAAYC,WAEjBC,EAAO,CACZ,sBACAL,EACA,GACA,eACAE,EAAGI,UAAWJ,EAAGK,QAAS,KAAQ,EAAGL,EAAGM,YAAa,OACpDC,KAAM,MAERjB,EAAK1E,gBAAkB4F,IAAIC,gBAAiB,IAAIC,KAAM,CAAEP,IAEzD,IAEM7E,KAAKd,cAEb,GAAC,CAAAW,IAAA,aAAAC,MAED,SAAYqC,EAAQC,GAAW,IAAAiD,EAAA,KAE9B,OAAOrF,KAAK+D,eAAexC,MAAM,WAEhC,GAAK8D,EAAKjG,WAAW/D,OAASgK,EAAKlG,YAAc,CAEhD,IAAMqC,EAAS,IAAI8D,OAAQD,EAAK/F,iBAEhCkC,EAAOmB,WAAa,CAAC,EACrBnB,EAAO+D,WAAa,CAAC,EACrB/D,EAAOgE,UAAY,EAEnBhE,EAAOoB,YAAa,CAAEC,KAAM,OAAQ7D,cAAeqG,EAAKrG,gBAExDwC,EAAOiE,UAAY,SAAWC,GAE7B,IAAM3C,EAAU2C,EAAEC,KAElB,OAAS5C,EAAQF,MAEhB,IAAK,SACJrB,EAAOmB,WAAYI,EAAQD,IAAKL,QAASM,GACzC,MAED,IAAK,QACJvB,EAAOmB,WAAYI,EAAQD,IAAKJ,OAAQK,GACxC,MAED,QACC6C,QAAQC,MAAO,2CAA6C9C,EAAQF,KAAO,KAI9E,EAEAwC,EAAKjG,WAAWgF,KAAM5C,EAEvB,MAEC6D,EAAKjG,WAAW0G,MAAM,SAAWC,EAAGC,GAEnC,OAAOD,EAAEP,UAAYQ,EAAER,WAAc,EAAI,CAE1C,IAID,IAAMhE,EAAS6D,EAAKjG,WAAYiG,EAAKjG,WAAW/D,OAAS,GAGzD,OAFAmG,EAAO+D,WAAYpD,GAAWC,EAC9BZ,EAAOgE,WAAapD,EACbZ,CAER,GAED,GAAC,CAAA3B,IAAA,eAAAC,MAED,SAAc0B,EAAQW,GAErBX,EAAOgE,WAAahE,EAAO+D,WAAYpD,UAChCX,EAAOmB,WAAYR,UACnBX,EAAO+D,WAAYpD,EAE3B,GAAC,CAAAtC,IAAA,QAAAC,MAED,WAEC8F,QAAQK,IAAK,cAAejG,KAAKZ,WAAW8G,KAAK,SAAE1E,GAAM,OAAMA,EAAOgE,SAAS,IAEhF,GAAC,CAAA3F,IAAA,UAAAC,MAED,WAEC,IAAM,IAAI2D,EAAI,EAAGA,EAAIzD,KAAKZ,WAAW/D,SAAWoI,EAE/CzD,KAAKZ,WAAYqE,GAAI0C,YAMtB,OAFAnG,KAAKZ,WAAW/D,OAAS,EAElB2E,IAER,KAAC1C,CAAA,CA1Ve,CAAS8I,EAAAA,KAgW1B,SAASzB,IAER,IAAI3F,EACAE,EA6JJ,SAASmH,EAAiBC,EAAOC,EAASC,EAAeC,EAAeC,EAAe/C,GAEtF,IAAMgD,EAAgBhD,EAAUiD,iBAE1BC,EADYL,EAAcM,aACFH,EACxB1E,EAAa4E,EAAYH,EAAcK,kBACvCC,EAeP,SAA2BV,EAAOI,GAEjC,OAASA,GAER,KAAKO,aAAc,OAAOX,EAAMY,WAChC,KAAKC,UAAW,OAAOb,EAAMc,QAC7B,KAAKC,WAAY,OAAOf,EAAMgB,SAC9B,KAAKC,WAAY,OAAOjB,EAAMkB,SAC9B,KAAKC,WAAY,OAAOnB,EAAMoB,SAC9B,KAAKC,YAAa,OAAOrB,EAAMsB,UAC/B,KAAKC,YAAa,OAAOvB,EAAMwB,UAIjC,CA7BkBC,CAAkBzB,EAAOI,GAEpCsB,EAAM1B,EAAM2B,QAAShG,GAC3BsE,EAAQ2B,kCAAmC1B,EAAe7C,EAAWqD,EAAU/E,EAAY+F,GAC3F,IAAMxE,EAAQ,IAAIkD,EAAeJ,EAAM6B,QAAQrH,OAAQkH,EAAKnB,GAAYuB,QAGxE,OAFA9B,EAAM+B,MAAOL,GAEN,CACN1M,KAAMmL,EACNjD,MAAOA,EACPI,SAAU+C,EAGZ,CA9KAlB,UAAY,SAAWC,GAEtB,IAAM3C,EAAU2C,EAAEC,KAElB,OAAS5C,EAAQF,MAEhB,IAAK,OACJ7D,EAAgB+D,EAAQ/D,cACxBE,EAAiB,IAAIsD,SAAS,SAAWC,GAExCzD,EAAcsJ,eAAiB,SAAWhC,GAGzC7D,EAAS,CAAE6D,MAAOA,GAEnB,EAEAiC,mBAAoBvJ,EAErB,IACA,MAED,IAAK,SACJ,IAAM8B,EAASiC,EAAQjC,OACjBM,EAAa2B,EAAQ3B,WAC3BlC,EAAeqC,MAAM,SAAEiH,GAEtB,IAAMlC,EAAQkC,EAAOlC,MACfC,EAAU,IAAID,EAAMmC,QACpBC,EAAgB,IAAIpC,EAAMqC,cAChCD,EAAcE,KAAM,IAAIzB,UAAWrG,GAAUA,EAAOmB,YAEpD,IAEC,IAAMgB,EA4BX,SAAyBqD,EAAOC,EAASmC,EAAetH,GAEvD,IAGIoF,EACAqC,EAJE3H,EAAeE,EAAWF,aAC1BC,EAAiBC,EAAWD,eAK5B2H,EAAevC,EAAQwC,uBAAwBL,GAErD,GAAKI,IAAiBxC,EAAM0C,gBAE3BxC,EAAgB,IAAIF,EAAM2C,KAC1BJ,EAAiBtC,EAAQ2C,mBAAoBR,EAAelC,OAEtD,IAAKsC,IAAiBxC,EAAM6C,YAOlC,MAAM,IAAIjH,MAAO,gDALjBsE,EAAgB,IAAIF,EAAM8C,WAC1BP,EAAiBtC,EAAQ8C,yBAA0BX,EAAelC,EAMnE,CAEA,IAAOqC,EAAeS,MAA8B,IAAtB9C,EAAcwB,IAE3C,MAAM,IAAI9F,MAAO,uCAAyC2G,EAAeU,aAI1E,IAAMtG,EAAW,CAAEI,MAAO,KAAMK,WAAY,IAG5C,IAAM,IAAM+C,KAAiBvF,EAAe,CAE3C,IAAMwF,EAAgB8C,KAAMrI,EAAgBsF,IAExC9C,OAAS,EACT8F,OAAW,EAMf,GAAKrI,EAAWC,aAEfoI,EAAcvI,EAAcuF,GAC5B9C,EAAY4C,EAAQmD,uBAAwBlD,EAAeiD,OAErD,CAIN,IAAuB,KAFvBA,EAAclD,EAAQoD,eAAgBnD,EAAeF,EAAOpF,EAAcuF,MAE/C,SAE3B9C,EAAY4C,EAAQqD,aAAcpD,EAAeiD,EAElD,CAEAxG,EAASS,WAAWU,KAAMiC,EAAiBC,EAAOC,EAASC,EAAeC,EAAeC,EAAe/C,GAEzG,CAGKmF,IAAiBxC,EAAM0C,kBAE3B/F,EAASI,MAUX,SAAsBiD,EAAOC,EAASC,GAErC,IAAMqD,EAAWrD,EAAcsD,YACzBC,EAAwB,EAAXF,EACb5H,EAA0B,EAAb8H,EAEb/B,EAAM1B,EAAM2B,QAAShG,GAC3BsE,EAAQyD,wBAAyBxD,EAAevE,EAAY+F,GAC5D,IAAM3E,EAAQ,IAAIwE,YAAavB,EAAM6B,QAAQrH,OAAQkH,EAAK+B,GAAa3B,QAGvE,OAFA9B,EAAM+B,MAAOL,GAEN,CAAExE,MAAOH,EAAOO,SAAU,EAElC,CAvBmBqG,CAAa3D,EAAOC,EAASC,IAM/C,OAFAF,EAAM4D,QAAS1D,GAERvD,CAER,CAxGsB3B,CAAgBgF,EAAOC,EAASmC,EAAetH,GAE1D+I,EAAUlH,EAASS,WAAWwC,KAAK,SAAEkE,GAAI,OAAMA,EAAK5G,MAAM1C,MAAM,IAEjEmC,EAASI,OAAQ8G,EAAQ/F,KAAMnB,EAASI,MAAMG,MAAM1C,QAEzD0I,KAAK5G,YAAa,CAAEC,KAAM,SAAUC,GAAIC,EAAQD,GAAIG,SAAAA,GAAYkH,EAEjE,CAAE,MAAQtE,GAETD,QAAQC,MAAOA,GAEf2D,KAAK5G,YAAa,CAAEC,KAAM,QAASC,GAAIC,EAAQD,GAAI+C,MAAOA,EAAM9C,SAEjE,CAAE,QAEDuD,EAAM4D,QAASxB,GACfpC,EAAM4D,QAAS3D,EAEhB,CAED,IAKH,CAoID,C","sources":["practice/animation/moduleAni.js","../node_modules/three/examples/jsm/loaders/DRACOLoader.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport * as Three from 'three'\r\nimport {OrbitControls} from 'three/examples/jsm/controls/OrbitControls'\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\r\nimport { DRACOLoader } from 'three/examples/jsm/loaders/DRACOLoader.js';\r\nconst sence = new Three.Scene();\r\nconst camera = new Three.PerspectiveCamera(\r\n    45,\r\n    window.innerWidth/window.innerHeight,\r\n    0.1,\r\n    50\r\n)\r\nsence.background = new Three.Color(0x605550)\r\nconst clock = new Three.Clock();\r\ncamera.position.set(1,1.7,2.8)\r\nsence.add(camera)\r\n\r\nconst renderer = new Three.WebGLRenderer()\r\n// renderer.outputEncoding = Three.sRGBEncoding\r\nconst controls = new OrbitControls(camera, renderer.domElement)\r\ncontrols.target.set(0, 1, 0)\r\ncontrols.update()\r\n// 设置阻尼，让控制器更真实, 必须在动画循环调用update方法\r\ncontrols.enableDamping = true\r\nrenderer.setSize(window.innerWidth, window.innerHeight)\r\nlet eve, mixer,animations = {}, actionName = '', action, curAction\r\nexport default function() {\r\n    const container = useRef()\r\n  \r\n    useEffect(() => {\r\n      initLight()\r\n      initEve()\r\n      window.addEventListener( 'resize', onWindowResize, false );//窗口变化监听\r\n      container.current.appendChild(renderer.domElement)\r\n      refresh()\r\n    }, [])\r\n\r\n    function initEve() {\r\n      const loader = new GLTFLoader()\r\n      const dracoLoader = new DRACOLoader()\r\n      // 把node_modules\\three\\examples\\jsm\\libs\\draco文件夹复制到public\r\n      dracoLoader.setDecoderPath('./draco/') //注意最后还有一个分号\r\n      loader.setDRACOLoader(dracoLoader)\r\n      loader.load(\r\n        require(\"../../assets/gameSource/factory/eve.glb\"),\r\n        glft => {\r\n          sence.add(glft.scene)\r\n          eve = glft.scene\r\n          mixer = new Three.AnimationMixer(glft.scene)\r\n          glft.animations.forEach(ani => {\r\n            animations[ani.name.toLocaleLowerCase()] = ani\r\n          })\r\n          newAni()\r\n        }\r\n      )\r\n    }\r\n\r\n    function newAni() {\r\n      const kes = Object.keys(animations)\r\n      let idx\r\n      do {\r\n        idx = Math.floor(Math.random() * kes.length)\r\n      } while(kes[idx] === actionName)\r\n      setAction( kes[idx] )\r\n      setTimeout(newAni, 3000)\r\n    }\r\n\r\n    function setAction(name) {\r\n      if (actionName === name.toLocaleLowerCase()) return\r\n      const clip = animations[name.toLocaleLowerCase()]\r\n      if (clip !== undefined) {\r\n        const action = mixer.clipAction(clip)\r\n        if (name === 'shot') {\r\n          action.clampWhenFinished = true\r\n          action.setLoop(Three.LoopOnce)\r\n        }\r\n        action.reset()\r\n        const nofade = actionName === 'shot'\r\n        actionName = name.toLocaleLowerCase()\r\n        action.play()\r\n        if (curAction) {\r\n          if (nofade) {\r\n            curAction.enabled = false\r\n          } else {\r\n            curAction.crossFadeTo(action, 0.5)\r\n          }\r\n        }\r\n        curAction = action\r\n      }\r\n    }\r\n\r\n    function initLight() {\r\n      const ambient = new Three.HemisphereLight(0xffffff, 0xbbbbff, 1)\r\n      sence.add(ambient)\r\n      const light = new Three.DirectionalLight()\r\n      light.position.set(0.2, 1, 1)\r\n    }\r\n\r\n    function onWindowResize() {\r\n      const width = window.innerWidth;\r\n      const height = window.innerHeight;\r\n\r\n      camera.aspect = width / height;//获得当前摄像机缩放比\r\n      camera.updateProjectionMatrix();//更新矩阵\r\n      renderer.setSize( width, height );\r\n    }\r\n\r\n    function refresh(time) {\r\n      const dt = clock.getDelta()\r\n      if (mixer !== undefined) {\r\n        mixer.update(dt)\r\n      }\r\n      renderer.render(sence, camera)\r\n      window.requestAnimationFrame(refresh)\r\n    }\r\n  \r\n    return <div ref={container}></div>\r\n  }\r\n\r\n\r\n","import {\n\tBufferAttribute,\n\tBufferGeometry,\n\tFileLoader,\n\tLoader\n} from 'three';\n\nconst _taskCache = new WeakMap();\n\nclass DRACOLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.decoderPath = '';\n\t\tthis.decoderConfig = {};\n\t\tthis.decoderBinary = null;\n\t\tthis.decoderPending = null;\n\n\t\tthis.workerLimit = 4;\n\t\tthis.workerPool = [];\n\t\tthis.workerNextTaskID = 1;\n\t\tthis.workerSourceURL = '';\n\n\t\tthis.defaultAttributeIDs = {\n\t\t\tposition: 'POSITION',\n\t\t\tnormal: 'NORMAL',\n\t\t\tcolor: 'COLOR',\n\t\t\tuv: 'TEX_COORD'\n\t\t};\n\t\tthis.defaultAttributeTypes = {\n\t\t\tposition: 'Float32Array',\n\t\t\tnormal: 'Float32Array',\n\t\t\tcolor: 'Float32Array',\n\t\t\tuv: 'Float32Array'\n\t\t};\n\n\t}\n\n\tsetDecoderPath( path ) {\n\n\t\tthis.decoderPath = path;\n\n\t\treturn this;\n\n\t}\n\n\tsetDecoderConfig( config ) {\n\n\t\tthis.decoderConfig = config;\n\n\t\treturn this;\n\n\t}\n\n\tsetWorkerLimit( workerLimit ) {\n\n\t\tthis.workerLimit = workerLimit;\n\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst loader = new FileLoader( this.manager );\n\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tloader.load( url, ( buffer ) => {\n\n\t\t\tthis.decodeDracoFile( buffer, onLoad ).catch( onError );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tdecodeDracoFile( buffer, callback, attributeIDs, attributeTypes ) {\n\n\t\tconst taskConfig = {\n\t\t\tattributeIDs: attributeIDs || this.defaultAttributeIDs,\n\t\t\tattributeTypes: attributeTypes || this.defaultAttributeTypes,\n\t\t\tuseUniqueIDs: !! attributeIDs\n\t\t};\n\n\t\treturn this.decodeGeometry( buffer, taskConfig ).then( callback );\n\n\t}\n\n\tdecodeGeometry( buffer, taskConfig ) {\n\n\t\tconst taskKey = JSON.stringify( taskConfig );\n\n\t\t// Check for an existing task using this buffer. A transferred buffer cannot be transferred\n\t\t// again from this thread.\n\t\tif ( _taskCache.has( buffer ) ) {\n\n\t\t\tconst cachedTask = _taskCache.get( buffer );\n\n\t\t\tif ( cachedTask.key === taskKey ) {\n\n\t\t\t\treturn cachedTask.promise;\n\n\t\t\t} else if ( buffer.byteLength === 0 ) {\n\n\t\t\t\t// Technically, it would be possible to wait for the previous task to complete,\n\t\t\t\t// transfer the buffer back, and decode again with the second configuration. That\n\t\t\t\t// is complex, and I don't know of any reason to decode a Draco buffer twice in\n\t\t\t\t// different ways, so this is left unimplemented.\n\t\t\t\tthrow new Error(\n\n\t\t\t\t\t'THREE.DRACOLoader: Unable to re-decode a buffer with different ' +\n\t\t\t\t\t'settings. Buffer has already been transferred.'\n\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tlet worker;\n\t\tconst taskID = this.workerNextTaskID ++;\n\t\tconst taskCost = buffer.byteLength;\n\n\t\t// Obtain a worker and assign a task, and construct a geometry instance\n\t\t// when the task completes.\n\t\tconst geometryPending = this._getWorker( taskID, taskCost )\n\t\t\t.then( ( _worker ) => {\n\n\t\t\t\tworker = _worker;\n\n\t\t\t\treturn new Promise( ( resolve, reject ) => {\n\n\t\t\t\t\tworker._callbacks[ taskID ] = { resolve, reject };\n\n\t\t\t\t\tworker.postMessage( { type: 'decode', id: taskID, taskConfig, buffer }, [ buffer ] );\n\n\t\t\t\t\t// this.debug();\n\n\t\t\t\t} );\n\n\t\t\t} )\n\t\t\t.then( ( message ) => this._createGeometry( message.geometry ) );\n\n\t\t// Remove task from the task list.\n\t\t// Note: replaced '.finally()' with '.catch().then()' block - iOS 11 support (#19416)\n\t\tgeometryPending\n\t\t\t.catch( () => true )\n\t\t\t.then( () => {\n\n\t\t\t\tif ( worker && taskID ) {\n\n\t\t\t\t\tthis._releaseTask( worker, taskID );\n\n\t\t\t\t\t// this.debug();\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t// Cache the task result.\n\t\t_taskCache.set( buffer, {\n\n\t\t\tkey: taskKey,\n\t\t\tpromise: geometryPending\n\n\t\t} );\n\n\t\treturn geometryPending;\n\n\t}\n\n\t_createGeometry( geometryData ) {\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tif ( geometryData.index ) {\n\n\t\t\tgeometry.setIndex( new BufferAttribute( geometryData.index.array, 1 ) );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < geometryData.attributes.length; i ++ ) {\n\n\t\t\tconst attribute = geometryData.attributes[ i ];\n\t\t\tconst name = attribute.name;\n\t\t\tconst array = attribute.array;\n\t\t\tconst itemSize = attribute.itemSize;\n\n\t\t\tgeometry.setAttribute( name, new BufferAttribute( array, itemSize ) );\n\n\t\t}\n\n\t\treturn geometry;\n\n\t}\n\n\t_loadLibrary( url, responseType ) {\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.decoderPath );\n\t\tloader.setResponseType( responseType );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\treturn new Promise( ( resolve, reject ) => {\n\n\t\t\tloader.load( url, resolve, undefined, reject );\n\n\t\t} );\n\n\t}\n\n\tpreload() {\n\n\t\tthis._initDecoder();\n\n\t\treturn this;\n\n\t}\n\n\t_initDecoder() {\n\n\t\tif ( this.decoderPending ) return this.decoderPending;\n\n\t\tconst useJS = typeof WebAssembly !== 'object' || this.decoderConfig.type === 'js';\n\t\tconst librariesPending = [];\n\n\t\tif ( useJS ) {\n\n\t\t\tlibrariesPending.push( this._loadLibrary( 'draco_decoder.js', 'text' ) );\n\n\t\t} else {\n\n\t\t\tlibrariesPending.push( this._loadLibrary( 'draco_wasm_wrapper.js', 'text' ) );\n\t\t\tlibrariesPending.push( this._loadLibrary( 'draco_decoder.wasm', 'arraybuffer' ) );\n\n\t\t}\n\n\t\tthis.decoderPending = Promise.all( librariesPending )\n\t\t\t.then( ( libraries ) => {\n\n\t\t\t\tconst jsContent = libraries[ 0 ];\n\n\t\t\t\tif ( ! useJS ) {\n\n\t\t\t\t\tthis.decoderConfig.wasmBinary = libraries[ 1 ];\n\n\t\t\t\t}\n\n\t\t\t\tconst fn = DRACOWorker.toString();\n\n\t\t\t\tconst body = [\n\t\t\t\t\t'/* draco decoder */',\n\t\t\t\t\tjsContent,\n\t\t\t\t\t'',\n\t\t\t\t\t'/* worker */',\n\t\t\t\t\tfn.substring( fn.indexOf( '{' ) + 1, fn.lastIndexOf( '}' ) )\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tthis.workerSourceURL = URL.createObjectURL( new Blob( [ body ] ) );\n\n\t\t\t} );\n\n\t\treturn this.decoderPending;\n\n\t}\n\n\t_getWorker( taskID, taskCost ) {\n\n\t\treturn this._initDecoder().then( () => {\n\n\t\t\tif ( this.workerPool.length < this.workerLimit ) {\n\n\t\t\t\tconst worker = new Worker( this.workerSourceURL );\n\n\t\t\t\tworker._callbacks = {};\n\t\t\t\tworker._taskCosts = {};\n\t\t\t\tworker._taskLoad = 0;\n\n\t\t\t\tworker.postMessage( { type: 'init', decoderConfig: this.decoderConfig } );\n\n\t\t\t\tworker.onmessage = function ( e ) {\n\n\t\t\t\t\tconst message = e.data;\n\n\t\t\t\t\tswitch ( message.type ) {\n\n\t\t\t\t\t\tcase 'decode':\n\t\t\t\t\t\t\tworker._callbacks[ message.id ].resolve( message );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'error':\n\t\t\t\t\t\t\tworker._callbacks[ message.id ].reject( message );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.DRACOLoader: Unexpected message, \"' + message.type + '\"' );\n\n\t\t\t\t\t}\n\n\t\t\t\t};\n\n\t\t\t\tthis.workerPool.push( worker );\n\n\t\t\t} else {\n\n\t\t\t\tthis.workerPool.sort( function ( a, b ) {\n\n\t\t\t\t\treturn a._taskLoad > b._taskLoad ? - 1 : 1;\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tconst worker = this.workerPool[ this.workerPool.length - 1 ];\n\t\t\tworker._taskCosts[ taskID ] = taskCost;\n\t\t\tworker._taskLoad += taskCost;\n\t\t\treturn worker;\n\n\t\t} );\n\n\t}\n\n\t_releaseTask( worker, taskID ) {\n\n\t\tworker._taskLoad -= worker._taskCosts[ taskID ];\n\t\tdelete worker._callbacks[ taskID ];\n\t\tdelete worker._taskCosts[ taskID ];\n\n\t}\n\n\tdebug() {\n\n\t\tconsole.log( 'Task load: ', this.workerPool.map( ( worker ) => worker._taskLoad ) );\n\n\t}\n\n\tdispose() {\n\n\t\tfor ( let i = 0; i < this.workerPool.length; ++ i ) {\n\n\t\t\tthis.workerPool[ i ].terminate();\n\n\t\t}\n\n\t\tthis.workerPool.length = 0;\n\n\t\treturn this;\n\n\t}\n\n}\n\n/* WEB WORKER */\n\nfunction DRACOWorker() {\n\n\tlet decoderConfig;\n\tlet decoderPending;\n\n\tonmessage = function ( e ) {\n\n\t\tconst message = e.data;\n\n\t\tswitch ( message.type ) {\n\n\t\t\tcase 'init':\n\t\t\t\tdecoderConfig = message.decoderConfig;\n\t\t\t\tdecoderPending = new Promise( function ( resolve/*, reject*/ ) {\n\n\t\t\t\t\tdecoderConfig.onModuleLoaded = function ( draco ) {\n\n\t\t\t\t\t\t// Module is Promise-like. Wrap before resolving to avoid loop.\n\t\t\t\t\t\tresolve( { draco: draco } );\n\n\t\t\t\t\t};\n\n\t\t\t\t\tDracoDecoderModule( decoderConfig ); // eslint-disable-line no-undef\n\n\t\t\t\t} );\n\t\t\t\tbreak;\n\n\t\t\tcase 'decode':\n\t\t\t\tconst buffer = message.buffer;\n\t\t\t\tconst taskConfig = message.taskConfig;\n\t\t\t\tdecoderPending.then( ( module ) => {\n\n\t\t\t\t\tconst draco = module.draco;\n\t\t\t\t\tconst decoder = new draco.Decoder();\n\t\t\t\t\tconst decoderBuffer = new draco.DecoderBuffer();\n\t\t\t\t\tdecoderBuffer.Init( new Int8Array( buffer ), buffer.byteLength );\n\n\t\t\t\t\ttry {\n\n\t\t\t\t\t\tconst geometry = decodeGeometry( draco, decoder, decoderBuffer, taskConfig );\n\n\t\t\t\t\t\tconst buffers = geometry.attributes.map( ( attr ) => attr.array.buffer );\n\n\t\t\t\t\t\tif ( geometry.index ) buffers.push( geometry.index.array.buffer );\n\n\t\t\t\t\t\tself.postMessage( { type: 'decode', id: message.id, geometry }, buffers );\n\n\t\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\t\tconsole.error( error );\n\n\t\t\t\t\t\tself.postMessage( { type: 'error', id: message.id, error: error.message } );\n\n\t\t\t\t\t} finally {\n\n\t\t\t\t\t\tdraco.destroy( decoderBuffer );\n\t\t\t\t\t\tdraco.destroy( decoder );\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t};\n\n\tfunction decodeGeometry( draco, decoder, decoderBuffer, taskConfig ) {\n\n\t\tconst attributeIDs = taskConfig.attributeIDs;\n\t\tconst attributeTypes = taskConfig.attributeTypes;\n\n\t\tlet dracoGeometry;\n\t\tlet decodingStatus;\n\n\t\tconst geometryType = decoder.GetEncodedGeometryType( decoderBuffer );\n\n\t\tif ( geometryType === draco.TRIANGULAR_MESH ) {\n\n\t\t\tdracoGeometry = new draco.Mesh();\n\t\t\tdecodingStatus = decoder.DecodeBufferToMesh( decoderBuffer, dracoGeometry );\n\n\t\t} else if ( geometryType === draco.POINT_CLOUD ) {\n\n\t\t\tdracoGeometry = new draco.PointCloud();\n\t\t\tdecodingStatus = decoder.DecodeBufferToPointCloud( decoderBuffer, dracoGeometry );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.DRACOLoader: Unexpected geometry type.' );\n\n\t\t}\n\n\t\tif ( ! decodingStatus.ok() || dracoGeometry.ptr === 0 ) {\n\n\t\t\tthrow new Error( 'THREE.DRACOLoader: Decoding failed: ' + decodingStatus.error_msg() );\n\n\t\t}\n\n\t\tconst geometry = { index: null, attributes: [] };\n\n\t\t// Gather all vertex attributes.\n\t\tfor ( const attributeName in attributeIDs ) {\n\n\t\t\tconst attributeType = self[ attributeTypes[ attributeName ] ];\n\n\t\t\tlet attribute;\n\t\t\tlet attributeID;\n\n\t\t\t// A Draco file may be created with default vertex attributes, whose attribute IDs\n\t\t\t// are mapped 1:1 from their semantic name (POSITION, NORMAL, ...). Alternatively,\n\t\t\t// a Draco file may contain a custom set of attributes, identified by known unique\n\t\t\t// IDs. glTF files always do the latter, and `.drc` files typically do the former.\n\t\t\tif ( taskConfig.useUniqueIDs ) {\n\n\t\t\t\tattributeID = attributeIDs[ attributeName ];\n\t\t\t\tattribute = decoder.GetAttributeByUniqueId( dracoGeometry, attributeID );\n\n\t\t\t} else {\n\n\t\t\t\tattributeID = decoder.GetAttributeId( dracoGeometry, draco[ attributeIDs[ attributeName ] ] );\n\n\t\t\t\tif ( attributeID === - 1 ) continue;\n\n\t\t\t\tattribute = decoder.GetAttribute( dracoGeometry, attributeID );\n\n\t\t\t}\n\n\t\t\tgeometry.attributes.push( decodeAttribute( draco, decoder, dracoGeometry, attributeName, attributeType, attribute ) );\n\n\t\t}\n\n\t\t// Add index.\n\t\tif ( geometryType === draco.TRIANGULAR_MESH ) {\n\n\t\t\tgeometry.index = decodeIndex( draco, decoder, dracoGeometry );\n\n\t\t}\n\n\t\tdraco.destroy( dracoGeometry );\n\n\t\treturn geometry;\n\n\t}\n\n\tfunction decodeIndex( draco, decoder, dracoGeometry ) {\n\n\t\tconst numFaces = dracoGeometry.num_faces();\n\t\tconst numIndices = numFaces * 3;\n\t\tconst byteLength = numIndices * 4;\n\n\t\tconst ptr = draco._malloc( byteLength );\n\t\tdecoder.GetTrianglesUInt32Array( dracoGeometry, byteLength, ptr );\n\t\tconst index = new Uint32Array( draco.HEAPF32.buffer, ptr, numIndices ).slice();\n\t\tdraco._free( ptr );\n\n\t\treturn { array: index, itemSize: 1 };\n\n\t}\n\n\tfunction decodeAttribute( draco, decoder, dracoGeometry, attributeName, attributeType, attribute ) {\n\n\t\tconst numComponents = attribute.num_components();\n\t\tconst numPoints = dracoGeometry.num_points();\n\t\tconst numValues = numPoints * numComponents;\n\t\tconst byteLength = numValues * attributeType.BYTES_PER_ELEMENT;\n\t\tconst dataType = getDracoDataType( draco, attributeType );\n\n\t\tconst ptr = draco._malloc( byteLength );\n\t\tdecoder.GetAttributeDataArrayForAllPoints( dracoGeometry, attribute, dataType, byteLength, ptr );\n\t\tconst array = new attributeType( draco.HEAPF32.buffer, ptr, numValues ).slice();\n\t\tdraco._free( ptr );\n\n\t\treturn {\n\t\t\tname: attributeName,\n\t\t\tarray: array,\n\t\t\titemSize: numComponents\n\t\t};\n\n\t}\n\n\tfunction getDracoDataType( draco, attributeType ) {\n\n\t\tswitch ( attributeType ) {\n\n\t\t\tcase Float32Array: return draco.DT_FLOAT32;\n\t\t\tcase Int8Array: return draco.DT_INT8;\n\t\t\tcase Int16Array: return draco.DT_INT16;\n\t\t\tcase Int32Array: return draco.DT_INT32;\n\t\t\tcase Uint8Array: return draco.DT_UINT8;\n\t\t\tcase Uint16Array: return draco.DT_UINT16;\n\t\t\tcase Uint32Array: return draco.DT_UINT32;\n\n\t\t}\n\n\t}\n\n}\n\nexport { DRACOLoader };\n"],"names":["sence","Three","camera","window","innerWidth","innerHeight","background","clock","position","set","add","renderer","controls","OrbitControls","domElement","target","update","enableDamping","setSize","mixer","curAction","animations","actionName","container","useRef","newAni","idx","kes","Object","keys","Math","floor","random","length","name","toLocaleLowerCase","clip","undefined","action","clipAction","clampWhenFinished","setLoop","reset","nofade","play","enabled","crossFadeTo","setAction","setTimeout","onWindowResize","width","height","aspect","updateProjectionMatrix","refresh","time","dt","getDelta","render","requestAnimationFrame","useEffect","ambient","initLight","loader","GLTFLoader","dracoLoader","DRACOLoader","setDecoderPath","setDRACOLoader","load","require","glft","scene","forEach","ani","initEve","addEventListener","current","appendChild","_jsx","ref","_taskCache","WeakMap","_Loader","_inherits","_super","_createSuper","manager","_this","_classCallCheck","call","decoderPath","decoderConfig","decoderBinary","decoderPending","workerLimit","workerPool","workerNextTaskID","workerSourceURL","defaultAttributeIDs","normal","color","uv","defaultAttributeTypes","_createClass","key","value","path","this","config","url","onLoad","onProgress","onError","_this2","FileLoader","setPath","setResponseType","setRequestHeader","requestHeader","setWithCredentials","withCredentials","buffer","decodeDracoFile","catch","callback","attributeIDs","attributeTypes","taskConfig","useUniqueIDs","decodeGeometry","then","worker","_this3","taskKey","JSON","stringify","has","cachedTask","get","promise","byteLength","Error","taskID","taskCost","geometryPending","_getWorker","_worker","Promise","resolve","reject","_callbacks","postMessage","type","id","message","_createGeometry","geometry","_releaseTask","geometryData","BufferGeometry","index","setIndex","BufferAttribute","array","i","attributes","attribute","itemSize","setAttribute","responseType","_initDecoder","_this4","useJS","WebAssembly","librariesPending","push","_loadLibrary","all","libraries","jsContent","wasmBinary","fn","DRACOWorker","toString","body","substring","indexOf","lastIndexOf","join","URL","createObjectURL","Blob","_this5","Worker","_taskCosts","_taskLoad","onmessage","e","data","console","error","sort","a","b","log","map","terminate","Loader","decodeAttribute","draco","decoder","dracoGeometry","attributeName","attributeType","numComponents","num_components","numValues","num_points","BYTES_PER_ELEMENT","dataType","Float32Array","DT_FLOAT32","Int8Array","DT_INT8","Int16Array","DT_INT16","Int32Array","DT_INT32","Uint8Array","DT_UINT8","Uint16Array","DT_UINT16","Uint32Array","DT_UINT32","getDracoDataType","ptr","_malloc","GetAttributeDataArrayForAllPoints","HEAPF32","slice","_free","onModuleLoaded","DracoDecoderModule","module","Decoder","decoderBuffer","DecoderBuffer","Init","decodingStatus","geometryType","GetEncodedGeometryType","TRIANGULAR_MESH","Mesh","DecodeBufferToMesh","POINT_CLOUD","PointCloud","DecodeBufferToPointCloud","ok","error_msg","self","attributeID","GetAttributeByUniqueId","GetAttributeId","GetAttribute","numFaces","num_faces","numIndices","GetTrianglesUInt32Array","decodeIndex","destroy","buffers","attr"],"sourceRoot":""}