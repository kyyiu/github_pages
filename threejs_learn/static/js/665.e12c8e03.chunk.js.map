{"version":3,"file":"static/js/665.e12c8e03.chunk.js","mappings":"2LAIMA,EAAQ,IAAIC,EAAAA,IACZC,EAAS,IAAID,EAAAA,IAAwB,GAAIE,OAAOC,WAAWD,OAAOE,YAAa,GAAK,KAC1FH,EAAOI,SAASC,EAAI,EAEpB,IAAMC,EAAW,IAAIP,EAAAA,IAAkB,GAAI,GAAI,IAIzCQ,EAAO,CACXC,EAAQ,MACRA,EAAQ,MACRA,EAAQ,MACRA,EAAQ,MACRA,EAAQ,MACRA,EAAQ,OAEJC,EAAgB,GACtBF,EAAKG,SAAQ,SAAAC,GACX,IAAMC,GAAU,IAAIb,EAAAA,KAAsBc,KAAKF,GAC/CF,EAAcK,KAAK,IAAIf,EAAAA,IAAwB,CAC7CgB,IAAKH,IAET,IACA,IAAMI,EAAS,IAAIjB,EAAAA,IAAWO,EAAUG,GACxCO,EAAOV,SAASW,MAAM,EAAG,GAAI,GAC7BnB,EAAMoB,IAAIF,GAEV,IAAMG,EAAW,IAAIpB,EAAAA,IAGN,cAEbqB,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAMC,SAASC,cAAc,WAClB,IAAIC,EAAAA,EAAcxB,EAAQqB,GAClCI,eAAgB,EACzBJ,EAAIK,YAAYP,EAASQ,YACzBC,GACF,GAAG,IAEH,IAAMA,EAAY,SAAZA,IACJT,EAASU,OAAO/B,EAAOE,GACvB8B,sBAAsBF,EACxB,EAEA,OAAOG,EAAAA,EAAAA,KAAA,OAAKC,UAAU,UACxB,CAlBAb,EAASc,QAAQhC,OAAOC,WAAYD,OAAOE,Y","sources":["practice/vr_house/vrHouse.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport * as Three from 'three';\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\n\r\nconst scene = new Three.Scene();\r\nconst camera = new Three.PerspectiveCamera(75, window.innerWidth/window.innerHeight, 0.1, 1000);\r\ncamera.position.z = 5;\r\n\r\nconst geometry = new Three.BoxGeometry(10, 10, 10);\r\n// const material = new Three.MeshBasicMaterial({color: 0xffffff});\r\n// const cube = new Three.Mesh(geometry, material);\r\n// scene.add(cube)\r\nconst imgs = [\r\n  require(`./multiple_imgs/room1/home.right.jpg`), \r\n  require(`./multiple_imgs/room1/home.left.jpg`), \r\n  require(`./multiple_imgs/room1/home.top.jpg`), \r\n  require(`./multiple_imgs/room1/home.bottom.jpg`), \r\n  require(`./multiple_imgs/room1/home.front.jpg`), \r\n  require(`./multiple_imgs/room1/home.back.jpg`)\r\n];\r\nconst cubeMaterials = [];\r\nimgs.forEach(e => {\r\n  const texture = new Three.TextureLoader().load(e)\r\n  cubeMaterials.push(new Three.MeshBasicMaterial({\r\n    map: texture\r\n  }))\r\n})\r\nconst skyBox = new Three.Mesh(geometry, cubeMaterials)\r\nskyBox.geometry.scale(1, 1, -1)\r\nscene.add(skyBox);\r\n\r\nconst renderer = new Three.WebGL1Renderer();\r\nrenderer.setSize(window.innerWidth, window.innerHeight);\r\n\r\nexport default function() {\r\n\r\n  useEffect(() => {\r\n    const dom = document.querySelector(\".canvas\");\r\n    const controls = new OrbitControls(camera, dom);\r\n    controls.enableDamping = true;\r\n    dom.appendChild(renderer.domElement);\r\n    animation();\r\n  }, []);\r\n\r\n  const animation = function() {\r\n    renderer.render(scene, camera);\r\n    requestAnimationFrame(animation);\r\n  }\r\n\r\n  return <div className=\"canvas\"></div>\r\n}"],"names":["scene","Three","camera","window","innerWidth","innerHeight","position","z","geometry","imgs","require","cubeMaterials","forEach","e","texture","load","push","map","skyBox","scale","add","renderer","useEffect","dom","document","querySelector","OrbitControls","enableDamping","appendChild","domElement","animation","render","requestAnimationFrame","_jsx","className","setSize"],"sourceRoot":""}