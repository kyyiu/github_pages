{"version":3,"file":"static/js/946.26107289.chunk.js","mappings":"oJAIIA,EAAUC,EAAOC,EAAQC,E,uCAAMC,GAAY,EAAOC,GAAU,EAEjD,aACX,IAAMC,GAAYC,EAAAA,EAAAA,UAuClB,SAASC,EAAUC,GACjBA,EAAEC,iBACFN,GAAaA,CACf,CAOA,SAASO,EAAQC,GACfZ,EAASa,OAAOZ,EAAOC,GACnBE,IACFD,EAAKW,SAASC,GAAK,KAErBC,OAAOC,sBAAsBN,EAC/B,CAEA,OAvDAO,EAAAA,EAAAA,YAAU,WACR,IAAIb,EAAJ,CACAJ,EAAQ,IAAIkB,EAAAA,KACZjB,EAAS,IAAIiB,EAAAA,IACT,GACAb,EAAUc,QAAQC,YAAcf,EAAUc,QAAQE,aAClD,EACA,MAGGC,SAASC,IAAI,EAAE,EAAE,GACxBvB,EAAMwB,IAAIvB,GAEV,IAAMwB,EAAQ,IAAIP,EAAAA,IAAuB,SAAU,KACnDO,EAAMH,SAASC,IAAI,EAAG,EAAG,GACzBvB,EAAMwB,IAAIC,GACV,IACMC,GADS,IAAIR,EAAAA,KACMS,KAAKC,EAAQ,OAChCC,EAAW,IAAIX,EAAAA,IAAwB,CAACY,IAAKJ,IAE7CK,EAAW,IAAIb,EAAAA,IAAkB,EAAE,EAAE,IAC3ChB,EAAO,IAAIgB,EAAAA,IAAWa,EAAUF,IAC3BhB,SAASmB,EAAIC,KAAKC,GAAG,EAC1BhC,EAAKW,SAASC,EAAImB,KAAKC,GAAG,EAC1BlC,EAAMwB,IAAItB,IACVH,EAAW,IAAImB,EAAAA,IAAoB,CAACiB,WAAW,EAAMC,OAAO,KACnDC,cAAc,IAiBXtC,EAASuC,WACjBC,iBAAiB,UAAWhC,GAAW,GAhB1B,IAAIiC,EAAAA,EAAcvC,EAAQF,EAASuC,YAE3CG,eAAgB,EACzB1C,EAAS2C,QAAQrC,EAAUc,QAAQC,YAAaf,EAAUc,QAAQE,cAClEhB,EAAUc,QAAQwB,YAAY5C,EAASuC,YACvClC,GAAU,EACVM,GAjCmB,CAkCrB,GAAG,KAoBIkC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACLC,EAAAA,EAAAA,KAAA,UAAAD,UAAQC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,uBACZC,EAAAA,EAAAA,KAAA,OACEC,GAAG,MACHC,MAAO,CAACC,MAAO,OAAQC,OAAQ,MAAO5B,SAAU,WAAW6B,QAAS,GACpEC,IAAK/C,KACPyC,EAAAA,EAAAA,KAAA,OACEE,MAAO,CAACC,MAAO,OAASC,OAAQ,KAAMG,OAAQ,EAAG/B,SAAU,WAAYgC,MAAO,OAAQC,UAAW,UAAUV,SAAC,gCAIlH,C","sources":["practice/interactive/clickItem.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport * as Three from 'three'\r\nimport {OrbitControls} from 'three/examples/jsm/controls/OrbitControls'\r\n\r\nlet renderer, sence, camera, cube, animating = false, mounted = false;\r\n\r\nexport default function() {\r\n    const container = useRef()\r\n  \r\n    useEffect(() => {\r\n      if (mounted) return\r\n      sence = new Three.Scene();\r\n      camera = new Three.PerspectiveCamera(\r\n          45,\r\n          container.current.offsetWidth / container.current.offsetHeight,\r\n          1,\r\n          4000\r\n      )\r\n      \r\n      camera.position.set(0,0,3)\r\n      sence.add(camera)\r\n\r\n      const light = new Three.DirectionalLight(0xffffff, 1.5)\r\n      light.position.set(0, 0, 1)\r\n      sence.add(light)\r\n      const loader = new Three.TextureLoader();\r\n      const texture1  = loader.load(require(\"../../assets/img/react_logo.png\"));\r\n      const material = new Three.MeshPhongMaterial({map: texture1})\r\n      \r\n      const geometry = new Three.BoxGeometry(1,1,1)\r\n      cube = new Three.Mesh(geometry, material)\r\n      cube.rotation.x = Math.PI/5;\r\n      cube.rotation.y = Math.PI/5;\r\n      sence.add(cube)\r\n      renderer = new Three.WebGLRenderer({antialias: true, alpha: true})\r\n      renderer.setClearAlpha(0.5)\r\n      addMouseHandler()\r\n      const controls = new OrbitControls(camera, renderer.domElement)\r\n      // 设置阻尼，让控制器更真实, 必须在动画循环调用update方法\r\n      controls.enableDamping = true\r\n      renderer.setSize(container.current.offsetWidth, container.current.offsetHeight)\r\n      container.current.appendChild(renderer.domElement)\r\n      mounted = true;\r\n      refresh()\r\n    }, [])\r\n\r\n    function onMouseUp(e) {\r\n      e.preventDefault();\r\n      animating = !animating\r\n    }\r\n\r\n    function addMouseHandler() {\r\n      const dom = renderer.domElement;\r\n      dom.addEventListener(\"mouseup\", onMouseUp, false)\r\n    }\r\n\r\n    function refresh(time) {\r\n      renderer.render(sence, camera)\r\n      if (animating) {\r\n        cube.rotation.y -= 0.01\r\n      }\r\n      window.requestAnimationFrame(refresh)\r\n    }\r\n  \r\n    return <div>\r\n      <center><h1>Welcom To WebGL</h1></center>\r\n      <div\r\n        id=\"ccc\"\r\n        style={{width: \"100%\", height: \"90%\", position: \"absolute\",zIndex: -1}}\r\n        ref={container}></div>\r\n      <div \r\n        style={{width: \"100%\",  height: \"6%\", bottom: 0, position: \"absolute\", color: \"#fff\", textAlign: \"center\"}}>\r\n        Click to animate the cube    \r\n      </div>\r\n    </div>\r\n  }"],"names":["renderer","sence","camera","cube","animating","mounted","container","useRef","onMouseUp","e","preventDefault","refresh","time","render","rotation","y","window","requestAnimationFrame","useEffect","Three","current","offsetWidth","offsetHeight","position","set","add","light","texture1","load","require","material","map","geometry","x","Math","PI","antialias","alpha","setClearAlpha","domElement","addEventListener","OrbitControls","enableDamping","setSize","appendChild","_jsxs","children","_jsx","id","style","width","height","zIndex","ref","bottom","color","textAlign"],"sourceRoot":""}