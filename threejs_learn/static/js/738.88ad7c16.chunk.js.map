{"version":3,"file":"static/js/738.88ad7c16.chunk.js","mappings":"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","sources":["../node_modules/three/examples/jsm/controls/OrbitControls.js"],"sourcesContent":["import {\n\tEventDispatcher,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3\n} from 'three';\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: 'change' };\nconst _startEvent = { type: 'start' };\nconst _endEvent = { type: 'end' };\n\nclass OrbitControls extends EventDispatcher {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper();\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\tthis.target = new Vector3();\n\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.05;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.panSpeed = 1.0;\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t// Touch fingers\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t// for reset\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t//\n\t\t// public methods\n\t\t//\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn spherical.phi;\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn spherical.theta;\n\n\t\t};\n\n\t\tthis.getDistance = function () {\n\n\t\t\treturn this.object.position.distanceTo( this.target );\n\n\t\t};\n\n\t\tthis.listenToKeyEvents = function ( domElement ) {\n\n\t\t\tdomElement.addEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = domElement;\n\n\t\t};\n\n\t\tthis.saveState = function () {\n\n\t\t\tscope.target0.copy( scope.target );\n\t\t\tscope.position0.copy( scope.object.position );\n\t\t\tscope.zoom0 = scope.object.zoom;\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tscope.target.copy( scope.target0 );\n\t\t\tscope.object.position.copy( scope.position0 );\n\t\t\tscope.object.zoom = scope.zoom0;\n\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\tscope.update();\n\n\t\t\tstate = STATE.NONE;\n\n\t\t};\n\n\t\t// this method is exposed, but perhaps it would be better if we can make it private...\n\t\tthis.update = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\t// so camera.up is the orbit axis\n\t\t\tconst quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\t\tconst quatInverse = quat.clone().invert();\n\n\t\t\tconst lastPosition = new Vector3();\n\t\t\tconst lastQuaternion = new Quaternion();\n\n\t\t\tconst twoPI = 2 * Math.PI;\n\n\t\t\treturn function update() {\n\n\t\t\t\tconst position = scope.object.position;\n\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t\t// angle from z-axis around y-axis\n\t\t\t\tspherical.setFromVector3( offset );\n\n\t\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t\t}\n\n\t\t\t\t// restrict theta to be between desired limits\n\n\t\t\t\tlet min = scope.minAzimuthAngle;\n\t\t\t\tlet max = scope.maxAzimuthAngle;\n\n\t\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\n\n\t\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\n\n\t\t\t\t\tif ( min <= max ) {\n\n\t\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\t\t\tMath.max( min, spherical.theta ) :\n\t\t\t\t\t\t\tMath.min( max, spherical.theta );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\t\tspherical.makeSafe();\n\n\n\t\t\t\tspherical.radius *= scale;\n\n\t\t\t\t// restrict radius to be between desired limits\n\t\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t\t// move target to panned location\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t\t}\n\n\t\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t\tscale = 1;\n\n\t\t\t\t// update condition is:\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\t\tzoomChanged = false;\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t}();\n\n\t\tthis.dispose = function () {\n\n\t\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\n\n\t\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\n\t\t\tscope.domElement.removeEventListener( 'pointercancel', onPointerCancel );\n\t\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\n\n\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\n\t\t\tif ( scope._domElementKeyEvents !== null ) {\n\n\t\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\n\t\t\t}\n\n\t\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t\t};\n\n\t\t//\n\t\t// internals\n\t\t//\n\n\t\tconst scope = this;\n\n\t\tconst STATE = {\n\t\t\tNONE: - 1,\n\t\t\tROTATE: 0,\n\t\t\tDOLLY: 1,\n\t\t\tPAN: 2,\n\t\t\tTOUCH_ROTATE: 3,\n\t\t\tTOUCH_PAN: 4,\n\t\t\tTOUCH_DOLLY_PAN: 5,\n\t\t\tTOUCH_DOLLY_ROTATE: 6\n\t\t};\n\n\t\tlet state = STATE.NONE;\n\n\t\tconst EPS = 0.000001;\n\n\t\t// current position in spherical coordinates\n\t\tconst spherical = new Spherical();\n\t\tconst sphericalDelta = new Spherical();\n\n\t\tlet scale = 1;\n\t\tconst panOffset = new Vector3();\n\t\tlet zoomChanged = false;\n\n\t\tconst rotateStart = new Vector2();\n\t\tconst rotateEnd = new Vector2();\n\t\tconst rotateDelta = new Vector2();\n\n\t\tconst panStart = new Vector2();\n\t\tconst panEnd = new Vector2();\n\t\tconst panDelta = new Vector2();\n\n\t\tconst dollyStart = new Vector2();\n\t\tconst dollyEnd = new Vector2();\n\t\tconst dollyDelta = new Vector2();\n\n\t\tconst pointers = [];\n\t\tconst pointerPositions = {};\n\n\t\tfunction getAutoRotationAngle() {\n\n\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t}\n\n\t\tfunction getZoomScale() {\n\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t\t}\n\n\t\tfunction rotateLeft( angle ) {\n\n\t\t\tsphericalDelta.theta -= angle;\n\n\t\t}\n\n\t\tfunction rotateUp( angle ) {\n\n\t\t\tsphericalDelta.phi -= angle;\n\n\t\t}\n\n\t\tconst panLeft = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\t\tv.multiplyScalar( - distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\tconst panUp = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t\t}\n\n\t\t\t\tv.multiplyScalar( distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// deltaX and deltaY are in pixels; right and down are positive\n\t\tconst pan = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\t\tconst element = scope.domElement;\n\n\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t// perspective\n\t\t\t\t\tconst position = scope.object.position;\n\t\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\t\tlet targetDistance = offset.length();\n\n\t\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t// orthographic\n\t\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\t\tscope.enablePan = false;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}();\n\n\t\tfunction dollyOut( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale /= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction dollyIn( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale *= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\t\t// event callbacks - update the object state\n\t\t//\n\n\t\tfunction handleMouseDownRotate( event ) {\n\n\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownDolly( event ) {\n\n\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownPan( event ) {\n\n\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseMoveRotate( event ) {\n\n\t\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMoveDolly( event ) {\n\n\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMovePan( event ) {\n\n\t\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseWheel( event ) {\n\n\t\t\tif ( event.deltaY < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleKeyDown( event ) {\n\n\t\t\tlet needsUpdate = false;\n\n\t\t\tswitch ( event.code ) {\n\n\t\t\t\tcase scope.keys.UP:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateUp( 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.BOTTOM:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateUp( - 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.LEFT:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateLeft( 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.RIGHT:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateLeft( - 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tscope.update();\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tfunction handleTouchStartRotate() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\trotateStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\trotateStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartPan() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\tpanStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartDolly() {\n\n\t\t\tconst dx = pointers[ 0 ].pageX - pointers[ 1 ].pageX;\n\t\t\tconst dy = pointers[ 0 ].pageY - pointers[ 1 ].pageY;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyPan() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enablePan ) handleTouchStartPan();\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyRotate() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enableRotate ) handleTouchStartRotate();\n\n\t\t}\n\n\t\tfunction handleTouchMoveRotate( event ) {\n\n\t\t\tif ( pointers.length == 1 ) {\n\n\t\t\t\trotateEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\trotateEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMovePan( event ) {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\tpanEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDolly( event ) {\n\n\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\tconst dx = event.pageX - position.x;\n\t\t\tconst dy = event.pageY - position.y;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\t\tdollyOut( dollyDelta.y );\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t\t}\n\n\t\t//\n\t\t// event handlers - FSM: listen for events and reset state\n\t\t//\n\n\t\tfunction onPointerDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.setPointerCapture( event.pointerId );\n\n\t\t\t\tscope.domElement.addEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.addEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\taddPointer( event );\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchStart( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseDown( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchMove( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseMove( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerUp( event ) {\n\n\t\t    removePointer( event );\n\n\t\t    if ( pointers.length === 0 ) {\n\n\t\t        scope.domElement.releasePointerCapture( event.pointerId );\n\n\t\t        scope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t        scope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\t\t    }\n\n\t\t    scope.dispatchEvent( _endEvent );\n\n\t\t    state = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onPointerCancel( event ) {\n\n\t\t\tremovePointer( event );\n\n\t\t}\n\n\t\tfunction onMouseDown( event ) {\n\n\t\t\tlet mouseAction;\n\n\t\t\tswitch ( event.button ) {\n\n\t\t\t\tcase 0:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tmouseAction = - 1;\n\n\t\t\t}\n\n\t\t\tswitch ( mouseAction ) {\n\n\t\t\t\tcase MOUSE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.PAN:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseWheel( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\thandleMouseWheel( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t}\n\n\t\tfunction onKeyDown( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\n\n\t\t\thandleKeyDown( event );\n\n\t\t}\n\n\t\tfunction onTouchStart( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( pointers.length ) {\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchMove( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onContextMenu( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t}\n\n\t\tfunction addPointer( event ) {\n\n\t\t\tpointers.push( event );\n\n\t\t}\n\n\t\tfunction removePointer( event ) {\n\n\t\t\tdelete pointerPositions[ event.pointerId ];\n\n\t\t\tfor ( let i = 0; i < pointers.length; i ++ ) {\n\n\t\t\t\tif ( pointers[ i ].pointerId == event.pointerId ) {\n\n\t\t\t\t\tpointers.splice( i, 1 );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction trackPointer( event ) {\n\n\t\t\tlet position = pointerPositions[ event.pointerId ];\n\n\t\t\tif ( position === undefined ) {\n\n\t\t\t\tposition = new Vector2();\n\t\t\t\tpointerPositions[ event.pointerId ] = position;\n\n\t\t\t}\n\n\t\t\tposition.set( event.pageX, event.pageY );\n\n\t\t}\n\n\t\tfunction getSecondPointerPosition( event ) {\n\n\t\t\tconst pointer = ( event.pointerId === pointers[ 0 ].pointerId ) ? pointers[ 1 ] : pointers[ 0 ];\n\n\t\t\treturn pointerPositions[ pointer.pointerId ];\n\n\t\t}\n\n\t\t//\n\n\t\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\n\n\t\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\n\t\tscope.domElement.addEventListener( 'pointercancel', onPointerCancel );\n\t\tscope.domElement.addEventListener( 'wheel', onMouseWheel, { passive: false } );\n\n\t\t// force an update at start\n\n\t\tthis.update();\n\n\t}\n\n}\n\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nclass MapControls extends OrbitControls {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper( object, domElement );\n\n\t\tthis.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n\t\tthis.mouseButtons.LEFT = MOUSE.PAN;\n\t\tthis.mouseButtons.RIGHT = MOUSE.ROTATE;\n\n\t\tthis.touches.ONE = TOUCH.PAN;\n\t\tthis.touches.TWO = TOUCH.DOLLY_ROTATE;\n\n\t}\n\n}\n\nexport { OrbitControls, MapControls };\n"],"names":["_changeEvent","type","_startEvent","_endEvent","OrbitControls","_EventDispatcher","_inherits","_super","_createSuper","object","domElement","_this","_classCallCheck","call","style","touchAction","enabled","target","Vector3","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","MOUSE","MIDDLE","touches","ONE","TOUCH","TWO","target0","clone","position0","position","zoom0","zoom","_domElementKeyEvents","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","getDistance","this","distanceTo","listenToKeyEvents","addEventListener","onKeyDown","saveState","scope","copy","reset","updateProjectionMatrix","dispatchEvent","update","state","STATE","NONE","offset","quat","Quaternion","setFromUnitVectors","up","quatInverse","invert","lastPosition","lastQuaternion","twoPI","sub","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","min","max","isFinite","makeSafe","radius","scale","addScaledVector","panOffset","add","setFromSpherical","lookAt","multiplyScalar","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","dispose","removeEventListener","onContextMenu","onPointerDown","onPointerCancel","onMouseWheel","onPointerMove","onPointerUp","_assertThisInitialized","ROTATE","DOLLY","PAN","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","Spherical","rotateStart","Vector2","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","getZoomScale","pow","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","length","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","console","warn","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","event","clientX","clientY","handleMouseDownPan","handleTouchStartRotate","pageX","pageY","x","y","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchMoveRotate","getSecondPointerPosition","subVectors","handleTouchMovePan","handleTouchMoveDolly","setPointerCapture","pointerId","push","addPointer","pointerType","trackPointer","onTouchStart","mouseAction","button","handleMouseDownDolly","ctrlKey","metaKey","shiftKey","onMouseDown","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","onTouchMove","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","onMouseMove","removePointer","releasePointerCapture","preventDefault","handleMouseWheel","needsUpdate","code","handleKeyDown","i","splice","undefined","pointer","passive","_createClass","EventDispatcher"],"sourceRoot":""}