{"version":3,"file":"static/js/101.8c6c692b.chunk.js","mappings":"wKACA,GAAgB,UAAY,wBAAwB,KAAO,mBAAmB,YAAc,0BAA0B,IAAM,kBAAkB,WAAa,yBAAyB,SAAW,uBAAuB,YAAc,0BAA0B,QAAU,sBAAsB,SAAW,uBAAuB,OAAS,qBAAqB,cAAgB,6BCW/V,SAASA,EAAUC,GAClC,IAAMC,EAAcD,GAAU,GACxBE,EAbS,CACXC,QAAUC,SAASC,eAAgB,WACnCC,UAAYF,SAASC,eAAgB,aACrCE,SAAWH,SAASC,eAAgB,YACpCG,OAASJ,SAASC,eAAgB,UAClCI,MAAQL,SAASC,eAAgB,UASrC,IAAK,IAAMK,KAASR,EAEhBA,EAAOQ,GAAOV,OAASC,EAE3B,OAAOC,CACP,C,2CCFMS,EAAkB,gBAElBC,EAA4B,WAE5BC,EAAwB,WAExBC,EAAmB,WACnBC,EAAsC,MAEtCC,EAAM,IAAIC,EAAAA,IACVC,EAAM,IAAID,EAAAA,IACVE,EAAM,IAAIF,EAAAA,IAEVG,EAAM,IAAIH,EAAAA,IACVI,EAAM,IAAIJ,EAAAA,IAEVK,EAAS,IAAIC,EAAAA,IAEnB,SAASC,IAER,IAAMC,EAAQ,CACbC,QAAS,GACTC,OAAQ,CAAC,EAETC,SAAU,GACVC,QAAS,GACTC,OAAQ,GACRC,IAAK,GAELC,UAAW,CAAC,EACZC,kBAAmB,GAEnBC,YAAa,SAAWC,EAAMC,GAI7B,GAAKC,KAAKV,SAA0C,IAAhCU,KAAKV,OAAOS,gBAI/B,OAFAC,KAAKV,OAAOQ,KAAOA,OACnBE,KAAKV,OAAOS,iBAAwC,IAApBA,GAKjC,IAAME,EAAqBD,KAAKV,QAAiD,oBAAhCU,KAAKV,OAAOY,gBAAiCF,KAAKV,OAAOY,uBAAoBC,EA+H9H,GA7HKH,KAAKV,QAA2C,oBAA1BU,KAAKV,OAAOc,WAEtCJ,KAAKV,OAAOc,WAAW,GAIxBJ,KAAKV,OAAS,CACbQ,KAAMA,GAAQ,GACdC,iBAAuC,IAApBA,EAEnBM,SAAU,CACTd,SAAU,GACVC,QAAS,GACTC,OAAQ,GACRC,IAAK,GACLY,cAAc,GAEfX,UAAW,GACXY,QAAQ,EAERC,cAAe,SAAWV,EAAMW,GAE/B,IAAMC,EAAWV,KAAKI,WAAW,GAI5BM,IAAcA,EAASC,WAAaD,EAASE,YAAc,IAE/DZ,KAAKL,UAAUkB,OAAQH,EAASI,MAAO,GAIxC,IAAMC,EAAW,CAChBD,MAAOd,KAAKL,UAAUqB,OACtBlB,KAAMA,GAAQ,GACdmB,OAAUC,MAAMC,QAASV,IAAeA,EAAUO,OAAS,EAAIP,EAAWA,EAAUO,OAAS,GAAM,GACnGT,YAAuBJ,IAAbO,EAAyBA,EAASH,OAASP,KAAKO,OAC1Da,gBAA2BjB,IAAbO,EAAyBA,EAASW,SAAW,EAC3DA,UAAY,EACZT,YAAc,EACdD,WAAW,EAEXW,MAAO,SAAWR,GAEjB,IAAMS,EAAS,CACdT,MAA0B,kBAAVA,EAAqBA,EAAQd,KAAKc,MAClDhB,KAAME,KAAKF,KACXmB,OAAQjB,KAAKiB,OACbV,OAAQP,KAAKO,OACba,WAAY,EACZC,UAAY,EACZT,YAAc,EACdD,WAAW,GAGZ,OADAY,EAAOD,MAAQtB,KAAKsB,MAAME,KAAMD,GACzBA,CAER,GAKD,OAFAvB,KAAKL,UAAU8B,KAAMV,GAEdA,CAER,EAEAb,gBAAiB,WAEhB,GAAKF,KAAKL,UAAUqB,OAAS,EAE5B,OAAOhB,KAAKL,UAAWK,KAAKL,UAAUqB,OAAS,EAMjD,EAEAZ,UAAW,SAAWsB,GAErB,IAAMC,EAAoB3B,KAAKE,kBAU/B,GATKyB,IAAsD,IAAjCA,EAAkBN,WAE3CM,EAAkBN,SAAWrB,KAAKK,SAASd,SAASyB,OAAS,EAC7DW,EAAkBf,WAAae,EAAkBN,SAAWM,EAAkBP,WAC9EO,EAAkBhB,WAAY,GAK1Be,GAAO1B,KAAKL,UAAUqB,OAAS,EAEnC,IAAM,IAAIY,EAAK5B,KAAKL,UAAUqB,OAAS,EAAGY,GAAM,EAAGA,IAE7C5B,KAAKL,UAAWiC,GAAKhB,YAAc,GAEvCZ,KAAKL,UAAUkB,OAAQe,EAAI,GAkB9B,OATKF,GAAiC,IAA1B1B,KAAKL,UAAUqB,QAE1BhB,KAAKL,UAAU8B,KAAM,CACpB3B,KAAM,GACNS,OAAQP,KAAKO,SAKRoB,CAER,GASI1B,GAAoBA,EAAiBH,MAA0C,oBAA3BG,EAAiBqB,MAAuB,CAEhG,IAAMO,EAAW5B,EAAiBqB,MAAO,GACzCO,EAASlB,WAAY,EACrBX,KAAKV,OAAOK,UAAU8B,KAAMI,EAE7B,CAEA7B,KAAKX,QAAQoC,KAAMzB,KAAKV,OAEzB,EAEAwC,SAAU,WAEJ9B,KAAKV,QAA2C,oBAA1BU,KAAKV,OAAOc,WAEtCJ,KAAKV,OAAOc,WAAW,EAIzB,EAEA2B,iBAAkB,SAAWC,EAAOC,GAEnC,IAAMnB,EAAQoB,SAAUF,EAAO,IAC/B,OAAsD,GAA7ClB,GAAS,EAAIA,EAAQ,EAAIA,EAAQmB,EAAM,EAEjD,EAEAE,iBAAkB,SAAWH,EAAOC,GAEnC,IAAMnB,EAAQoB,SAAUF,EAAO,IAC/B,OAAsD,GAA7ClB,GAAS,EAAIA,EAAQ,EAAIA,EAAQmB,EAAM,EAEjD,EAEAG,aAAc,SAAWJ,EAAOC,GAE/B,IAAMnB,EAAQoB,SAAUF,EAAO,IAC/B,OAAsD,GAA7ClB,GAAS,EAAIA,EAAQ,EAAIA,EAAQmB,EAAM,EAEjD,EAEAI,UAAW,SAAWC,EAAGC,EAAGC,GAE3B,IAAMC,EAAMzC,KAAKT,SACXmD,EAAM1C,KAAKV,OAAOe,SAASd,SAEjCmD,EAAIjB,KAAMgB,EAAKH,EAAI,GAAKG,EAAKH,EAAI,GAAKG,EAAKH,EAAI,IAC/CI,EAAIjB,KAAMgB,EAAKF,EAAI,GAAKE,EAAKF,EAAI,GAAKE,EAAKF,EAAI,IAC/CG,EAAIjB,KAAMgB,EAAKD,EAAI,GAAKC,EAAKD,EAAI,GAAKC,EAAKD,EAAI,GAEhD,EAEAG,eAAgB,SAAWL,GAE1B,IAAMG,EAAMzC,KAAKT,SACLS,KAAKV,OAAOe,SAASd,SAE7BkC,KAAMgB,EAAKH,EAAI,GAAKG,EAAKH,EAAI,GAAKG,EAAKH,EAAI,GAEhD,EAEAM,cAAe,SAAWN,GAEzB,IAAMG,EAAMzC,KAAKT,SACLS,KAAKV,OAAOe,SAASd,SAE7BkC,KAAMgB,EAAKH,EAAI,GAAKG,EAAKH,EAAI,GAAKG,EAAKH,EAAI,GAEhD,EAEAO,UAAW,SAAWP,EAAGC,EAAGC,GAE3B,IAAMC,EAAMzC,KAAKR,QACXkD,EAAM1C,KAAKV,OAAOe,SAASb,QAEjCkD,EAAIjB,KAAMgB,EAAKH,EAAI,GAAKG,EAAKH,EAAI,GAAKG,EAAKH,EAAI,IAC/CI,EAAIjB,KAAMgB,EAAKF,EAAI,GAAKE,EAAKF,EAAI,GAAKE,EAAKF,EAAI,IAC/CG,EAAIjB,KAAMgB,EAAKD,EAAI,GAAKC,EAAKD,EAAI,GAAKC,EAAKD,EAAI,GAEhD,EAEAM,cAAe,SAAWR,EAAGC,EAAGC,GAE/B,IAAMC,EAAMzC,KAAKT,SACXmD,EAAM1C,KAAKV,OAAOe,SAASb,QAEjCb,EAAIoE,UAAWN,EAAKH,GACpBzD,EAAIkE,UAAWN,EAAKF,GACpBzD,EAAIiE,UAAWN,EAAKD,GAEpBxD,EAAIgE,WAAYlE,EAAKD,GACrBE,EAAIiE,WAAYrE,EAAKE,GACrBG,EAAIiE,MAAOlE,GAEXC,EAAIkE,YAEJR,EAAIjB,KAAMzC,EAAImE,EAAGnE,EAAIoE,EAAGpE,EAAIqE,GAC5BX,EAAIjB,KAAMzC,EAAImE,EAAGnE,EAAIoE,EAAGpE,EAAIqE,GAC5BX,EAAIjB,KAAMzC,EAAImE,EAAGnE,EAAIoE,EAAGpE,EAAIqE,EAE7B,EAEAC,SAAU,SAAWhB,EAAGC,EAAGC,GAE1B,IAAMC,EAAMzC,KAAKP,OACXiD,EAAM1C,KAAKV,OAAOe,SAASZ,YAEfU,IAAbsC,EAAKH,IAAoBI,EAAIjB,KAAMgB,EAAKH,EAAI,GAAKG,EAAKH,EAAI,GAAKG,EAAKH,EAAI,SAC3DnC,IAAbsC,EAAKF,IAAoBG,EAAIjB,KAAMgB,EAAKF,EAAI,GAAKE,EAAKF,EAAI,GAAKE,EAAKF,EAAI,SAC3DpC,IAAbsC,EAAKD,IAAoBE,EAAIjB,KAAMgB,EAAKD,EAAI,GAAKC,EAAKD,EAAI,GAAKC,EAAKD,EAAI,GAE9E,EAEAe,MAAO,SAAWjB,EAAGC,EAAGC,GAEvB,IAAMC,EAAMzC,KAAKN,IACXgD,EAAM1C,KAAKV,OAAOe,SAASX,IAEjCgD,EAAIjB,KAAMgB,EAAKH,EAAI,GAAKG,EAAKH,EAAI,IACjCI,EAAIjB,KAAMgB,EAAKF,EAAI,GAAKE,EAAKF,EAAI,IACjCG,EAAIjB,KAAMgB,EAAKD,EAAI,GAAKC,EAAKD,EAAI,GAElC,EAEAgB,aAAc,WAEb,IAAMd,EAAM1C,KAAKV,OAAOe,SAASX,IAEjCgD,EAAIjB,KAAM,EAAG,GACbiB,EAAIjB,KAAM,EAAG,GACbiB,EAAIjB,KAAM,EAAG,EAEd,EAEAgC,UAAW,SAAWnB,GAErB,IAAMG,EAAMzC,KAAKN,IACLM,KAAKV,OAAOe,SAASX,IAE7B+B,KAAMgB,EAAKH,EAAI,GAAKG,EAAKH,EAAI,GAElC,EAEAoB,QAAS,SAAWpB,EAAGC,EAAGC,EAAGmB,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAEhD,IAAMC,EAAOjE,KAAKT,SAASyB,OAEvBkD,EAAKlE,KAAK+B,iBAAkBO,EAAG2B,GAC/BE,EAAKnE,KAAK+B,iBAAkBQ,EAAG0B,GAC/BG,EAAKpE,KAAK+B,iBAAkBS,EAAGyB,GAOnC,GALAjE,KAAKqC,UAAW6B,EAAIC,EAAIC,GACxBpE,KAAKsD,SAAUY,EAAIC,EAAIC,QAIXjE,IAAP2D,GAA2B,KAAPA,EAAY,CAEpC,IAAMO,EAAOrE,KAAKR,QAAQwB,OAE1BkD,EAAKlE,KAAKmC,iBAAkB2B,EAAIO,GAChCF,EAAKnE,KAAKmC,iBAAkB4B,EAAIM,GAChCD,EAAKpE,KAAKmC,iBAAkB6B,EAAIK,GAEhCrE,KAAK6C,UAAWqB,EAAIC,EAAIC,EAEzB,MAECpE,KAAK8C,cAAeoB,EAAIC,EAAIC,GAM7B,QAAYjE,IAAPwD,GAA2B,KAAPA,EAAY,CAEpC,IAAMW,EAAQtE,KAAKN,IAAIsB,OAEvBkD,EAAKlE,KAAKoC,aAAcuB,EAAIW,GAC5BH,EAAKnE,KAAKoC,aAAcwB,EAAIU,GAC5BF,EAAKpE,KAAKoC,aAAcyB,EAAIS,GAE5BtE,KAAKuD,MAAOW,EAAIC,EAAIC,GAEpBpE,KAAKV,OAAOe,SAASC,cAAe,CAErC,MAICN,KAAKwD,cAIP,EAEAe,iBAAkB,SAAWhF,GAE5BS,KAAKV,OAAOe,SAASmE,KAAO,SAI5B,IAFA,IAAMP,EAAOjE,KAAKT,SAASyB,OAEjByD,EAAK,EAAGC,EAAInF,EAASyB,OAAQyD,EAAKC,EAAGD,IAAQ,CAEtD,IAAM3D,EAAQd,KAAK+B,iBAAkBxC,EAAUkF,GAAMR,GAErDjE,KAAK2C,eAAgB7B,GACrBd,KAAKsD,SAAUxC,EAEhB,CAED,EAEA6D,gBAAiB,SAAWpF,EAAUG,GAErCM,KAAKV,OAAOe,SAASmE,KAAO,OAK5B,IAHA,IAAMP,EAAOjE,KAAKT,SAASyB,OACrBsD,EAAQtE,KAAKN,IAAIsB,OAEbyD,EAAK,EAAGC,EAAInF,EAASyB,OAAQyD,EAAKC,EAAGD,IAE9CzE,KAAK4C,cAAe5C,KAAK+B,iBAAkBxC,EAAUkF,GAAMR,IAI5D,IAAM,IAAIW,EAAM,EAAGF,EAAIhF,EAAIsB,OAAQ4D,EAAMF,EAAGE,IAE3C5E,KAAKyD,UAAWzD,KAAKoC,aAAc1C,EAAKkF,GAAON,GAIjD,GAMD,OAFAlF,EAAMS,YAAa,IAAI,GAEhBT,CAER,CAEA,IC3aAyF,EACAC,ED4aMC,EAAS,SAAAC,IAAAC,EAAAA,EAAAA,GAAAF,EAAAC,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAAJ,GAEd,SAAAA,EAAaK,GAAU,IAAAC,EAIA,OAJAC,EAAAA,EAAAA,GAAA,KAAAP,IAEtBM,EAAAH,EAAAK,KAAA,KAAOH,IAEFzF,UAAY,KAAK0F,CAEvB,CAycC,OAzcAG,EAAAA,EAAAA,GAAAT,EAAA,EAAAU,IAAA,OAAAzD,MAED,SAAM0D,EAAKC,EAAQC,EAAYC,GAE9B,IAAMC,EAAQ9F,KAER+F,EAAS,IAAIC,EAAAA,IAAYhG,KAAKoF,SACpCW,EAAOE,QAASjG,KAAKkG,MACrBH,EAAOI,iBAAkBnG,KAAKoG,eAC9BL,EAAOM,mBAAoBrG,KAAKsG,iBAChCP,EAAOQ,KAAMb,GAAK,SAAWc,GAE5B,IAECb,EAAQG,EAAMW,MAAOD,GAEtB,CAAE,MAAQE,GAEJb,EAEJA,EAASa,GAITC,QAAQC,MAAOF,GAIhBZ,EAAMV,QAAQyB,UAAWnB,EAE1B,CAED,GAAGE,EAAYC,EAEhB,GAAC,CAAAJ,IAAA,eAAAzD,MAED,SAAcrC,GAIb,OAFAK,KAAKL,UAAYA,EAEVK,IAER,GAAC,CAAAyF,IAAA,QAAAzD,MAED,SAAOwE,GAEN,IAAMpH,EAAQ,IAAID,GAEgB,IAA7BqH,EAAKM,QAAS,UAGlBN,EAAOA,EAAKO,QAAS,QAAS,QAIG,IAA7BP,EAAKM,QAAS,UAGlBN,EAAOA,EAAKO,QAAS,QAAS,KAO/B,IAHA,IAAMC,EAAQR,EAAKS,MAAO,MACtBC,EAAS,GAEHC,EAAI,EAAGzC,EAAIsC,EAAMhG,OAAQmG,EAAIzC,EAAGyC,IAAO,CAEhD,IAAMC,EAAOJ,EAAOG,GAAIE,YAExB,GAAqB,IAAhBD,EAAKpG,OAAV,CAEA,IAAMsG,EAAgBF,EAAKG,OAAQ,GAGnC,GAAuB,MAAlBD,EAEL,GAAuB,MAAlBA,EAAwB,CAE5B,IAAME,EAAOJ,EAAKH,MAAOvI,GAEzB,OAAS8I,EAAM,IAEd,IAAK,IACJpI,EAAMG,SAASkC,KACdgG,WAAYD,EAAM,IAClBC,WAAYD,EAAM,IAClBC,WAAYD,EAAM,KAEdA,EAAKxG,QAAU,GAEnB/B,EAAOyI,OACND,WAAYD,EAAM,IAClBC,WAAYD,EAAM,IAClBC,WAAYD,EAAM,KACjBG,sBAEFvI,EAAMK,OAAOgC,KAAMxC,EAAO2I,EAAG3I,EAAO4I,EAAG5I,EAAOsD,IAM9CnD,EAAMK,OAAOgC,UAAMtB,OAAWA,OAAWA,GAI1C,MACD,IAAK,KACJf,EAAMI,QAAQiC,KACbgG,WAAYD,EAAM,IAClBC,WAAYD,EAAM,IAClBC,WAAYD,EAAM,KAEnB,MACD,IAAK,KACJpI,EAAMM,IAAI+B,KACTgG,WAAYD,EAAM,IAClBC,WAAYD,EAAM,KAMtB,MAAO,GAAuB,MAAlBF,EAAwB,CAQnC,IANA,IACMQ,EADWV,EAAKW,MAAO,GAAIC,OACLf,MAAOvI,GAC7BuJ,EAAe,GAIXC,EAAI,EAAGC,EAAKL,EAAW9G,OAAQkH,EAAIC,EAAID,IAAO,CAEvD,IAAME,EAASN,EAAYI,GAE3B,GAAKE,EAAOpH,OAAS,EAAI,CAExB,IAAMqH,EAAcD,EAAOnB,MAAO,KAClCgB,EAAaxG,KAAM4G,EAEpB,CAED,CAMA,IAFA,IAAMC,EAAKL,EAAc,GAEfC,EAAI,EAAGC,EAAKF,EAAajH,OAAS,EAAGkH,EAAIC,EAAID,IAAO,CAE7D,IAAMK,EAAKN,EAAcC,GACnBM,EAAKP,EAAcC,EAAI,GAE7B9I,EAAMsE,QACL4E,EAAI,GAAKC,EAAI,GAAKC,EAAI,GACtBF,EAAI,GAAKC,EAAI,GAAKC,EAAI,GACtBF,EAAI,GAAKC,EAAI,GAAKC,EAAI,GAGxB,CAED,MAAO,GAAuB,MAAlBlB,EAAwB,CAEnC,IAAMmB,EAAYrB,EAAKsB,UAAW,GAAIV,OAAOf,MAAO,KAChD0B,EAAe,GACbC,EAAU,GAEhB,IAA+B,IAA1BxB,EAAKN,QAAS,KAElB6B,EAAeF,OAIf,IAAM,IAAII,EAAK,EAAGC,EAAOL,EAAUzH,OAAQ6H,EAAKC,EAAMD,IAAQ,CAE7D,IAAME,EAAQN,EAAWI,GAAK5B,MAAO,KAEjB,KAAf8B,EAAO,IAAaJ,EAAalH,KAAMsH,EAAO,IAC/B,KAAfA,EAAO,IAAaH,EAAQnH,KAAMsH,EAAO,GAE/C,CAID3J,EAAMuF,gBAAiBgE,EAAcC,EAEtC,MAAO,GAAuB,MAAlBtB,EAAwB,CAEnC,IACM0B,EADW5B,EAAKW,MAAO,GAAIC,OACNf,MAAO,KAElC7H,EAAMmF,iBAAkByE,EAEzB,MAAO,GAAmD,QAA5C9B,EAAS5I,EAAgB2K,KAAM7B,IAAoB,CAQhE,IAAMtH,GAAS,IAAMoH,EAAQ,GAAIa,MAAO,GAAIC,QAASD,MAAO,GAE5D3I,EAAMS,YAAaC,EAEpB,MAAO,GAAKtB,EAAsB0K,KAAM9B,GAIvChI,EAAME,OAAOkB,cAAe4G,EAAKsB,UAAW,GAAIV,OAAQ5I,EAAMQ,wBAExD,GAAKrB,EAA0B2K,KAAM9B,GAI3ChI,EAAMQ,kBAAkB6B,KAAM2F,EAAKsB,UAAW,GAAIV,aAE5C,GAAKvJ,EAAiByK,KAAM9B,GAKlCT,QAAQwC,KAAM,6GAER,GAAuB,MAAlB7B,EAAwB,CAsBnC,IApBAJ,EAASE,EAAKH,MAAO,MAoBTjG,OAAS,EAAI,CAExB,IAAMgB,EAAQkF,EAAQ,GAAIc,OAAOoB,cACjChK,EAAME,OAAOiB,OAAqB,MAAVyB,GAA2B,QAAVA,CAE1C,MAGC5C,EAAME,OAAOiB,QAAS,EAIvB,IAAMQ,EAAW3B,EAAME,OAAOY,kBACzBa,IAAWA,EAASR,OAASnB,EAAME,OAAOiB,OAEhD,KAAO,CAGN,GAAc,OAAT6G,EAAgB,SAErBT,QAAQwC,KAAM,sCAAwC/B,EAAO,IAE9D,CAvMiC,CAyMlC,CAEAhI,EAAM0C,WAEN,IAAMuH,EAAY,IAAIC,EAAAA,IAKtB,GAJAD,EAAUzJ,kBAAoB,GAAG2J,OAAQnK,EAAMQ,oBAIxB,MAF4B,IAAzBR,EAAMC,QAAQ2B,QAAgE,IAAhD5B,EAAMC,QAAS,GAAIgB,SAASd,SAASyB,QAI5F,IAAM,IAAImG,EAAI,EAAGzC,EAAItF,EAAMC,QAAQ2B,OAAQmG,EAAIzC,EAAGyC,IAAO,CAExD,IAAM7H,EAASF,EAAMC,QAAS8H,GACxB9G,EAAWf,EAAOe,SAClBV,EAAYL,EAAOK,UACnB6J,EAA6B,SAAlBnJ,EAASmE,KACpBiF,EAA+B,WAAlBpJ,EAASmE,KACxBkF,GAAkB,EAGtB,GAAkC,IAA7BrJ,EAASd,SAASyB,OAAvB,CAEA,IAAM2I,EAAiB,IAAIC,EAAAA,IAE3BD,EAAeE,aAAc,WAAY,IAAIC,EAAAA,IAAwBzJ,EAASd,SAAU,IAEnFc,EAASb,QAAQwB,OAAS,GAE9B2I,EAAeE,aAAc,SAAU,IAAIC,EAAAA,IAAwBzJ,EAASb,QAAS,IAIjFa,EAASZ,OAAOuB,OAAS,IAE7B0I,GAAkB,EAClBC,EAAeE,aAAc,QAAS,IAAIC,EAAAA,IAAwBzJ,EAASZ,OAAQ,MAIrD,IAA1BY,EAASC,cAEbqJ,EAAeE,aAAc,KAAM,IAAIC,EAAAA,IAAwBzJ,EAASX,IAAK,IAQ9E,IAFA,IAAMqK,EAAmB,GAEfnI,EAAK,EAAGoI,EAAQrK,EAAUqB,OAAQY,EAAKoI,EAAOpI,IAAQ,CAE/D,IAAMqI,EAAiBtK,EAAWiC,GAC5BsI,EAAeD,EAAenK,KAAO,IAAMmK,EAAe1J,OAAS,IAAMmJ,EAC3E3I,EAAW3B,EAAMO,UAAWuK,GAEhC,GAAwB,OAAnBlK,KAAKL,UAKT,GAHAoB,EAAWf,KAAKL,UAAUwK,OAAQF,EAAenK,OAG5C0J,IAAUzI,GAAgBA,aAAoBqJ,EAAAA,KAO5C,GAAKX,GAAY1I,KAAgBA,aAAoBsJ,EAAAA,KAAmB,CAE9E,IAAMC,GAAiB,IAAID,EAAAA,IAAgB,CAAEE,KAAM,GAAIC,iBAAiB,IACxEC,EAAAA,IAAAA,UAAAA,KAAAA,KAA8BH,GAAgBvJ,GAC9CuJ,GAAeI,MAAMC,KAAM5J,EAAS2J,OACpCJ,GAAeM,IAAM7J,EAAS6J,IAC9B7J,EAAWuJ,EAEZ,MAfyE,CAExE,IAAMO,GAAe,IAAIT,EAAAA,IACzBK,EAAAA,IAAAA,UAAAA,KAAAA,KAA8BI,GAAc9J,GAC5C8J,GAAaH,MAAMC,KAAM5J,EAAS2J,OAClC3J,EAAW8J,EAEZ,MAYiB1K,IAAbY,KAIHA,EAFIyI,EAEO,IAAIY,EAAAA,IAEJX,EAEA,IAAIY,EAAAA,IAAgB,CAAEE,KAAM,EAAGC,iBAAiB,IAIhD,IAAIM,EAAAA,KAIPhL,KAAOmK,EAAenK,KAC/BiB,EAASgK,aAAcd,EAAe1J,OACtCQ,EAASiK,aAAetB,EAExBtK,EAAMO,UAAWuK,GAAiBnJ,GAInCgJ,EAAiBtI,KAAMV,EAExB,CAIA,IAAIkK,QAAI,EAER,GAAKlB,EAAiB/I,OAAS,EAAI,CAElC,IAAM,IAAIY,GAAK,EAAGoI,GAAQrK,EAAUqB,OAAQY,GAAKoI,GAAOpI,KAAQ,CAE/D,IAAMqI,GAAiBtK,EAAWiC,IAClC+H,EAAeuB,SAAUjB,GAAe7I,WAAY6I,GAAerJ,WAAYgB,GAEhF,CAICqJ,GAFIzB,EAEG,IAAI2B,EAAAA,IAAcxB,EAAgBI,GAE9BN,EAEJ,IAAI2B,EAAAA,IAAQzB,EAAgBI,GAI5B,IAAIsB,EAAAA,IAAM1B,EAAgBI,EAInC,MAIEkB,GAFIzB,EAEG,IAAI2B,EAAAA,IAAcxB,EAAgBI,EAAkB,IAEhDN,EAEJ,IAAI2B,EAAAA,IAAQzB,EAAgBI,EAAkB,IAI9C,IAAIsB,EAAAA,IAAM1B,EAAgBI,EAAkB,IAMrDkB,GAAKnL,KAAOR,EAAOQ,KAEnBuJ,EAAUiC,IAAKL,GAtI+B,CAwI/C,MAMA,GAAK7L,EAAMG,SAASyB,OAAS,EAAI,CAEhC,IAAMD,GAAW,IAAIsJ,EAAAA,IAAgB,CAAEE,KAAM,EAAGC,iBAAiB,IAE3Db,GAAiB,IAAIC,EAAAA,IAE3BD,GAAeE,aAAc,WAAY,IAAIC,EAAAA,IAAwB1K,EAAMG,SAAU,IAEhFH,EAAMK,OAAOuB,OAAS,QAA2Bb,IAAtBf,EAAMK,OAAQ,KAE7CkK,GAAeE,aAAc,QAAS,IAAIC,EAAAA,IAAwB1K,EAAMK,OAAQ,IAChFsB,GAASiK,cAAe,GAIzB,IAAMO,GAAS,IAAIH,EAAAA,IAAQzB,GAAgB5I,IAC3CsI,EAAUiC,IAAKC,GAEhB,CAID,OAAOlC,CAER,KAACtE,CAAA,CAjda,CAASyG,EAAAA,KEjalBC,EAAS,SAAAzG,IAAAC,EAAAA,EAAAA,GAAAwG,EAAAzG,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAAsG,GAEd,SAAAA,EAAarG,GAAU,OAAAE,EAAAA,EAAAA,GAAA,KAAAmG,GAAAvG,EAAAK,KAAA,KAEfH,EAER,CA8HC,OA5HDI,EAAAA,EAAAA,GAAAiG,EAAA,EAAAhG,IAAA,OAAAzD,MAaA,SAAM0D,EAAKC,EAAQC,EAAYC,GAE9B,IAAMC,EAAQ9F,KAERkG,EAAuB,KAAdlG,KAAKkG,KAAgBwF,EAAAA,IAAAA,eAA4BhG,GAAQ1F,KAAKkG,KAEvEH,EAAS,IAAIC,EAAAA,IAAYhG,KAAKoF,SACpCW,EAAOE,QAASjG,KAAKkG,MACrBH,EAAOI,iBAAkBnG,KAAKoG,eAC9BL,EAAOM,mBAAoBrG,KAAKsG,iBAChCP,EAAOQ,KAAMb,GAAK,SAAWc,GAE5B,IAECb,EAAQG,EAAMW,MAAOD,EAAMN,GAE5B,CAAE,MAAQQ,GAEJb,EAEJA,EAASa,GAITC,QAAQC,MAAOF,GAIhBZ,EAAMV,QAAQyB,UAAWnB,EAE1B,CAED,GAAGE,EAAYC,EAEhB,GAAC,CAAAJ,IAAA,qBAAAzD,MAED,SAAoBA,GAGnB,OADAhC,KAAK2L,gBAAkB3J,EAChBhC,IAER,GAEA,CAAAyF,IAAA,QAAAzD,MAWA,SAAOwE,EAAMN,GAOZ,IALA,IAAMc,EAAQR,EAAKS,MAAO,MACtB2E,EAAO,CAAC,EACNC,EAAoB,MACpBC,EAAgB,CAAC,EAEb3E,EAAI,EAAGA,EAAIH,EAAMhG,OAAQmG,IAAO,CAEzC,IAAIC,EAAOJ,EAAOG,GAGlB,GAAqB,KAFrBC,EAAOA,EAAKY,QAEFhH,QAAqC,MAArBoG,EAAKG,OAAQ,GAAvC,CAOA,IAAMwE,EAAM3E,EAAKN,QAAS,KAEtBrB,EAAQsG,GAAO,EAAM3E,EAAKsB,UAAW,EAAGqD,GAAQ3E,EACpD3B,EAAMA,EAAI2D,cAEV,IAAIpH,EAAU+J,GAAO,EAAM3E,EAAKsB,UAAWqD,EAAM,GAAM,GAGvD,GAFA/J,EAAQA,EAAMgG,OAED,WAARvC,EAIJmG,EAAO,CAAE9L,KAAMkC,GACf8J,EAAe9J,GAAU4J,OAIzB,GAAa,OAARnG,GAAwB,OAARA,GAAwB,OAARA,GAAwB,OAARA,EAAe,CAEnE,IAAMuG,EAAKhK,EAAMiF,MAAO4E,EAAmB,GAC3CD,EAAMnG,GAAQ,CAAEgC,WAAYuE,EAAI,IAAOvE,WAAYuE,EAAI,IAAOvE,WAAYuE,EAAI,IAE/E,MAECJ,EAAMnG,GAAQzD,CA1BhB,CAgCD,CAEA,IAAMiK,EAAkB,IAAIC,EAAiBlM,KAAKmM,cAAgBjG,EAAMlG,KAAK2L,iBAI7E,OAHAM,EAAgBG,eAAgBpM,KAAKqM,aACrCJ,EAAgBK,WAAYtM,KAAKoF,SACjC6G,EAAgBM,aAAcT,GACvBG,CAER,KAACR,CAAA,CApIa,CAASD,EAAAA,KAuJlBU,EAAe,WAEpB,SAAAA,IAA0C,IAA7BM,EAAOC,UAAAzL,OAAA,QAAAb,IAAAsM,UAAA,GAAAA,UAAA,GAAG,GAAIC,EAAOD,UAAAzL,OAAA,QAAAb,IAAAsM,UAAA,GAAAA,UAAA,GAAG,CAAC,GAACnH,EAAAA,EAAAA,GAAA,KAAA4G,GAEtClM,KAAKwM,QAAUA,EACfxM,KAAK0M,QAAUA,EACf1M,KAAK8L,cAAgB,CAAC,EACtB9L,KAAKL,UAAY,CAAC,EAClBK,KAAK2M,eAAiB,GACtB3M,KAAK4M,WAAa,CAAC,EAEnB5M,KAAKqM,YAAc,YAEnBrM,KAAK6M,UAA+B1M,IAAtBH,KAAK0M,QAAQG,KAAuB7M,KAAK0M,QAAQG,KAAOC,EAAAA,IACtE9M,KAAK+M,UAA+B5M,IAAtBH,KAAK0M,QAAQK,KAAuB/M,KAAK0M,QAAQK,KAAOC,EAAAA,GAEvE,CAyXC,OAzXAxH,EAAAA,EAAAA,GAAA0G,EAAA,EAAAzG,IAAA,iBAAAzD,MAED,SAAgBA,GAGf,OADAhC,KAAKqM,YAAcrK,EACZhC,IAER,GAAC,CAAAyF,IAAA,aAAAzD,MAED,SAAYA,GAEXhC,KAAKoF,QAAUpD,CAEhB,GAAC,CAAAyD,IAAA,eAAAzD,MAED,SAAc8J,GAEb9L,KAAK8L,cAAgB9L,KAAKiN,QAASnB,GACnC9L,KAAKL,UAAY,CAAC,EAClBK,KAAK2M,eAAiB,GACtB3M,KAAK4M,WAAa,CAAC,CAEpB,GAAC,CAAAnH,IAAA,UAAAzD,MAED,SAAS8J,GAER,IAAO9L,KAAK0M,QAAU,OAAOZ,EAE7B,IAAMoB,EAAY,CAAC,EAEnB,IAAM,IAAMC,KAAMrB,EAAgB,CAIjC,IAAMsB,EAAMtB,EAAeqB,GAErBE,EAAS,CAAC,EAIhB,IAAM,IAAMC,KAFZJ,EAAWC,GAAOE,EAEED,EAAM,CAEzB,IAAIG,GAAO,EACPvL,EAAQoL,EAAKE,GACXE,EAAQF,EAAKlE,cAEnB,OAASoE,GAER,IAAK,KACL,IAAK,KACL,IAAK,KAICxN,KAAK0M,SAAW1M,KAAK0M,QAAQe,eAEjCzL,EAAQ,CAAEA,EAAO,GAAM,IAAKA,EAAO,GAAM,IAAKA,EAAO,GAAM,MAIvDhC,KAAK0M,SAAW1M,KAAK0M,QAAQgB,gBAEb,IAAf1L,EAAO,IAA4B,IAAfA,EAAO,IAA4B,IAAfA,EAAO,KAInDuL,GAAO,GAcNA,IAEJF,EAAQG,GAAUxL,EAIpB,CAED,CAEA,OAAOkL,CAER,GAAC,CAAAzH,IAAA,UAAAzD,MAED,WAEC,IAAM,IAAMmL,KAAMnN,KAAK8L,cAEtB9L,KAAKmK,OAAQgD,EAIf,GAAC,CAAA1H,IAAA,WAAAzD,MAED,SAAU2L,GAET,OAAO3N,KAAK4M,WAAYe,EAEzB,GAAC,CAAAlI,IAAA,aAAAzD,MAED,WAEC,IAAIlB,EAAQ,EAEZ,IAAM,IAAMqM,KAAMnN,KAAK8L,cAEtB9L,KAAK2M,eAAgB7L,GAAUd,KAAKmK,OAAQgD,GAC5CnN,KAAK4M,WAAYO,GAAOrM,EACxBA,IAID,OAAOd,KAAK2M,cAEb,GAAC,CAAAlH,IAAA,SAAAzD,MAED,SAAQ2L,GAQP,YANwCxN,IAAnCH,KAAKL,UAAWgO,IAEpB3N,KAAK4N,gBAAiBD,GAIhB3N,KAAKL,UAAWgO,EAExB,GAAC,CAAAlI,IAAA,kBAAAzD,MAED,SAAiB2L,GAIhB,IAAM7H,EAAQ9F,KACRoN,EAAMpN,KAAK8L,cAAe6B,GAC1BE,EAAS,CAEd/N,KAAM6N,EACNd,KAAM7M,KAAK6M,MAgBZ,SAASiB,EAAeC,EAAS/L,GAEhC,IAAK6L,EAAQE,GAAb,CAEA,IAhBoBvB,EAAS9G,EAgBvBsI,EAAYlI,EAAMmI,iBAAkBjM,EAAO6L,GAC3CjD,EAAM9E,EAAMoI,aAjBE1B,EAiBuB1G,EAAM0G,QAf7B,kBAFS9G,EAiB6BsI,EAAUtI,MAf5B,KAARA,EACxB,GAGH,gBAAgBwD,KAAMxD,GAAeA,EAEnC8G,EAAU9G,IAWjBkF,EAAIuD,OAAOxD,KAAMqD,EAAUI,OAC3BxD,EAAIyD,OAAO1D,KAAMqD,EAAUK,QAE3BzD,EAAI0D,MAAQxI,EAAMiH,KAClBnC,EAAI2D,MAAQzI,EAAMiH,KAED,QAAZgB,GAAiC,gBAAZA,IAEzBnD,EAAI4D,SAAWC,EAAAA,KAIhBZ,EAAQE,GAAYnD,CAjBW,CAmBhC,CAEA,IAAM,IAAM0C,KAAQF,EAAM,CAEzB,IAAMpL,EAAQoL,EAAKE,GACfoB,OAAC,EAEL,GAAe,KAAV1M,EAEL,OAASsL,EAAKlE,eAIb,IAAK,KAIJyE,EAAOnD,OAAQ,IAAIxL,EAAAA,KAAQ6D,UAAWf,GAAQ2F,sBAE9C,MAED,IAAK,KAGJkG,EAAOc,UAAW,IAAIzP,EAAAA,KAAQ6D,UAAWf,GAAQ2F,sBAEjD,MAED,IAAK,KAGJkG,EAAOe,UAAW,IAAI1P,EAAAA,KAAQ6D,UAAWf,GAAQ2F,sBAEjD,MAED,IAAK,SAIJmG,EAAe,MAAO9L,GAEtB,MAED,IAAK,SAIJ8L,EAAe,cAAe9L,GAE9B,MAED,IAAK,SAIJ8L,EAAe,cAAe9L,GAE9B,MAED,IAAK,OAEJ8L,EAAe,YAAa9L,GAE5B,MAED,IAAK,WACL,IAAK,OAIJ8L,EAAe,UAAW9L,GAE1B,MAED,IAAK,QAIJ8L,EAAe,WAAY9L,GAC3B6L,EAAOgB,aAAc,EAErB,MAED,IAAK,KAKJhB,EAAOiB,UAAYrH,WAAYzF,GAE/B,MAED,IAAK,KACJ0M,EAAIjH,WAAYzF,IAEP,IAER6L,EAAOkB,QAAUL,EACjBb,EAAOgB,aAAc,GAItB,MAED,IAAK,KACJH,EAAIjH,WAAYzF,GAEXhC,KAAK0M,SAAW1M,KAAK0M,QAAQsC,mBAAmBN,EAAI,EAAIA,GAExDA,EAAI,IAERb,EAAOkB,QAAU,EAAIL,EACrBb,EAAOgB,aAAc,GAWzB,CAGA,OADA7O,KAAKL,UAAWgO,GAAiB,IAAI7C,EAAAA,IAAmB+C,GACjD7N,KAAKL,UAAWgO,EAExB,GAAC,CAAAlI,IAAA,mBAAAzD,MAED,SAAkBA,EAAOiN,GAExB,IAQIlD,EAREiC,EAAY,CAEjBI,MAAO,IAAIc,EAAAA,IAAS,EAAG,GACvBb,OAAQ,IAAIa,EAAAA,IAAS,EAAG,IAInBC,EAAQnN,EAAMiF,MAAO,OA+B3B,OA5BA8E,EAAMoD,EAAMrI,QAAS,SAET,IAEXmI,EAAUG,UAAY3H,WAAY0H,EAAOpD,EAAM,IAC/CoD,EAAMtO,OAAQkL,EAAK,KAIpBA,EAAMoD,EAAMrI,QAAS,QAET,IAEXkH,EAAUI,MAAMiB,IAAK5H,WAAY0H,EAAOpD,EAAM,IAAOtE,WAAY0H,EAAOpD,EAAM,KAC9EoD,EAAMtO,OAAQkL,EAAK,KAIpBA,EAAMoD,EAAMrI,QAAS,QAET,IAEXkH,EAAUK,OAAOgB,IAAK5H,WAAY0H,EAAOpD,EAAM,IAAOtE,WAAY0H,EAAOpD,EAAM,KAC/EoD,EAAMtO,OAAQkL,EAAK,IAIpBiC,EAAUtI,IAAMyJ,EAAMG,KAAM,KAAMtH,OAC3BgG,CAER,GAAC,CAAAvI,IAAA,cAAAzD,MAED,SAAa0D,EAAK6J,EAAS5J,EAAQC,EAAYC,GAE9C,IAAMT,OAA6BjF,IAAjBH,KAAKoF,QAA0BpF,KAAKoF,QAAUoK,EAAAA,IAC5DzJ,EAASX,EAAQqK,WAAY/J,GAEjB,OAAXK,IAEJA,EAAS,IAAI2J,EAAAA,IAAetK,IAIxBW,EAAOqG,gBAAiBrG,EAAOqG,eAAgBpM,KAAKqM,aAEzD,IAAMsD,EAAU5J,EAAOQ,KAAMb,EAAKC,EAAQC,EAAYC,GAItD,YAFiB1F,IAAZoP,IAAwBI,EAAQJ,QAAUA,GAExCI,CAER,KAACzD,CAAA,CAzYmB,GDlJf0D,EAAa,CAAC,EACpBA,EAAWC,eAAiBC,KAAKC,KAAK,KACtCH,EAAWI,cAAgB,EAC3BJ,EAAWK,cAAgB,EAC3BL,EAAWM,eAAiB,EAC5BN,EAAWO,cAAgB,EAC3BP,EAAWQ,MAAQ,MACnBR,EAAWS,YAAc,GACzBT,EAAWU,eAAiB,EAC5BV,EAAWW,UAAYC,OAAOC,UAE9B,IEhCIC,EAA4D5L,EFgC1D6L,EAAc,CAAC,EAwJrB,SAASC,IAGL,IAAMC,EAAQ,IAAIC,EAAAA,IACfC,EAAgB,SAASC,IAsDhC,SAAsBA,GACrB,IAAK,IAAI7J,EAAI,EAAGA,EAAIwJ,EAAYM,UAAW9J,IAC3C,EACK0J,EAAQ,IAAIC,EAAAA,KACVI,SAAS7B,IAAI,IAAKsB,EAAYQ,UAAYR,EAAYS,YAAc,EAAMjK,EAAIwJ,EAAYS,YAAcT,EAAYM,WAC1H,IAKIJ,EALA5F,EAAO,IAAI6F,EAAAA,IAAWE,EAAM/F,KAAK5K,SAAU2Q,EAAM/F,KAAKlK,UAC1D8P,EAAMzC,MAAMiB,IAAIsB,EAAYU,WAAYV,EAAYU,WAAYV,EAAYU,YAC5ER,EAAMvF,IAAIL,GACVnG,EAAMwG,IAAIuF,IAENA,EAAQ,IAAIC,EAAAA,KACVI,SAAS7B,KAAK,IAAKsB,EAAYQ,UAAYR,EAAYS,YAAc,EAAMjK,EAAIwJ,EAAYS,YAAcT,EAAYM,WACvHhG,EAAO,IAAI6F,EAAAA,IAAWE,EAAM/F,KAAK5K,SAAU2Q,EAAM/F,KAAKlK,UAC1D8P,EAAMzC,MAAMiB,IAAIsB,EAAYU,WAAYV,EAAYU,WAAYV,EAAYU,YAC5ER,EAAMvF,IAAIL,GACVnG,EAAMwG,IAAIuF,EACX,CACD,CAvEyCS,CAAaN,EAAQ,EAEzD5C,EAAQ,GAEZA,EAAQ,IAAI0C,EAAAA,IAAc1C,EAAOA,EAAOA,IACtB,IAAI3C,GACTlF,KACNgL,EAAQ,OACR,SAAC5R,GACGA,EAAU6R,UAEV,IAAMC,EAAY,IAAI1M,EACtB0M,EAAUlF,aAAa5M,GACvB8R,EAAUlL,KACNgL,EAAQ,OACR,SAACtG,GACGA,EAAKmD,MAAMzD,KAAKyD,GAChBnD,EAAKyG,aAAc,EACnBzG,EAAKiG,SAAS7B,IAAI,EAAG,EAAG,GACxBpE,EAAK0G,SAAStC,KAAKS,KAAK8B,GAAG,EAAE,EAAE,GAU/B9M,EAAMwG,IAAIL,GAIV8F,EAAa,CAAC9F,KAAAA,GAClB,IACA,SAAC4G,GACGlL,QAAQmL,IAAKD,EAAIE,OAASF,EAAIG,MAAS,IAAM,WACjD,IACA,SAACpL,GACGD,QAAQmL,IAAI,oBAAqBlL,EACrC,GAER,IACA,SAACiL,GACGlL,QAAQmL,IAAKD,EAAIE,OAASF,EAAIG,MAAS,IAAM,WACjD,IACA,SAACpL,GACGD,QAAQmL,IAAI,oBAChB,IAGJhN,EAAMwG,IAAIuF,EACd,CA/MAF,EAAYsB,UAAY,IACxBtB,EAAYuB,WAAa,IACzBvB,EAAYQ,UAAY,GACxBR,EAAYwB,aAAe,IAC3BxB,EAAYyB,cAAgB,IAC5BzB,EAAY0B,WAAa,EACzB1B,EAAYS,YAAc,IAC1BT,EAAY2B,WAAa,GACzB3B,EAAY4B,YAAc5B,EAAYS,YACtCT,EAAY6B,oBAAsB,EAClC7B,EAAY8B,kBAAoB,MAChC9B,EAAY+B,mBAAqB,EACjC/B,EAAYgC,cAAgB,KAC5BhC,EAAYM,UAAY,EACxBN,EAAYU,WAAa,GE9CzB,IAKMzB,EAAa,CAAC,EAWpB,SAASgD,KFoPM,SAAyBC,GAEvC/N,GADG+N,EAAQA,GAAS,CAAC,GACP/N,MACD+N,EAAMC,WACHD,EAAME,cACFF,EAAMG,kBAC1BnO,EAAegO,EAAMhO,aAGrB,IAAMoO,EAAY,IAAInC,EAAAA,IAAwB,SAAU,GACxDmC,EAAU/B,SAAS7B,IAAI,EAAG,EAAG,GAC7BvK,EAAMwG,IAAI2H,GAEV,IAAMC,EAAW,IAAIpC,EAAAA,IAAwB,SAAU,GACvDoC,EAAShC,SAAS7B,IAAI,EAAG,EAAG,GAC5BvK,EAAMwG,IAAI4H,GAEP,IAAMC,EAAU,IAAIrC,EAAAA,IAAoB,SAAU,GACrDhM,EAAMwG,IAAI6H,GAONtO,GAEH+L,IAGSwC,KAAKC,KAChB,CElRIC,CAAgB,CACZxO,MAAAA,EACAgO,YAAW,EACXC,eAAc,EACdC,mBAAkB,EAClBnO,cAAa,GAErB,CAlBA+K,EAAWC,eAAiBC,KAAKC,KAAK,KACtCH,EAAWI,cAAgB,EAC3BJ,EAAWK,cAAgB,EAC3BL,EAAWM,eAAiB,EAC5BN,EAAWO,cAAgB,EAC3BP,EAAWQ,MAAQ,MACnBR,EAAWS,YAAc,GACzBT,EAAWU,eAAiB,EAC5BV,EAAWW,UAAYC,OAAOC,U,ICV1B8C,EAMA1V,EAAiC2V,E,mBAP/B1O,EAAQ,IAAI2O,EAAAA,IAEZC,EAAW,IAAID,EAAAA,IAAoB,CAACE,OAAO,IAE3CC,EAAa,IAAIH,EAAAA,IAAiB,GAKzB,aACX,IAAMpK,GAAYwK,EAAAA,EAAAA,UA2ClB,SAASC,EAAQC,GACfL,EAASM,OAAOlP,EAAOyO,GACvBU,OAAOC,sBAAsBJ,EAC/B,CAMA,OAlDAK,EAAAA,EAAAA,YAAU,WACR,IAAIX,EAAJ,CAGAA,GAAU,EACV,IACE,IAAMY,EAAQrW,SAASC,eAAgB,eACjCqW,EAAWtW,SAASC,eAAgB,YACpCsW,EAAOvW,SAASC,eAAgB,QAChCuW,EAAMxW,SAASC,eAAgB,OACrCH,EAASH,KACT6V,EAAS,IAAIE,EAAAA,IAAwB,GAAIpK,EAAUmL,QAAQC,YAAcpL,EAAUmL,QAAQE,aAAc,EAAG,MACrGxD,SAAS7B,IAAK,EAAG,EAAG,QACV,IAAIsF,EAAAA,EAAcpB,EAAQG,EAASkB,YAE3CC,eAAgB,EACzB/P,EAAMwG,IAAIiI,GDHjB7C,EADAmC,GADgCA,ECMhB,CACP/N,MAAAA,EACAyO,OAAAA,EACA1V,OAAAA,KDRQ6S,GAAc,CAAC,EAE7B5L,EAAQ+N,EAAM/N,MACL+N,EAAMU,OACTV,EAAMhV,OAEf+U,IAIUQ,KAAKC,MACN,GAEC,EACFzD,EAAWI,cCJZoE,EAAMU,MAAMC,QAAU,QACtBV,EAASS,MAAMC,QAAU,QACzBT,EAAKQ,MAAMC,QAAU,QACrBR,EAAIO,MAAMC,QAAU,OACtB,CAAE,MAAOrO,GAEP,YADA2C,EAAUmL,QAAQQ,UAAYtO,EAAEuO,WAElC,CDlBS,IAAkBpC,ECmB3Ba,EAASwB,QAAQ7L,EAAUmL,QAAQC,YAAapL,EAAUmL,QAAQE,cAClEnB,EAAO4B,OAAS9L,EAAUmL,QAAQC,YAAcpL,EAAUmL,QAAQE,aAClErL,EAAUmL,QAAQY,YAAY1B,EAASkB,YACvCX,OAAOoB,iBAAiB,UAAU,WAChC3B,EAASwB,QAAQ7L,EAAUmL,QAAQC,YAAapL,EAAUmL,QAAQE,cAClEnB,EAAO4B,OAAS9L,EAAUmL,QAAQC,YAAcpL,EAAUmL,QAAQE,aAClEnB,EAAO+B,wBACT,IAAG,GACHxB,GAnCA,CAoCF,GAAG,KAWIyB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACLC,EAAAA,EAAAA,KAAA,UAAAD,UAAQC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,kBACZC,EAAAA,EAAAA,KAAA,OAAKC,IAAKrM,EAAWsM,UAAWC,EAAAA,aAChCL,EAAAA,EAAAA,MAAA,OAAKM,GAAG,OAAML,SAAA,CAAC,QAEXC,EAAAA,EAAAA,KAAA,OAAKI,GAAG,oBAEVN,EAAAA,EAAAA,MAAA,OAAKM,GAAG,MAAKL,SAAA,CAAC,OAEZC,EAAAA,EAAAA,KAAA,OAAKI,GAAG,mBAEZJ,EAAAA,EAAAA,KAAA,OAAKI,GAAG,WAAUL,SAAC,UAGnBC,EAAAA,EAAAA,KAAA,OAAKI,GAAG,cAAaL,SAAC,UAGtBD,EAAAA,EAAAA,MAAA,OAAKI,UAAWC,EAAAA,QAAeJ,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,OAAKE,UAAWC,EAAAA,OAAcJ,SAAC,mBAC/BD,EAAAA,EAAAA,MAAA,OAAKI,UAAWC,EAAAA,SAAgBJ,SAAA,CAAC,wBACXC,EAAAA,EAAAA,KAAA,SAAS,wBAG7BA,EAAAA,EAAAA,KAAA,OAAKE,UAAWC,EAAAA,cAAqBJ,UAACC,EAAAA,EAAAA,KAAA,UAAQK,QA3BlD,WAEA,EAyB4EN,SAAC,kBAE3ED,EAAAA,EAAAA,MAAA,SAAOM,GAAG,UAAUF,UAAWC,EAAAA,QAAgBG,MAAI,EAAAP,SAAA,EACjDC,EAAAA,EAAAA,KAAA,UAAQhT,IAAK8O,EAAQ,MAA0D/M,KAAK,cAAc,oEAGpG+Q,EAAAA,EAAAA,MAAA,SAAOM,GAAG,YAAYF,UAAWC,EAAAA,UAAiBJ,SAAA,EAChDC,EAAAA,EAAAA,KAAA,UAAQhT,IAAK8O,EAAQ,MAAgC/M,KAAK,cAAc,oEAG1E+Q,EAAAA,EAAAA,MAAA,SAAOM,GAAG,WAAWF,UAAWC,EAAAA,SAAgBJ,SAAA,EAC9CC,EAAAA,EAAAA,KAAA,UAAQhT,IAAK8O,EAAQ,MAAkC/M,KAAK,cAAc,oEAG5E+Q,EAAAA,EAAAA,MAAA,SAAOM,GAAG,SAASF,UAAWC,EAAAA,OAAcJ,SAAA,EAC1CC,EAAAA,EAAAA,KAAA,UAAQhT,IAAK8O,EAAQ,MAA6B/M,KAAK,cAAc,oEAGvE+Q,EAAAA,EAAAA,MAAA,SAAOM,GAAG,QAAQF,UAAWC,EAAAA,MAAaJ,SAAA,EACxCC,EAAAA,EAAAA,KAAA,UAAQhT,IAAK8O,EAAQ,MAAoC/M,KAAK,cAAc,qEAIlF,CAvGFM,EAAMwG,IAAIsI,E","sources":["webpack://three/./src/practice/game/car_race/main.module.css?4eff","practice/game/car_race/init/sounds.js","../node_modules/three/examples/jsm/loaders/OBJLoader.js","practice/game/car_race/init/environment.js","../node_modules/three/examples/jsm/loaders/MTLLoader.js","practice/game/car_race/init/game.js","practice/game/car_race/main.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"main_container__HOXLh\",\"kmph\":\"main_kmph__CRiAk\",\"speedometer\":\"main_speedometer__y2tDe\",\"rpm\":\"main_rpm__vHlxG\",\"tachometer\":\"main_tachometer__iqTwx\",\"odometer\":\"main_odometer__admzG\",\"elapsedTime\":\"main_elapsedTime__uqXzO\",\"overlay\":\"main_overlay__64GyQ\",\"contents\":\"main_contents__E7KZr\",\"header\":\"main_header__QxPLJ\",\"restartButton\":\"main_restartButton__GM-S8\"};","function loadSounds() {\r\nconst sounds = {\r\n    driving : document.getElementById ('driving'),\r\n    rev_short : document.getElementById ('rev_short'),\r\n    rev_long : document.getElementById ('rev_long'),\r\n    bounce : document.getElementById ('bounce'),\r\n    crash : document.getElementById ('crash'),\r\n};\r\n\r\nreturn sounds;\r\n}\r\n\r\nexport default function initSound(volume) {\r\nconst game_volume = volume || 0.5;\r\nconst sounds = loadSounds();\r\nfor (const sound in sounds)\r\n{\r\n    sounds[sound].volume = game_volume;\r\n}\r\nreturn sounds;\r\n}\r\n","import {\n\tBufferGeometry,\n\tFileLoader,\n\tFloat32BufferAttribute,\n\tGroup,\n\tLineBasicMaterial,\n\tLineSegments,\n\tLoader,\n\tMaterial,\n\tMesh,\n\tMeshPhongMaterial,\n\tPoints,\n\tPointsMaterial,\n\tVector3,\n\tColor\n} from 'three';\n\n// o object_name | g group_name\nconst _object_pattern = /^[og]\\s*(.+)?/;\n// mtllib file_reference\nconst _material_library_pattern = /^mtllib /;\n// usemtl material_name\nconst _material_use_pattern = /^usemtl /;\n// usemap map_name\nconst _map_use_pattern = /^usemap /;\nconst _face_vertex_data_separator_pattern = /\\s+/;\n\nconst _vA = new Vector3();\nconst _vB = new Vector3();\nconst _vC = new Vector3();\n\nconst _ab = new Vector3();\nconst _cb = new Vector3();\n\nconst _color = new Color();\n\nfunction ParserState() {\n\n\tconst state = {\n\t\tobjects: [],\n\t\tobject: {},\n\n\t\tvertices: [],\n\t\tnormals: [],\n\t\tcolors: [],\n\t\tuvs: [],\n\n\t\tmaterials: {},\n\t\tmaterialLibraries: [],\n\n\t\tstartObject: function ( name, fromDeclaration ) {\n\n\t\t\t// If the current object (initial from reset) is not from a g/o declaration in the parsed\n\t\t\t// file. We need to use it for the first parsed g/o to keep things in sync.\n\t\t\tif ( this.object && this.object.fromDeclaration === false ) {\n\n\t\t\t\tthis.object.name = name;\n\t\t\t\tthis.object.fromDeclaration = ( fromDeclaration !== false );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst previousMaterial = ( this.object && typeof this.object.currentMaterial === 'function' ? this.object.currentMaterial() : undefined );\n\n\t\t\tif ( this.object && typeof this.object._finalize === 'function' ) {\n\n\t\t\t\tthis.object._finalize( true );\n\n\t\t\t}\n\n\t\t\tthis.object = {\n\t\t\t\tname: name || '',\n\t\t\t\tfromDeclaration: ( fromDeclaration !== false ),\n\n\t\t\t\tgeometry: {\n\t\t\t\t\tvertices: [],\n\t\t\t\t\tnormals: [],\n\t\t\t\t\tcolors: [],\n\t\t\t\t\tuvs: [],\n\t\t\t\t\thasUVIndices: false\n\t\t\t\t},\n\t\t\t\tmaterials: [],\n\t\t\t\tsmooth: true,\n\n\t\t\t\tstartMaterial: function ( name, libraries ) {\n\n\t\t\t\t\tconst previous = this._finalize( false );\n\n\t\t\t\t\t// New usemtl declaration overwrites an inherited material, except if faces were declared\n\t\t\t\t\t// after the material, then it must be preserved for proper MultiMaterial continuation.\n\t\t\t\t\tif ( previous && ( previous.inherited || previous.groupCount <= 0 ) ) {\n\n\t\t\t\t\t\tthis.materials.splice( previous.index, 1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst material = {\n\t\t\t\t\t\tindex: this.materials.length,\n\t\t\t\t\t\tname: name || '',\n\t\t\t\t\t\tmtllib: ( Array.isArray( libraries ) && libraries.length > 0 ? libraries[ libraries.length - 1 ] : '' ),\n\t\t\t\t\t\tsmooth: ( previous !== undefined ? previous.smooth : this.smooth ),\n\t\t\t\t\t\tgroupStart: ( previous !== undefined ? previous.groupEnd : 0 ),\n\t\t\t\t\t\tgroupEnd: - 1,\n\t\t\t\t\t\tgroupCount: - 1,\n\t\t\t\t\t\tinherited: false,\n\n\t\t\t\t\t\tclone: function ( index ) {\n\n\t\t\t\t\t\t\tconst cloned = {\n\t\t\t\t\t\t\t\tindex: ( typeof index === 'number' ? index : this.index ),\n\t\t\t\t\t\t\t\tname: this.name,\n\t\t\t\t\t\t\t\tmtllib: this.mtllib,\n\t\t\t\t\t\t\t\tsmooth: this.smooth,\n\t\t\t\t\t\t\t\tgroupStart: 0,\n\t\t\t\t\t\t\t\tgroupEnd: - 1,\n\t\t\t\t\t\t\t\tgroupCount: - 1,\n\t\t\t\t\t\t\t\tinherited: false\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tcloned.clone = this.clone.bind( cloned );\n\t\t\t\t\t\t\treturn cloned;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.materials.push( material );\n\n\t\t\t\t\treturn material;\n\n\t\t\t\t},\n\n\t\t\t\tcurrentMaterial: function () {\n\n\t\t\t\t\tif ( this.materials.length > 0 ) {\n\n\t\t\t\t\t\treturn this.materials[ this.materials.length - 1 ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn undefined;\n\n\t\t\t\t},\n\n\t\t\t\t_finalize: function ( end ) {\n\n\t\t\t\t\tconst lastMultiMaterial = this.currentMaterial();\n\t\t\t\t\tif ( lastMultiMaterial && lastMultiMaterial.groupEnd === - 1 ) {\n\n\t\t\t\t\t\tlastMultiMaterial.groupEnd = this.geometry.vertices.length / 3;\n\t\t\t\t\t\tlastMultiMaterial.groupCount = lastMultiMaterial.groupEnd - lastMultiMaterial.groupStart;\n\t\t\t\t\t\tlastMultiMaterial.inherited = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Ignore objects tail materials if no face declarations followed them before a new o/g started.\n\t\t\t\t\tif ( end && this.materials.length > 1 ) {\n\n\t\t\t\t\t\tfor ( let mi = this.materials.length - 1; mi >= 0; mi -- ) {\n\n\t\t\t\t\t\t\tif ( this.materials[ mi ].groupCount <= 0 ) {\n\n\t\t\t\t\t\t\t\tthis.materials.splice( mi, 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Guarantee at least one empty material, this makes the creation later more straight forward.\n\t\t\t\t\tif ( end && this.materials.length === 0 ) {\n\n\t\t\t\t\t\tthis.materials.push( {\n\t\t\t\t\t\t\tname: '',\n\t\t\t\t\t\t\tsmooth: this.smooth\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn lastMultiMaterial;\n\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Inherit previous objects material.\n\t\t\t// Spec tells us that a declared material must be set to all objects until a new material is declared.\n\t\t\t// If a usemtl declaration is encountered while this new object is being parsed, it will\n\t\t\t// overwrite the inherited material. Exception being that there was already face declarations\n\t\t\t// to the inherited material, then it will be preserved for proper MultiMaterial continuation.\n\n\t\t\tif ( previousMaterial && previousMaterial.name && typeof previousMaterial.clone === 'function' ) {\n\n\t\t\t\tconst declared = previousMaterial.clone( 0 );\n\t\t\t\tdeclared.inherited = true;\n\t\t\t\tthis.object.materials.push( declared );\n\n\t\t\t}\n\n\t\t\tthis.objects.push( this.object );\n\n\t\t},\n\n\t\tfinalize: function () {\n\n\t\t\tif ( this.object && typeof this.object._finalize === 'function' ) {\n\n\t\t\t\tthis.object._finalize( true );\n\n\t\t\t}\n\n\t\t},\n\n\t\tparseVertexIndex: function ( value, len ) {\n\n\t\t\tconst index = parseInt( value, 10 );\n\t\t\treturn ( index >= 0 ? index - 1 : index + len / 3 ) * 3;\n\n\t\t},\n\n\t\tparseNormalIndex: function ( value, len ) {\n\n\t\t\tconst index = parseInt( value, 10 );\n\t\t\treturn ( index >= 0 ? index - 1 : index + len / 3 ) * 3;\n\n\t\t},\n\n\t\tparseUVIndex: function ( value, len ) {\n\n\t\t\tconst index = parseInt( value, 10 );\n\t\t\treturn ( index >= 0 ? index - 1 : index + len / 2 ) * 2;\n\n\t\t},\n\n\t\taddVertex: function ( a, b, c ) {\n\n\t\t\tconst src = this.vertices;\n\t\t\tconst dst = this.object.geometry.vertices;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t},\n\n\t\taddVertexPoint: function ( a ) {\n\n\t\t\tconst src = this.vertices;\n\t\t\tconst dst = this.object.geometry.vertices;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\n\t\t},\n\n\t\taddVertexLine: function ( a ) {\n\n\t\t\tconst src = this.vertices;\n\t\t\tconst dst = this.object.geometry.vertices;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\n\t\t},\n\n\t\taddNormal: function ( a, b, c ) {\n\n\t\t\tconst src = this.normals;\n\t\t\tconst dst = this.object.geometry.normals;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t},\n\n\t\taddFaceNormal: function ( a, b, c ) {\n\n\t\t\tconst src = this.vertices;\n\t\t\tconst dst = this.object.geometry.normals;\n\n\t\t\t_vA.fromArray( src, a );\n\t\t\t_vB.fromArray( src, b );\n\t\t\t_vC.fromArray( src, c );\n\n\t\t\t_cb.subVectors( _vC, _vB );\n\t\t\t_ab.subVectors( _vA, _vB );\n\t\t\t_cb.cross( _ab );\n\n\t\t\t_cb.normalize();\n\n\t\t\tdst.push( _cb.x, _cb.y, _cb.z );\n\t\t\tdst.push( _cb.x, _cb.y, _cb.z );\n\t\t\tdst.push( _cb.x, _cb.y, _cb.z );\n\n\t\t},\n\n\t\taddColor: function ( a, b, c ) {\n\n\t\t\tconst src = this.colors;\n\t\t\tconst dst = this.object.geometry.colors;\n\n\t\t\tif ( src[ a ] !== undefined ) dst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\tif ( src[ b ] !== undefined ) dst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\tif ( src[ c ] !== undefined ) dst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t},\n\n\t\taddUV: function ( a, b, c ) {\n\n\t\t\tconst src = this.uvs;\n\t\t\tconst dst = this.object.geometry.uvs;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ] );\n\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ] );\n\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ] );\n\n\t\t},\n\n\t\taddDefaultUV: function () {\n\n\t\t\tconst dst = this.object.geometry.uvs;\n\n\t\t\tdst.push( 0, 0 );\n\t\t\tdst.push( 0, 0 );\n\t\t\tdst.push( 0, 0 );\n\n\t\t},\n\n\t\taddUVLine: function ( a ) {\n\n\t\t\tconst src = this.uvs;\n\t\t\tconst dst = this.object.geometry.uvs;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ] );\n\n\t\t},\n\n\t\taddFace: function ( a, b, c, ua, ub, uc, na, nb, nc ) {\n\n\t\t\tconst vLen = this.vertices.length;\n\n\t\t\tlet ia = this.parseVertexIndex( a, vLen );\n\t\t\tlet ib = this.parseVertexIndex( b, vLen );\n\t\t\tlet ic = this.parseVertexIndex( c, vLen );\n\n\t\t\tthis.addVertex( ia, ib, ic );\n\t\t\tthis.addColor( ia, ib, ic );\n\n\t\t\t// normals\n\n\t\t\tif ( na !== undefined && na !== '' ) {\n\n\t\t\t\tconst nLen = this.normals.length;\n\n\t\t\t\tia = this.parseNormalIndex( na, nLen );\n\t\t\t\tib = this.parseNormalIndex( nb, nLen );\n\t\t\t\tic = this.parseNormalIndex( nc, nLen );\n\n\t\t\t\tthis.addNormal( ia, ib, ic );\n\n\t\t\t} else {\n\n\t\t\t\tthis.addFaceNormal( ia, ib, ic );\n\n\t\t\t}\n\n\t\t\t// uvs\n\n\t\t\tif ( ua !== undefined && ua !== '' ) {\n\n\t\t\t\tconst uvLen = this.uvs.length;\n\n\t\t\t\tia = this.parseUVIndex( ua, uvLen );\n\t\t\t\tib = this.parseUVIndex( ub, uvLen );\n\t\t\t\tic = this.parseUVIndex( uc, uvLen );\n\n\t\t\t\tthis.addUV( ia, ib, ic );\n\n\t\t\t\tthis.object.geometry.hasUVIndices = true;\n\n\t\t\t} else {\n\n\t\t\t\t// add placeholder values (for inconsistent face definitions)\n\n\t\t\t\tthis.addDefaultUV();\n\n\t\t\t}\n\n\t\t},\n\n\t\taddPointGeometry: function ( vertices ) {\n\n\t\t\tthis.object.geometry.type = 'Points';\n\n\t\t\tconst vLen = this.vertices.length;\n\n\t\t\tfor ( let vi = 0, l = vertices.length; vi < l; vi ++ ) {\n\n\t\t\t\tconst index = this.parseVertexIndex( vertices[ vi ], vLen );\n\n\t\t\t\tthis.addVertexPoint( index );\n\t\t\t\tthis.addColor( index );\n\n\t\t\t}\n\n\t\t},\n\n\t\taddLineGeometry: function ( vertices, uvs ) {\n\n\t\t\tthis.object.geometry.type = 'Line';\n\n\t\t\tconst vLen = this.vertices.length;\n\t\t\tconst uvLen = this.uvs.length;\n\n\t\t\tfor ( let vi = 0, l = vertices.length; vi < l; vi ++ ) {\n\n\t\t\t\tthis.addVertexLine( this.parseVertexIndex( vertices[ vi ], vLen ) );\n\n\t\t\t}\n\n\t\t\tfor ( let uvi = 0, l = uvs.length; uvi < l; uvi ++ ) {\n\n\t\t\t\tthis.addUVLine( this.parseUVIndex( uvs[ uvi ], uvLen ) );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tstate.startObject( '', false );\n\n\treturn state;\n\n}\n\n//\n\nclass OBJLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.materials = null;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( text ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tsetMaterials( materials ) {\n\n\t\tthis.materials = materials;\n\n\t\treturn this;\n\n\t}\n\n\tparse( text ) {\n\n\t\tconst state = new ParserState();\n\n\t\tif ( text.indexOf( '\\r\\n' ) !== - 1 ) {\n\n\t\t\t// This is faster than String.split with regex that splits on both\n\t\t\ttext = text.replace( /\\r\\n/g, '\\n' );\n\n\t\t}\n\n\t\tif ( text.indexOf( '\\\\\\n' ) !== - 1 ) {\n\n\t\t\t// join lines separated by a line continuation character (\\)\n\t\t\ttext = text.replace( /\\\\\\n/g, '' );\n\n\t\t}\n\n\t\tconst lines = text.split( '\\n' );\n\t\tlet result = [];\n\n\t\tfor ( let i = 0, l = lines.length; i < l; i ++ ) {\n\n\t\t\tconst line = lines[ i ].trimStart();\n\n\t\t\tif ( line.length === 0 ) continue;\n\n\t\t\tconst lineFirstChar = line.charAt( 0 );\n\n\t\t\t// @todo invoke passed in handler if any\n\t\t\tif ( lineFirstChar === '#' ) continue;\n\n\t\t\tif ( lineFirstChar === 'v' ) {\n\n\t\t\t\tconst data = line.split( _face_vertex_data_separator_pattern );\n\n\t\t\t\tswitch ( data[ 0 ] ) {\n\n\t\t\t\t\tcase 'v':\n\t\t\t\t\t\tstate.vertices.push(\n\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\tparseFloat( data[ 2 ] ),\n\t\t\t\t\t\t\tparseFloat( data[ 3 ] )\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif ( data.length >= 7 ) {\n\n\t\t\t\t\t\t\t_color.setRGB(\n\t\t\t\t\t\t\t\tparseFloat( data[ 4 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 5 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 6 ] )\n\t\t\t\t\t\t\t).convertSRGBToLinear();\n\n\t\t\t\t\t\t\tstate.colors.push( _color.r, _color.g, _color.b );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// if no colors are defined, add placeholders so color and vertex indices match\n\n\t\t\t\t\t\t\tstate.colors.push( undefined, undefined, undefined );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'vn':\n\t\t\t\t\t\tstate.normals.push(\n\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\tparseFloat( data[ 2 ] ),\n\t\t\t\t\t\t\tparseFloat( data[ 3 ] )\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'vt':\n\t\t\t\t\t\tstate.uvs.push(\n\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\tparseFloat( data[ 2 ] )\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t} else if ( lineFirstChar === 'f' ) {\n\n\t\t\t\tconst lineData = line.slice( 1 ).trim();\n\t\t\t\tconst vertexData = lineData.split( _face_vertex_data_separator_pattern );\n\t\t\t\tconst faceVertices = [];\n\n\t\t\t\t// Parse the face vertex data into an easy to work with format\n\n\t\t\t\tfor ( let j = 0, jl = vertexData.length; j < jl; j ++ ) {\n\n\t\t\t\t\tconst vertex = vertexData[ j ];\n\n\t\t\t\t\tif ( vertex.length > 0 ) {\n\n\t\t\t\t\t\tconst vertexParts = vertex.split( '/' );\n\t\t\t\t\t\tfaceVertices.push( vertexParts );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Draw an edge between the first vertex and all subsequent vertices to form an n-gon\n\n\t\t\t\tconst v1 = faceVertices[ 0 ];\n\n\t\t\t\tfor ( let j = 1, jl = faceVertices.length - 1; j < jl; j ++ ) {\n\n\t\t\t\t\tconst v2 = faceVertices[ j ];\n\t\t\t\t\tconst v3 = faceVertices[ j + 1 ];\n\n\t\t\t\t\tstate.addFace(\n\t\t\t\t\t\tv1[ 0 ], v2[ 0 ], v3[ 0 ],\n\t\t\t\t\t\tv1[ 1 ], v2[ 1 ], v3[ 1 ],\n\t\t\t\t\t\tv1[ 2 ], v2[ 2 ], v3[ 2 ]\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t} else if ( lineFirstChar === 'l' ) {\n\n\t\t\t\tconst lineParts = line.substring( 1 ).trim().split( ' ' );\n\t\t\t\tlet lineVertices = [];\n\t\t\t\tconst lineUVs = [];\n\n\t\t\t\tif ( line.indexOf( '/' ) === - 1 ) {\n\n\t\t\t\t\tlineVertices = lineParts;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( let li = 0, llen = lineParts.length; li < llen; li ++ ) {\n\n\t\t\t\t\t\tconst parts = lineParts[ li ].split( '/' );\n\n\t\t\t\t\t\tif ( parts[ 0 ] !== '' ) lineVertices.push( parts[ 0 ] );\n\t\t\t\t\t\tif ( parts[ 1 ] !== '' ) lineUVs.push( parts[ 1 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstate.addLineGeometry( lineVertices, lineUVs );\n\n\t\t\t} else if ( lineFirstChar === 'p' ) {\n\n\t\t\t\tconst lineData = line.slice( 1 ).trim();\n\t\t\t\tconst pointData = lineData.split( ' ' );\n\n\t\t\t\tstate.addPointGeometry( pointData );\n\n\t\t\t} else if ( ( result = _object_pattern.exec( line ) ) !== null ) {\n\n\t\t\t\t// o object_name\n\t\t\t\t// or\n\t\t\t\t// g group_name\n\n\t\t\t\t// WORKAROUND: https://bugs.chromium.org/p/v8/issues/detail?id=2869\n\t\t\t\t// let name = result[ 0 ].slice( 1 ).trim();\n\t\t\t\tconst name = ( ' ' + result[ 0 ].slice( 1 ).trim() ).slice( 1 );\n\n\t\t\t\tstate.startObject( name );\n\n\t\t\t} else if ( _material_use_pattern.test( line ) ) {\n\n\t\t\t\t// material\n\n\t\t\t\tstate.object.startMaterial( line.substring( 7 ).trim(), state.materialLibraries );\n\n\t\t\t} else if ( _material_library_pattern.test( line ) ) {\n\n\t\t\t\t// mtl file\n\n\t\t\t\tstate.materialLibraries.push( line.substring( 7 ).trim() );\n\n\t\t\t} else if ( _map_use_pattern.test( line ) ) {\n\n\t\t\t\t// the line is parsed but ignored since the loader assumes textures are defined MTL files\n\t\t\t\t// (according to https://www.okino.com/conv/imp_wave.htm, 'usemap' is the old-style Wavefront texture reference method)\n\n\t\t\t\tconsole.warn( 'THREE.OBJLoader: Rendering identifier \"usemap\" not supported. Textures must be defined in MTL files.' );\n\n\t\t\t} else if ( lineFirstChar === 's' ) {\n\n\t\t\t\tresult = line.split( ' ' );\n\n\t\t\t\t// smooth shading\n\n\t\t\t\t// @todo Handle files that have varying smooth values for a set of faces inside one geometry,\n\t\t\t\t// but does not define a usemtl for each face set.\n\t\t\t\t// This should be detected and a dummy material created (later MultiMaterial and geometry groups).\n\t\t\t\t// This requires some care to not create extra material on each smooth value for \"normal\" obj files.\n\t\t\t\t// where explicit usemtl defines geometry groups.\n\t\t\t\t// Example asset: examples/models/obj/cerberus/Cerberus.obj\n\n\t\t\t\t/*\n\t\t\t\t\t * http://paulbourke.net/dataformats/obj/\n\t\t\t\t\t *\n\t\t\t\t\t * From chapter \"Grouping\" Syntax explanation \"s group_number\":\n\t\t\t\t\t * \"group_number is the smoothing group number. To turn off smoothing groups, use a value of 0 or off.\n\t\t\t\t\t * Polygonal elements use group numbers to put elements in different smoothing groups. For free-form\n\t\t\t\t\t * surfaces, smoothing groups are either turned on or off; there is no difference between values greater\n\t\t\t\t\t * than 0.\"\n\t\t\t\t\t */\n\t\t\t\tif ( result.length > 1 ) {\n\n\t\t\t\t\tconst value = result[ 1 ].trim().toLowerCase();\n\t\t\t\t\tstate.object.smooth = ( value !== '0' && value !== 'off' );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// ZBrush can produce \"s\" lines #11707\n\t\t\t\t\tstate.object.smooth = true;\n\n\t\t\t\t}\n\n\t\t\t\tconst material = state.object.currentMaterial();\n\t\t\t\tif ( material ) material.smooth = state.object.smooth;\n\n\t\t\t} else {\n\n\t\t\t\t// Handle null terminated files without exception\n\t\t\t\tif ( line === '\\0' ) continue;\n\n\t\t\t\tconsole.warn( 'THREE.OBJLoader: Unexpected line: \"' + line + '\"' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.finalize();\n\n\t\tconst container = new Group();\n\t\tcontainer.materialLibraries = [].concat( state.materialLibraries );\n\n\t\tconst hasPrimitives = ! ( state.objects.length === 1 && state.objects[ 0 ].geometry.vertices.length === 0 );\n\n\t\tif ( hasPrimitives === true ) {\n\n\t\t\tfor ( let i = 0, l = state.objects.length; i < l; i ++ ) {\n\n\t\t\t\tconst object = state.objects[ i ];\n\t\t\t\tconst geometry = object.geometry;\n\t\t\t\tconst materials = object.materials;\n\t\t\t\tconst isLine = ( geometry.type === 'Line' );\n\t\t\t\tconst isPoints = ( geometry.type === 'Points' );\n\t\t\t\tlet hasVertexColors = false;\n\n\t\t\t\t// Skip o/g line declarations that did not follow with any faces\n\t\t\t\tif ( geometry.vertices.length === 0 ) continue;\n\n\t\t\t\tconst buffergeometry = new BufferGeometry();\n\n\t\t\t\tbuffergeometry.setAttribute( 'position', new Float32BufferAttribute( geometry.vertices, 3 ) );\n\n\t\t\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\t\t\tbuffergeometry.setAttribute( 'normal', new Float32BufferAttribute( geometry.normals, 3 ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\t\t\thasVertexColors = true;\n\t\t\t\t\tbuffergeometry.setAttribute( 'color', new Float32BufferAttribute( geometry.colors, 3 ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.hasUVIndices === true ) {\n\n\t\t\t\t\tbuffergeometry.setAttribute( 'uv', new Float32BufferAttribute( geometry.uvs, 2 ) );\n\n\t\t\t\t}\n\n\t\t\t\t// Create materials\n\n\t\t\t\tconst createdMaterials = [];\n\n\t\t\t\tfor ( let mi = 0, miLen = materials.length; mi < miLen; mi ++ ) {\n\n\t\t\t\t\tconst sourceMaterial = materials[ mi ];\n\t\t\t\t\tconst materialHash = sourceMaterial.name + '_' + sourceMaterial.smooth + '_' + hasVertexColors;\n\t\t\t\t\tlet material = state.materials[ materialHash ];\n\n\t\t\t\t\tif ( this.materials !== null ) {\n\n\t\t\t\t\t\tmaterial = this.materials.create( sourceMaterial.name );\n\n\t\t\t\t\t\t// mtl etc. loaders probably can't create line materials correctly, copy properties to a line material.\n\t\t\t\t\t\tif ( isLine && material && ! ( material instanceof LineBasicMaterial ) ) {\n\n\t\t\t\t\t\t\tconst materialLine = new LineBasicMaterial();\n\t\t\t\t\t\t\tMaterial.prototype.copy.call( materialLine, material );\n\t\t\t\t\t\t\tmaterialLine.color.copy( material.color );\n\t\t\t\t\t\t\tmaterial = materialLine;\n\n\t\t\t\t\t\t} else if ( isPoints && material && ! ( material instanceof PointsMaterial ) ) {\n\n\t\t\t\t\t\t\tconst materialPoints = new PointsMaterial( { size: 10, sizeAttenuation: false } );\n\t\t\t\t\t\t\tMaterial.prototype.copy.call( materialPoints, material );\n\t\t\t\t\t\t\tmaterialPoints.color.copy( material.color );\n\t\t\t\t\t\t\tmaterialPoints.map = material.map;\n\t\t\t\t\t\t\tmaterial = materialPoints;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( material === undefined ) {\n\n\t\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\t\tmaterial = new LineBasicMaterial();\n\n\t\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\t\tmaterial = new PointsMaterial( { size: 1, sizeAttenuation: false } );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tmaterial = new MeshPhongMaterial();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaterial.name = sourceMaterial.name;\n\t\t\t\t\t\tmaterial.flatShading = sourceMaterial.smooth ? false : true;\n\t\t\t\t\t\tmaterial.vertexColors = hasVertexColors;\n\n\t\t\t\t\t\tstate.materials[ materialHash ] = material;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcreatedMaterials.push( material );\n\n\t\t\t\t}\n\n\t\t\t\t// Create mesh\n\n\t\t\t\tlet mesh;\n\n\t\t\t\tif ( createdMaterials.length > 1 ) {\n\n\t\t\t\t\tfor ( let mi = 0, miLen = materials.length; mi < miLen; mi ++ ) {\n\n\t\t\t\t\t\tconst sourceMaterial = materials[ mi ];\n\t\t\t\t\t\tbuffergeometry.addGroup( sourceMaterial.groupStart, sourceMaterial.groupCount, mi );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\tmesh = new LineSegments( buffergeometry, createdMaterials );\n\n\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\tmesh = new Points( buffergeometry, createdMaterials );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tmesh = new Mesh( buffergeometry, createdMaterials );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\tmesh = new LineSegments( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\tmesh = new Points( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tmesh = new Mesh( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tmesh.name = object.name;\n\n\t\t\t\tcontainer.add( mesh );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// if there is only the default parser state object with no geometry data, interpret data as point cloud\n\n\t\t\tif ( state.vertices.length > 0 ) {\n\n\t\t\t\tconst material = new PointsMaterial( { size: 1, sizeAttenuation: false } );\n\n\t\t\t\tconst buffergeometry = new BufferGeometry();\n\n\t\t\t\tbuffergeometry.setAttribute( 'position', new Float32BufferAttribute( state.vertices, 3 ) );\n\n\t\t\t\tif ( state.colors.length > 0 && state.colors[ 0 ] !== undefined ) {\n\n\t\t\t\t\tbuffergeometry.setAttribute( 'color', new Float32BufferAttribute( state.colors, 3 ) );\n\t\t\t\t\tmaterial.vertexColors = true;\n\n\t\t\t\t}\n\n\t\t\t\tconst points = new Points( buffergeometry, material );\n\t\t\t\tcontainer.add( points );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn container;\n\n\t}\n\n}\n\nexport { OBJLoader };\n","import * as THREE from 'three'\r\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader'\r\nimport { MTLLoader } from 'three/examples/jsm/loaders/MTLLoader'\r\nlet textureSky, \r\ntextureGround, \r\ntextureFinishLine, \r\ndisplaySigns, \r\nsence, \r\ncurTime, \r\ntexture, \r\nskyBackup,\r\ngroundBackup,\r\nroadBackup,\r\nleftrailBackup,\r\nrightrailBackup,\r\nfinishsignBackup\r\n\r\nconst CAR_LENGTH = 4.2\r\nconst CAR_WIDTH = 1.8;\r\nconst DEFAULT_SPEED = 100 * 1000 / 3600;\r\nconst DEFAULT_SPEED_FACTOR = 2;\r\nconst CAR_HEIGHT = 1.2;\r\n\r\nconst RacingGame = {}\r\nRacingGame.COLLIDE_RADIUS = Math.sqrt(2 * CAR_WIDTH);\r\nRacingGame.STATE_LOADING = 0;\r\nRacingGame.STATE_RUNNING = 1;\r\nRacingGame.STATE_COMPLETE = 2;\r\nRacingGame.STATE_CRASHED = 3;\r\nRacingGame.CAR_Y = .4666;\r\nRacingGame.CAR_START_Z = 10;\r\nRacingGame.PLAYER_START_Z = 4;\r\nRacingGame.best_time = Number.MAX_VALUE;\r\n\r\nconst Environment = {}\r\nEnvironment.SKY_WIDTH = 3000;\r\nEnvironment.SKY_HEIGHT = 200;\r\nEnvironment.GROUND_Y = -10;\r\nEnvironment.GROUND_WIDTH = 2000;\r\nEnvironment.GROUND_LENGTH = 800;\r\nEnvironment.ROAD_WIDTH = 8;\r\nEnvironment.ROAD_LENGTH = 400;\r\nEnvironment.RAIL_WIDTH = .2;\r\nEnvironment.RAIL_LENGTH = Environment.ROAD_LENGTH;\r\nEnvironment.ANIMATE_ROAD_FACTOR = 2;\r\nEnvironment.FINISH_SIGN_WIDTH = 4.333;\r\nEnvironment.FINISH_SIGN_HEIGHT = 1;\r\nEnvironment.FINISH_SIGN_Y = 2.22;\r\nEnvironment.NUM_SIGNS = 8;\r\nEnvironment.SIGN_SCALE = .5;\r\n\r\nfunction createSky() {\r\n    if (textureSky)\r\n    {\r\n        const loader = new THREE.TextureLoader()\r\n        texture = loader.load(require('../media/pics/clouds1273.jpg'))\r\n        texture.wrapS = texture.wrapT = THREE.MirroredRepeatWrapping;\r\n        texture.repeat.set(1, 1);\r\n    }\r\n    else\r\n    {\r\n        texture = null;\r\n    }\r\n        \r\n    const sky = new THREE.Mesh( new THREE.PlaneGeometry( Environment.SKY_WIDTH, \r\n        Environment.SKY_HEIGHT ), \r\n        new THREE.MeshBasicMaterial( \r\n        { color: textureSky ? 0xffffff : 0x3fafdd, map:texture } \r\n        ) \r\n    );\r\n    sky.position.y = 100 + Environment.GROUND_Y;\r\n    sky.position.z = -Environment.GROUND_LENGTH / 2;\r\n    sence.add( sky );\r\n    skyBackup = sky;\r\n}\r\nfunction createGround() {\r\n    let texture = null;\r\n\r\n\t// Sand texture\r\n\tif (textureGround)\r\n\t{\r\n        const loader = new THREE.TextureLoader()\r\n\t\ttexture = loader.load(require(\"../media/pics/Sand_002.JPG\"));\r\n\t    texture.wrapS = texture.wrapT = THREE.RepeatWrapping;\r\n\t    texture.repeat.set(10, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\ttexture = null;\r\n\t}\r\n\t\r\n\tconst ground = new THREE.Mesh( new THREE.PlaneGeometry( Environment.GROUND_WIDTH, \r\n\t\t\tEnvironment.GROUND_LENGTH ), \r\n\t\t\tnew THREE.MeshBasicMaterial( \r\n\t\t\t{ color: textureGround ? 0xffffff : 0xaaaaaa, ambient: 0x333333, map:texture } \r\n\t\t\t)\r\n\t);\r\n\tground.rotation.x = -Math.PI/2;\r\n\tground.position.y = -.02 + Environment.GROUND_Y;\r\n\tsence.add( ground );\r\n\tgroundBackup = ground;\r\n}\r\nfunction createRoad() {\r\n    let texture = null;\t\r\n\r\n    // Road texture by Arenshi\r\n    // http://www.turbosquid.com/Search/Artists/Arenshi\r\n    // http://www.turbosquid.com/FullPreview/Index.cfm/ID/414729\t\t\r\n    texture = (new THREE.TextureLoader()).load(require(\"../media/pics/road-rotated.jpg\"));\r\n    texture.wrapS = texture.wrapT = THREE.RepeatWrapping;\r\n    texture.repeat.set(1, 40);\r\n\r\n    const road = new THREE.Mesh( new THREE.PlaneGeometry( Environment.ROAD_WIDTH, \r\n            Environment.ROAD_LENGTH * 2),\r\n            new THREE.MeshBasicMaterial( \r\n                    { color: 0xaaaaaa, shininess:100, ambient: 0x333333, map:texture } \r\n            ) \r\n    );\r\n    road.rotation.x = -Math.PI/2;\r\n    road.position.y = 0 + Environment.GROUND_Y;\r\n    sence.add( road );\r\n    roadBackup = road;\r\n}\r\nfunction createGuardRails() {\r\n    let texture = null;\t\r\n\r\n\t// Guard rail by scimdia\r\n\t// http://www.turbosquid.com/Search/Artists/scimdia\r\n\t// http://www.turbosquid.com/FullPreview/Index.cfm/ID/365705\r\n\ttexture = (new THREE.TextureLoader()).load(require(\"../media/pics/Guard_Rail-rotated.jpg\"))\r\n    texture.wrapS = texture.wrapT = THREE.RepeatWrapping;\r\n    texture.repeat.set(1, 40);\r\n\t\r\n\tconst leftrail = new THREE.Mesh( new THREE.PlaneGeometry( Environment.RAIL_WIDTH, \r\n        Environment.RAIL_LENGTH * 2), \r\n        new THREE.MeshBasicMaterial( \r\n        { color: 0xaaaaaa, shininess:100, ambient: 0x333333, map:texture } \r\n        )\r\n\t);\r\n\tleftrail.rotation.x = -Math.PI/2;\r\n\tleftrail.rotation.y = Math.PI/2;\r\n\tleftrail.position.x = -Environment.ROAD_WIDTH / 2;\r\n\tleftrail.position.y = .5 + Environment.GROUND_Y;\r\n\t\r\n\tsence.add( leftrail );\r\n\tleftrailBackup = leftrail;\r\n\t\r\n\tconst rightrail = new THREE.Mesh( new THREE.PlaneGeometry( Environment.RAIL_WIDTH, \r\n        Environment.RAIL_LENGTH * 2), \r\n        new THREE.MeshBasicMaterial( \r\n        { color: 0xaaaaaa, shininess:100, ambient: 0x333333, map:texture } \r\n        )\r\n\t);\r\n\trightrail.rotation.x = -Math.PI/2;\r\n\trightrail.rotation.y = -Math.PI/2;\r\n\trightrail.position.x = Environment.ROAD_WIDTH / 2;\r\n\trightrail.position.y = .5 + Environment.GROUND_Y;\r\n\t\r\n    sence.add( rightrail );\r\n\trightrailBackup = rightrail;\r\n}\r\nfunction createFinishLine() {\r\n    let texture = null;\t\r\n\r\n\tif (textureFinishLine)\r\n\t{\r\n\t\ttexture = (new THREE.TextureLoader()).load(require(\"../media/pics/game-finish-line.png\"))\r\n\t}\r\n\telse\r\n\t{\r\n\t\ttexture = null;\r\n\t}\r\n\t\t\r\n\tconst finishsign = new THREE.Mesh( new THREE.PlaneGeometry( Environment.FINISH_SIGN_WIDTH, \r\n        Environment.FINISH_SIGN_HEIGHT ), \r\n        new THREE.MeshBasicMaterial( \r\n        { color: textureFinishLine ? 0xFFFFFF : 0xaaaaaa, \r\n                shininess:100, ambient: 0x333333, map:texture } \r\n        )\r\n\t);\r\n\tfinishsign.position.z = -Environment.ROAD_LENGTH / 2 - CAR_LENGTH * 2;\r\n\tfinishsign.position.y = Environment.FINISH_SIGN_Y + Environment.GROUND_Y;\r\n\t\r\n\tsence.add( finishsign );\r\n\tfinishsignBackup = finishsign;\r\n}\r\nfunction createSigns() {\r\n    // const url = require('/models/Route66obj/RT66sign.js')\r\n    // console.log(\"XXX\", url)\r\n    const group = new THREE.Object3D;\r\n\tconst loadCallback =  function(model) { onSignLoaded(model); }\r\n\r\n\tlet scale = 0.3;\r\n\t\r\n\tscale = new THREE.Vector3(scale, scale, scale);\r\n\tconst mtlLoader = new MTLLoader()\r\n    mtlLoader.load(\r\n        require('../media/model/Nova Car/NovaCar.mtl'),\r\n        (materials) => {\r\n            materials.preload()\r\n    \r\n            const objLoader = new OBJLoader()\r\n            objLoader.setMaterials(materials)\r\n            objLoader.load(\r\n                require('../media/model/Nova Car/NovaCar.obj'),\r\n                (mesh) => {\r\n                    mesh.scale.copy(scale);\r\n                    mesh.doubleSided = true;\r\n                    mesh.position.set(0, 0, 0);\r\n                    mesh.rotation.set(-Math.PI/2,0,0)\r\n                    // enemy\r\n                    // mesh.rotation.set(options.rotation.x, options.rotation.y, options.rotation.z)\r\n                    // mesh.scale.set(options.scale, options.scale, options.scale);\r\n                    // mesh.position.set(options.position.x, options.position.y, options.position.z);\r\n                    // var randx = (Math.random() -.5 ) * (Environment.ROAD_WIDTH - CAR_WIDTH);\t\t\r\n                    // var randz = (Math.random()) * Environment.ROAD_LENGTH / 2 - RacingGame.CAR_START_Z;\r\n\t\t\r\n                    // mesh.position.set(randx+5, RacingGame.CAR_Y + Environment.GROUND_Y, -randz)\r\n                    // mesh.rotation.set(-Math.PI / 2, 0, 0)\r\n                    sence.add(mesh)\r\n\r\n                    mesh = mesh;\r\n\r\n                    loadCallback({mesh});\r\n                },\r\n                (xhr) => {\r\n                    console.log((xhr.loaded / xhr.total) * 100 + '% loaded')\r\n                },\r\n                (error) => {\r\n                    console.log('An error happened', error)\r\n                }\r\n            )\r\n        },\r\n        (xhr) => {\r\n            console.log((xhr.loaded / xhr.total) * 100 + '% loaded')\r\n        },\r\n        (error) => {\r\n            console.log('An error happened')\r\n        }\r\n    )\r\n    // Tell the framework about our object\r\n    sence.add(group);\r\n}\r\n\r\nfunction onSignLoaded(model) {\r\n\tfor (var i = 0; i < Environment.NUM_SIGNS; i++)\r\n\t{\r\n\t\tvar group = new THREE.Object3D;\r\n\t\tgroup.position.set(5.1, Environment.GROUND_Y, (-Environment.ROAD_LENGTH / 2) + (i * Environment.ROAD_LENGTH / Environment.NUM_SIGNS));\r\n\t\tvar mesh = new THREE.Mesh(model.mesh.geometry, model.mesh.material);\r\n\t\tgroup.scale.set(Environment.SIGN_SCALE, Environment.SIGN_SCALE, Environment.SIGN_SCALE);\r\n\t\tgroup.add(mesh);\r\n\t\tsence.add(group);\r\n\r\n\t\tvar group = new THREE.Object3D;\r\n\t\tgroup.position.set(-5.1, Environment.GROUND_Y, (-Environment.ROAD_LENGTH / 2) + (i * Environment.ROAD_LENGTH / Environment.NUM_SIGNS));\r\n\t\tvar mesh = new THREE.Mesh(model.mesh.geometry, model.mesh.material);\r\n\t\tgroup.scale.set(Environment.SIGN_SCALE, Environment.SIGN_SCALE, Environment.SIGN_SCALE);\r\n\t\tgroup.add(mesh);\r\n\t\tsence.add(group);\r\n\t}\r\n}\r\n\r\nexport default function initEnvironment(param) {\r\n    param = param || {};\r\n\tsence = param.sence\r\n\ttextureSky = param.textureSky;\r\n\ttextureGround = param.textureGround;\r\n\ttextureFinishLine = param.textureFinishLine;\r\n\tdisplaySigns = param.displaySigns;\r\n\t\r\n    // Create a headlight to show off the model\r\n\tconst headlight = new THREE.DirectionalLight( 0xffffff, 1);\r\n\theadlight.position.set(0, 0, 1);\r\n\tsence.add(headlight);\r\n\r\n\tconst toplight = new THREE.DirectionalLight( 0xffffff, 1);\r\n\ttoplight.position.set(0, 1, 0);\r\n\tsence.add(toplight);\t\r\n\t\r\n    const ambient = new THREE.AmbientLight( 0xffffff, 1);\r\n\tsence.add(ambient);\r\n\t\r\n\t// createSky();\r\n\t// createGround();\r\n\t// createRoad();\r\n\t// createGuardRails();\r\n\t// createFinishLine();\r\n\tif (displaySigns)\r\n\t{\r\n\t\tcreateSigns();\r\n\t}\r\n\r\n\tcurTime = Date.now();\r\n}","import {\n\tColor,\n\tDefaultLoadingManager,\n\tFileLoader,\n\tFrontSide,\n\tLoader,\n\tLoaderUtils,\n\tMeshPhongMaterial,\n\tRepeatWrapping,\n\tTextureLoader,\n\tVector2,\n\tsRGBEncoding\n} from 'three';\n\n/**\n * Loads a Wavefront .mtl file specifying materials\n */\n\nclass MTLLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\t/**\n\t * Loads and parses a MTL asset from a URL.\n\t *\n\t * @param {String} url - URL to the MTL file.\n\t * @param {Function} [onLoad] - Callback invoked with the loaded object.\n\t * @param {Function} [onProgress] - Callback for download progress.\n\t * @param {Function} [onError] - Callback for download errors.\n\t *\n\t * @see setPath setResourcePath\n\t *\n\t * @note In order for relative texture references to resolve correctly\n\t * you must call setResourcePath() explicitly prior to load.\n\t */\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( text, path ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tsetMaterialOptions( value ) {\n\n\t\tthis.materialOptions = value;\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Parses a MTL file.\n\t *\n\t * @param {String} text - Content of MTL file\n\t * @return {MaterialCreator}\n\t *\n\t * @see setPath setResourcePath\n\t *\n\t * @note In order for relative texture references to resolve correctly\n\t * you must call setResourcePath() explicitly prior to parse.\n\t */\n\tparse( text, path ) {\n\n\t\tconst lines = text.split( '\\n' );\n\t\tlet info = {};\n\t\tconst delimiter_pattern = /\\s+/;\n\t\tconst materialsInfo = {};\n\n\t\tfor ( let i = 0; i < lines.length; i ++ ) {\n\n\t\t\tlet line = lines[ i ];\n\t\t\tline = line.trim();\n\n\t\t\tif ( line.length === 0 || line.charAt( 0 ) === '#' ) {\n\n\t\t\t\t// Blank line or comment ignore\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst pos = line.indexOf( ' ' );\n\n\t\t\tlet key = ( pos >= 0 ) ? line.substring( 0, pos ) : line;\n\t\t\tkey = key.toLowerCase();\n\n\t\t\tlet value = ( pos >= 0 ) ? line.substring( pos + 1 ) : '';\n\t\t\tvalue = value.trim();\n\n\t\t\tif ( key === 'newmtl' ) {\n\n\t\t\t\t// New material\n\n\t\t\t\tinfo = { name: value };\n\t\t\t\tmaterialsInfo[ value ] = info;\n\n\t\t\t} else {\n\n\t\t\t\tif ( key === 'ka' || key === 'kd' || key === 'ks' || key === 'ke' ) {\n\n\t\t\t\t\tconst ss = value.split( delimiter_pattern, 3 );\n\t\t\t\t\tinfo[ key ] = [ parseFloat( ss[ 0 ] ), parseFloat( ss[ 1 ] ), parseFloat( ss[ 2 ] ) ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tinfo[ key ] = value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst materialCreator = new MaterialCreator( this.resourcePath || path, this.materialOptions );\n\t\tmaterialCreator.setCrossOrigin( this.crossOrigin );\n\t\tmaterialCreator.setManager( this.manager );\n\t\tmaterialCreator.setMaterials( materialsInfo );\n\t\treturn materialCreator;\n\n\t}\n\n}\n\n/**\n * Create a new MTLLoader.MaterialCreator\n * @param baseUrl - Url relative to which textures are loaded\n * @param options - Set of options on how to construct the materials\n *                  side: Which side to apply the material\n *                        FrontSide (default), THREE.BackSide, THREE.DoubleSide\n *                  wrap: What type of wrapping to apply for textures\n *                        RepeatWrapping (default), THREE.ClampToEdgeWrapping, THREE.MirroredRepeatWrapping\n *                  normalizeRGB: RGBs need to be normalized to 0-1 from 0-255\n *                                Default: false, assumed to be already normalized\n *                  ignoreZeroRGBs: Ignore values of RGBs (Ka,Kd,Ks) that are all 0's\n *                                  Default: false\n * @constructor\n */\n\nclass MaterialCreator {\n\n\tconstructor( baseUrl = '', options = {} ) {\n\n\t\tthis.baseUrl = baseUrl;\n\t\tthis.options = options;\n\t\tthis.materialsInfo = {};\n\t\tthis.materials = {};\n\t\tthis.materialsArray = [];\n\t\tthis.nameLookup = {};\n\n\t\tthis.crossOrigin = 'anonymous';\n\n\t\tthis.side = ( this.options.side !== undefined ) ? this.options.side : FrontSide;\n\t\tthis.wrap = ( this.options.wrap !== undefined ) ? this.options.wrap : RepeatWrapping;\n\n\t}\n\n\tsetCrossOrigin( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t}\n\n\tsetManager( value ) {\n\n\t\tthis.manager = value;\n\n\t}\n\n\tsetMaterials( materialsInfo ) {\n\n\t\tthis.materialsInfo = this.convert( materialsInfo );\n\t\tthis.materials = {};\n\t\tthis.materialsArray = [];\n\t\tthis.nameLookup = {};\n\n\t}\n\n\tconvert( materialsInfo ) {\n\n\t\tif ( ! this.options ) return materialsInfo;\n\n\t\tconst converted = {};\n\n\t\tfor ( const mn in materialsInfo ) {\n\n\t\t\t// Convert materials info into normalized form based on options\n\n\t\t\tconst mat = materialsInfo[ mn ];\n\n\t\t\tconst covmat = {};\n\n\t\t\tconverted[ mn ] = covmat;\n\n\t\t\tfor ( const prop in mat ) {\n\n\t\t\t\tlet save = true;\n\t\t\t\tlet value = mat[ prop ];\n\t\t\t\tconst lprop = prop.toLowerCase();\n\n\t\t\t\tswitch ( lprop ) {\n\n\t\t\t\t\tcase 'kd':\n\t\t\t\t\tcase 'ka':\n\t\t\t\t\tcase 'ks':\n\n\t\t\t\t\t\t// Diffuse color (color under white light) using RGB values\n\n\t\t\t\t\t\tif ( this.options && this.options.normalizeRGB ) {\n\n\t\t\t\t\t\t\tvalue = [ value[ 0 ] / 255, value[ 1 ] / 255, value[ 2 ] / 255 ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( this.options && this.options.ignoreZeroRGBs ) {\n\n\t\t\t\t\t\t\tif ( value[ 0 ] === 0 && value[ 1 ] === 0 && value[ 2 ] === 0 ) {\n\n\t\t\t\t\t\t\t\t// ignore\n\n\t\t\t\t\t\t\t\tsave = false;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tif ( save ) {\n\n\t\t\t\t\tcovmat[ lprop ] = value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn converted;\n\n\t}\n\n\tpreload() {\n\n\t\tfor ( const mn in this.materialsInfo ) {\n\n\t\t\tthis.create( mn );\n\n\t\t}\n\n\t}\n\n\tgetIndex( materialName ) {\n\n\t\treturn this.nameLookup[ materialName ];\n\n\t}\n\n\tgetAsArray() {\n\n\t\tlet index = 0;\n\n\t\tfor ( const mn in this.materialsInfo ) {\n\n\t\t\tthis.materialsArray[ index ] = this.create( mn );\n\t\t\tthis.nameLookup[ mn ] = index;\n\t\t\tindex ++;\n\n\t\t}\n\n\t\treturn this.materialsArray;\n\n\t}\n\n\tcreate( materialName ) {\n\n\t\tif ( this.materials[ materialName ] === undefined ) {\n\n\t\t\tthis.createMaterial_( materialName );\n\n\t\t}\n\n\t\treturn this.materials[ materialName ];\n\n\t}\n\n\tcreateMaterial_( materialName ) {\n\n\t\t// Create material\n\n\t\tconst scope = this;\n\t\tconst mat = this.materialsInfo[ materialName ];\n\t\tconst params = {\n\n\t\t\tname: materialName,\n\t\t\tside: this.side\n\n\t\t};\n\n\t\tfunction resolveURL( baseUrl, url ) {\n\n\t\t\tif ( typeof url !== 'string' || url === '' )\n\t\t\t\treturn '';\n\n\t\t\t// Absolute URL\n\t\t\tif ( /^https?:\\/\\//i.test( url ) ) return url;\n\n\t\t\treturn baseUrl + url;\n\n\t\t}\n\n\t\tfunction setMapForType( mapType, value ) {\n\n\t\t\tif ( params[ mapType ] ) return; // Keep the first encountered texture\n\n\t\t\tconst texParams = scope.getTextureParams( value, params );\n\t\t\tconst map = scope.loadTexture( resolveURL( scope.baseUrl, texParams.url ) );\n\n\t\t\tmap.repeat.copy( texParams.scale );\n\t\t\tmap.offset.copy( texParams.offset );\n\n\t\t\tmap.wrapS = scope.wrap;\n\t\t\tmap.wrapT = scope.wrap;\n\n\t\t\tif ( mapType === 'map' || mapType === 'emissiveMap' ) {\n\n\t\t\t\tmap.encoding = sRGBEncoding;\n\n\t\t\t}\n\n\t\t\tparams[ mapType ] = map;\n\n\t\t}\n\n\t\tfor ( const prop in mat ) {\n\n\t\t\tconst value = mat[ prop ];\n\t\t\tlet n;\n\n\t\t\tif ( value === '' ) continue;\n\n\t\t\tswitch ( prop.toLowerCase() ) {\n\n\t\t\t\t// Ns is material specular exponent\n\n\t\t\t\tcase 'kd':\n\n\t\t\t\t\t// Diffuse color (color under white light) using RGB values\n\n\t\t\t\t\tparams.color = new Color().fromArray( value ).convertSRGBToLinear();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ks':\n\n\t\t\t\t\t// Specular color (color when light is reflected from shiny surface) using RGB values\n\t\t\t\t\tparams.specular = new Color().fromArray( value ).convertSRGBToLinear();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ke':\n\n\t\t\t\t\t// Emissive using RGB values\n\t\t\t\t\tparams.emissive = new Color().fromArray( value ).convertSRGBToLinear();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map_kd':\n\n\t\t\t\t\t// Diffuse texture map\n\n\t\t\t\t\tsetMapForType( 'map', value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map_ks':\n\n\t\t\t\t\t// Specular map\n\n\t\t\t\t\tsetMapForType( 'specularMap', value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map_ke':\n\n\t\t\t\t\t// Emissive map\n\n\t\t\t\t\tsetMapForType( 'emissiveMap', value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'norm':\n\n\t\t\t\t\tsetMapForType( 'normalMap', value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map_bump':\n\t\t\t\tcase 'bump':\n\n\t\t\t\t\t// Bump texture map\n\n\t\t\t\t\tsetMapForType( 'bumpMap', value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map_d':\n\n\t\t\t\t\t// Alpha map\n\n\t\t\t\t\tsetMapForType( 'alphaMap', value );\n\t\t\t\t\tparams.transparent = true;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ns':\n\n\t\t\t\t\t// The specular exponent (defines the focus of the specular highlight)\n\t\t\t\t\t// A high exponent results in a tight, concentrated highlight. Ns values normally range from 0 to 1000.\n\n\t\t\t\t\tparams.shininess = parseFloat( value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'd':\n\t\t\t\t\tn = parseFloat( value );\n\n\t\t\t\t\tif ( n < 1 ) {\n\n\t\t\t\t\t\tparams.opacity = n;\n\t\t\t\t\t\tparams.transparent = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'tr':\n\t\t\t\t\tn = parseFloat( value );\n\n\t\t\t\t\tif ( this.options && this.options.invertTrProperty ) n = 1 - n;\n\n\t\t\t\t\tif ( n > 0 ) {\n\n\t\t\t\t\t\tparams.opacity = 1 - n;\n\t\t\t\t\t\tparams.transparent = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.materials[ materialName ] = new MeshPhongMaterial( params );\n\t\treturn this.materials[ materialName ];\n\n\t}\n\n\tgetTextureParams( value, matParams ) {\n\n\t\tconst texParams = {\n\n\t\t\tscale: new Vector2( 1, 1 ),\n\t\t\toffset: new Vector2( 0, 0 )\n\n\t\t };\n\n\t\tconst items = value.split( /\\s+/ );\n\t\tlet pos;\n\n\t\tpos = items.indexOf( '-bm' );\n\n\t\tif ( pos >= 0 ) {\n\n\t\t\tmatParams.bumpScale = parseFloat( items[ pos + 1 ] );\n\t\t\titems.splice( pos, 2 );\n\n\t\t}\n\n\t\tpos = items.indexOf( '-s' );\n\n\t\tif ( pos >= 0 ) {\n\n\t\t\ttexParams.scale.set( parseFloat( items[ pos + 1 ] ), parseFloat( items[ pos + 2 ] ) );\n\t\t\titems.splice( pos, 4 ); // we expect 3 parameters here!\n\n\t\t}\n\n\t\tpos = items.indexOf( '-o' );\n\n\t\tif ( pos >= 0 ) {\n\n\t\t\ttexParams.offset.set( parseFloat( items[ pos + 1 ] ), parseFloat( items[ pos + 2 ] ) );\n\t\t\titems.splice( pos, 4 ); // we expect 3 parameters here!\n\n\t\t}\n\n\t\ttexParams.url = items.join( ' ' ).trim();\n\t\treturn texParams;\n\n\t}\n\n\tloadTexture( url, mapping, onLoad, onProgress, onError ) {\n\n\t\tconst manager = ( this.manager !== undefined ) ? this.manager : DefaultLoadingManager;\n\t\tlet loader = manager.getHandler( url );\n\n\t\tif ( loader === null ) {\n\n\t\t\tloader = new TextureLoader( manager );\n\n\t\t}\n\n\t\tif ( loader.setCrossOrigin ) loader.setCrossOrigin( this.crossOrigin );\n\n\t\tconst texture = loader.load( url, onLoad, onProgress, onError );\n\n\t\tif ( mapping !== undefined ) texture.mapping = mapping;\n\n\t\treturn texture;\n\n\t}\n\n}\n\nexport { MTLLoader };\n","import initEnvironment from \"./environment\";\r\n\r\nlet paramSave, state, sounds, curTime, deltat, running, camera, sence\r\nconst CAR_WIDTH = 1.8;\r\nconst DEFAULT_SPEED = 100 * 1000 / 3600;\r\nconst DEFAULT_SPEED_FACTOR = 2;\r\nconst CAR_LENGTH = 4.2; // Supposedly, average car length\r\nconst CAR_HEIGHT = 1.2;\r\nconst RacingGame = {}\r\nRacingGame.COLLIDE_RADIUS = Math.sqrt(2 * CAR_WIDTH);\r\nRacingGame.STATE_LOADING = 0;\r\nRacingGame.STATE_RUNNING = 1;\r\nRacingGame.STATE_COMPLETE = 2;\r\nRacingGame.STATE_CRASHED = 3;\r\nRacingGame.CAR_Y = .4666;\r\nRacingGame.CAR_START_Z = 10;\r\nRacingGame.PLAYER_START_Z = 4;\r\nRacingGame.best_time = Number.MAX_VALUE;\r\n\r\nfunction createEnvironment() {\r\n    initEnvironment({\r\n        sence,\r\n        textureSky:true,\r\n        textureGround:true,\r\n        textureFinishLine:true,\r\n        displaySigns:true\r\n    })\r\n}\r\n\r\nexport default function initGame(param) {\r\n\tparam = param || paramSave  || {};\r\n\tparamSave = param;\r\n    sence = param.sence\r\n    camera = param.camera\r\n\tsounds = param.sounds;\r\n\t\r\n\tcreateEnvironment();\r\n\t// loadCars();\r\n\t// loadRacer();\r\n\t\r\n\tcurTime = Date.now();\r\n\tdeltat = 0;\r\n\t\r\n\trunning = false;\r\n\tstate = RacingGame.STATE_LOADING;\t\r\n\r\n\t// Make sure the game has keyboard focus\r\n\t// this.focus();\r\n\r\n\t// this.addContextListener();\r\n}","import React, { useEffect, useRef } from \"react\";\r\nimport * as Three from 'three'\r\nimport styles from './main.module.css'\r\nimport { initGame, initSound } from \"./init\";\r\nimport {OrbitControls} from 'three/examples/jsm/controls/OrbitControls'\r\n\r\nconst sence = new Three.Scene();\r\nlet camera\r\nconst renderer = new Three.WebGLRenderer({alpha: true})\r\n// renderer.setClearAlpha = 0.5\r\nconst axesHelper = new Three.AxesHelper(5)\r\nsence.add(axesHelper)\r\n\r\nlet sounds, speedometer, tachometer, mounted\r\n\r\nexport default function() {\r\n    const container = useRef()\r\n  \r\n    useEffect(() => {\r\n      if (mounted) {\r\n        return\r\n      }\r\n      mounted = true\r\n      try {\r\n        const timer = document.getElementById ('elapsedTime');\r\n        const odometer = document.getElementById ('odometer');\r\n        const kmph = document.getElementById ('kmph');\r\n        const rpm = document.getElementById ('rpm');\r\n        sounds = initSound() \r\n        camera = new Three.PerspectiveCamera(45, container.current.offsetWidth / container.current.offsetHeight, 1, 10000)\r\n        camera.position.set( 0, 0, 3.3333 );\r\n        const controls = new OrbitControls(camera, renderer.domElement)\r\n        // 设置阻尼，让控制器更真实, 必须在动画循环调用update方法\r\n        controls.enableDamping = true\r\n        sence.add(camera)\r\n        initGame({\r\n          sence,\r\n          camera,\r\n          sounds,\r\n        })\r\n        timer.style.display = 'block';\r\n        odometer.style.display = 'block';\r\n        kmph.style.display = 'block';\r\n        rpm.style.display = 'block';\r\n      } catch (e) {\r\n        container.current.innerHTML = e.toString();\r\n        return\r\n      }\r\n      renderer.setSize(container.current.offsetWidth, container.current.offsetHeight);\r\n      camera.aspect = container.current.offsetWidth / container.current.offsetHeight;\r\n      container.current.appendChild(renderer.domElement)\r\n      window.addEventListener('resize', () => {\r\n        renderer.setSize(container.current.offsetWidth, container.current.offsetHeight);\r\n        camera.aspect = container.current.offsetWidth / container.current.offsetHeight;\r\n        camera.updateProjectionMatrix();\r\n      }, false)\r\n      refresh()\r\n    }, [])\r\n\r\n    function refresh(time) {\r\n      renderer.render(sence, camera)\r\n      window.requestAnimationFrame(refresh)\r\n    }\r\n\r\n    function onRestartClicked() {\r\n\r\n    }\r\n  \r\n    return <div>\r\n      <center><h1>Road Race!</h1></center>\r\n      <div ref={container} className={styles.container}></div>\r\n      <div id=\"kmph\">\r\n        km/h\r\n          <div id=\"speedometer\"></div>\r\n      </div>\r\n        <div id=\"rpm\">\r\n        rpm\r\n          <div id=\"tachometer\"></div>\r\n      </div>\r\n      <div id=\"odometer\">\r\n        0.00\r\n      </div>\r\n      <div id=\"elapsedTime\">\r\n        0.00\r\n      </div>\r\n      <div className={styles.overlay} >\r\n      <div className={styles.header}>RACE COMPLETE</div>\r\n      <div className={styles.contents}>\r\n        ELAPSED TIME: 42.43s<br></br>\r\n        BEST TIME: 39.31s\r\n        </div>\r\n        <div className={styles.restartButton}><button onClick={onRestartClicked}>Restart</button></div>\r\n      </div>\r\n      <audio id=\"driving\" className={styles.driving} loop>\r\n        <source src={require(\"./media/audio/50910__rutgermuller__in-car-driving.wav\")} type=\"audio/wav\" />\r\n        Your browser does not support WAV files in the audio element.\r\n      </audio>\r\n      <audio id=\"rev_short\" className={styles.rev_short} >\r\n        <source src={require(\"./media/audio/rev-short.wav\")} type=\"audio/wav\" />\r\n        Your browser does not support WAV files in the audio element.\r\n      </audio>\r\n      <audio id=\"rev_long\" className={styles.rev_long} >\r\n        <source src={require('./media/audio/rev-trimmed.wav')} type=\"audio/wav\" />\r\n        Your browser does not support WAV files in the audio element.\r\n      </audio>\r\n      <audio id=\"bounce\" className={styles.bounce} >\r\n        <source src={require('./media/audio/bounce.wav')} type=\"audio/wav\" />\r\n        Your browser does not support WAV files in the audio element.\r\n      </audio>\r\n      <audio id=\"crash\" className={styles.crash} >\r\n        <source src={require('./media/audio/crash-trimmed.wav')} type=\"audio/wav\" />\r\n        Your browser does not support WAV files in the audio element.\r\n      </audio>\r\n    </div>\r\n  }"],"names":["initSound","volume","game_volume","sounds","driving","document","getElementById","rev_short","rev_long","bounce","crash","sound","_object_pattern","_material_library_pattern","_material_use_pattern","_map_use_pattern","_face_vertex_data_separator_pattern","_vA","Vector3","_vB","_vC","_ab","_cb","_color","Color","ParserState","state","objects","object","vertices","normals","colors","uvs","materials","materialLibraries","startObject","name","fromDeclaration","this","previousMaterial","currentMaterial","undefined","_finalize","geometry","hasUVIndices","smooth","startMaterial","libraries","previous","inherited","groupCount","splice","index","material","length","mtllib","Array","isArray","groupStart","groupEnd","clone","cloned","bind","push","end","lastMultiMaterial","mi","declared","finalize","parseVertexIndex","value","len","parseInt","parseNormalIndex","parseUVIndex","addVertex","a","b","c","src","dst","addVertexPoint","addVertexLine","addNormal","addFaceNormal","fromArray","subVectors","cross","normalize","x","y","z","addColor","addUV","addDefaultUV","addUVLine","addFace","ua","ub","uc","na","nb","nc","vLen","ia","ib","ic","nLen","uvLen","addPointGeometry","type","vi","l","addLineGeometry","uvi","displaySigns","sence","OBJLoader","_Loader","_inherits","_super","_createSuper","manager","_this","_classCallCheck","call","_createClass","key","url","onLoad","onProgress","onError","scope","loader","FileLoader","setPath","path","setRequestHeader","requestHeader","setWithCredentials","withCredentials","load","text","parse","e","console","error","itemError","indexOf","replace","lines","split","result","i","line","trimStart","lineFirstChar","charAt","data","parseFloat","setRGB","convertSRGBToLinear","r","g","vertexData","slice","trim","faceVertices","j","jl","vertex","vertexParts","v1","v2","v3","lineParts","substring","lineVertices","lineUVs","li","llen","parts","pointData","exec","test","warn","toLowerCase","container","Group","concat","isLine","isPoints","hasVertexColors","buffergeometry","BufferGeometry","setAttribute","Float32BufferAttribute","createdMaterials","miLen","sourceMaterial","materialHash","create","LineBasicMaterial","PointsMaterial","materialPoints","size","sizeAttenuation","Material","color","copy","map","materialLine","MeshPhongMaterial","flatShading","vertexColors","mesh","addGroup","LineSegments","Points","Mesh","add","points","Loader","MTLLoader","LoaderUtils","materialOptions","info","delimiter_pattern","materialsInfo","pos","ss","materialCreator","MaterialCreator","resourcePath","setCrossOrigin","crossOrigin","setManager","setMaterials","baseUrl","arguments","options","materialsArray","nameLookup","side","FrontSide","wrap","RepeatWrapping","convert","converted","mn","mat","covmat","prop","save","lprop","normalizeRGB","ignoreZeroRGBs","materialName","createMaterial_","params","setMapForType","mapType","texParams","getTextureParams","loadTexture","repeat","scale","offset","wrapS","wrapT","encoding","sRGBEncoding","n","specular","emissive","transparent","shininess","opacity","invertTrProperty","matParams","Vector2","items","bumpScale","set","join","mapping","DefaultLoadingManager","getHandler","TextureLoader","texture","RacingGame","COLLIDE_RADIUS","Math","sqrt","STATE_LOADING","STATE_RUNNING","STATE_COMPLETE","STATE_CRASHED","CAR_Y","CAR_START_Z","PLAYER_START_Z","best_time","Number","MAX_VALUE","paramSave","Environment","createSigns","group","THREE","loadCallback","model","NUM_SIGNS","position","GROUND_Y","ROAD_LENGTH","SIGN_SCALE","onSignLoaded","require","preload","objLoader","doubleSided","rotation","PI","xhr","log","loaded","total","SKY_WIDTH","SKY_HEIGHT","GROUND_WIDTH","GROUND_LENGTH","ROAD_WIDTH","RAIL_WIDTH","RAIL_LENGTH","ANIMATE_ROAD_FACTOR","FINISH_SIGN_WIDTH","FINISH_SIGN_HEIGHT","FINISH_SIGN_Y","createEnvironment","param","textureSky","textureGround","textureFinishLine","headlight","toplight","ambient","Date","now","initEnvironment","camera","mounted","Three","renderer","alpha","axesHelper","useRef","refresh","time","render","window","requestAnimationFrame","useEffect","timer","odometer","kmph","rpm","current","offsetWidth","offsetHeight","OrbitControls","domElement","enableDamping","style","display","innerHTML","toString","setSize","aspect","appendChild","addEventListener","updateProjectionMatrix","_jsxs","children","_jsx","ref","className","styles","id","onClick","loop"],"sourceRoot":""}