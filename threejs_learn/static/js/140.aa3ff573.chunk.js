"use strict";(self.webpackChunkthree=self.webpackChunkthree||[]).push([[140],{6140:function(e,t,r){r.r(t),r.d(t,{default:function(){return C}});var i=r(2791),a=r(1022),n=r(9738),s={header:"dataDemo_header__37r8f"},l=r(6145),o=r(5671),u=r(3144),d=r(136),h=r(7277),f=function(){function e(){(0,o.Z)(this,e),this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1}return(0,u.Z)(e,[{key:"setSize",value:function(){}},{key:"render",value:function(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}},{key:"dispose",value:function(){}}]),e}(),c=new a.iKG(-1,1,1,-1,0,1),v=new a.u9r;v.setAttribute("position",new a.a$l([-1,3,0,-1,-1,0,3,-1,0],3)),v.setAttribute("uv",new a.a$l([0,2,0,0,2,0],2));var p=function(){function e(t){(0,o.Z)(this,e),this._mesh=new a.Kj0(v,t)}return(0,u.Z)(e,[{key:"dispose",value:function(){this._mesh.geometry.dispose()}},{key:"render",value:function(e){e.render(this._mesh,c)}},{key:"material",get:function(){return this._mesh.material},set:function(e){this._mesh.material=e}}]),e}(),g=function(e){(0,d.Z)(r,e);var t=(0,h.Z)(r);function r(e,i,n,s,l){var u;return(0,o.Z)(this,r),(u=t.call(this)).scene=e,u.camera=i,u.overrideMaterial=n,u.clearColor=s,u.clearAlpha=void 0!==l?l:0,u.clear=!0,u.clearDepth=!1,u.needsSwap=!1,u._oldClearColor=new a.Ilk,u}return(0,u.Z)(r,[{key:"render",value:function(e,t,r){var i,a,n=e.autoClear;e.autoClear=!1,void 0!==this.overrideMaterial&&(a=this.scene.overrideMaterial,this.scene.overrideMaterial=this.overrideMaterial),this.clearColor&&(e.getClearColor(this._oldClearColor),i=e.getClearAlpha(),e.setClearColor(this.clearColor,this.clearAlpha)),this.clearDepth&&e.clearDepth(),e.setRenderTarget(this.renderToScreen?null:r),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),e.render(this.scene,this.camera),this.clearColor&&e.setClearColor(this._oldClearColor,i),void 0!==this.overrideMaterial&&(this.scene.overrideMaterial=a),e.autoClear=n}}]),r}(f),m={uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:"\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}",fragmentShader:"\n\n\t\tuniform float opacity;\n\n\t\tuniform sampler2D tDiffuse;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tgl_FragColor = texture2D( tDiffuse, vUv );\n\t\t\tgl_FragColor.a *= opacity;\n\n\n\t\t}"},x=function(e){(0,d.Z)(r,e);var t=(0,h.Z)(r);function r(e,i,n,s){var l;(0,o.Z)(this,r),(l=t.call(this)).renderScene=i,l.renderCamera=n,l.selectedObjects=void 0!==s?s:[],l.visibleEdgeColor=new a.Ilk(1,1,1),l.hiddenEdgeColor=new a.Ilk(.1,.04,.02),l.edgeGlow=0,l.usePatternTexture=!1,l.edgeThickness=1,l.edgeStrength=3,l.downSampleRatio=2,l.pulsePeriod=0,l._visibilityCache=new Map,l.resolution=void 0!==e?new a.FM8(e.x,e.y):new a.FM8(256,256);var u=Math.round(l.resolution.x/l.downSampleRatio),d=Math.round(l.resolution.y/l.downSampleRatio);l.renderTargetMaskBuffer=new a.dd2(l.resolution.x,l.resolution.y),l.renderTargetMaskBuffer.texture.name="OutlinePass.mask",l.renderTargetMaskBuffer.texture.generateMipmaps=!1,l.depthMaterial=new a.lRF,l.depthMaterial.side=a.ehD,l.depthMaterial.depthPacking=a.mSO,l.depthMaterial.blending=a.jFi,l.prepareMaskMaterial=l.getPrepareMaskMaterial(),l.prepareMaskMaterial.side=a.ehD,l.prepareMaskMaterial.fragmentShader=function(e,t){var r=t.isPerspectiveCamera?"perspective":"orthographic";return e.replace(/DEPTH_TO_VIEW_Z/g,r+"DepthToViewZ")}(l.prepareMaskMaterial.fragmentShader,l.renderCamera),l.renderTargetDepthBuffer=new a.dd2(l.resolution.x,l.resolution.y),l.renderTargetDepthBuffer.texture.name="OutlinePass.depth",l.renderTargetDepthBuffer.texture.generateMipmaps=!1,l.renderTargetMaskDownSampleBuffer=new a.dd2(u,d),l.renderTargetMaskDownSampleBuffer.texture.name="OutlinePass.depthDownSample",l.renderTargetMaskDownSampleBuffer.texture.generateMipmaps=!1,l.renderTargetBlurBuffer1=new a.dd2(u,d),l.renderTargetBlurBuffer1.texture.name="OutlinePass.blur1",l.renderTargetBlurBuffer1.texture.generateMipmaps=!1,l.renderTargetBlurBuffer2=new a.dd2(Math.round(u/2),Math.round(d/2)),l.renderTargetBlurBuffer2.texture.name="OutlinePass.blur2",l.renderTargetBlurBuffer2.texture.generateMipmaps=!1,l.edgeDetectionMaterial=l.getEdgeDetectionMaterial(),l.renderTargetEdgeBuffer1=new a.dd2(u,d),l.renderTargetEdgeBuffer1.texture.name="OutlinePass.edge1",l.renderTargetEdgeBuffer1.texture.generateMipmaps=!1,l.renderTargetEdgeBuffer2=new a.dd2(Math.round(u/2),Math.round(d/2)),l.renderTargetEdgeBuffer2.texture.name="OutlinePass.edge2",l.renderTargetEdgeBuffer2.texture.generateMipmaps=!1;l.separableBlurMaterial1=l.getSeperableBlurMaterial(4),l.separableBlurMaterial1.uniforms.texSize.value.set(u,d),l.separableBlurMaterial1.uniforms.kernelRadius.value=1,l.separableBlurMaterial2=l.getSeperableBlurMaterial(4),l.separableBlurMaterial2.uniforms.texSize.value.set(Math.round(u/2),Math.round(d/2)),l.separableBlurMaterial2.uniforms.kernelRadius.value=4,l.overlayMaterial=l.getOverlayMaterial();var h=m;return l.copyUniforms=a.rDY.clone(h.uniforms),l.copyUniforms.opacity.value=1,l.materialCopy=new a.jyz({uniforms:l.copyUniforms,vertexShader:h.vertexShader,fragmentShader:h.fragmentShader,blending:a.jFi,depthTest:!1,depthWrite:!1,transparent:!0}),l.enabled=!0,l.needsSwap=!1,l._oldClearColor=new a.Ilk,l.oldClearAlpha=1,l.fsQuad=new p(null),l.tempPulseColor1=new a.Ilk,l.tempPulseColor2=new a.Ilk,l.textureMatrix=new a.yGw,l}return(0,u.Z)(r,[{key:"dispose",value:function(){this.renderTargetMaskBuffer.dispose(),this.renderTargetDepthBuffer.dispose(),this.renderTargetMaskDownSampleBuffer.dispose(),this.renderTargetBlurBuffer1.dispose(),this.renderTargetBlurBuffer2.dispose(),this.renderTargetEdgeBuffer1.dispose(),this.renderTargetEdgeBuffer2.dispose(),this.depthMaterial.dispose(),this.prepareMaskMaterial.dispose(),this.edgeDetectionMaterial.dispose(),this.separableBlurMaterial1.dispose(),this.separableBlurMaterial2.dispose(),this.overlayMaterial.dispose(),this.materialCopy.dispose(),this.fsQuad.dispose()}},{key:"setSize",value:function(e,t){this.renderTargetMaskBuffer.setSize(e,t),this.renderTargetDepthBuffer.setSize(e,t);var r=Math.round(e/this.downSampleRatio),i=Math.round(t/this.downSampleRatio);this.renderTargetMaskDownSampleBuffer.setSize(r,i),this.renderTargetBlurBuffer1.setSize(r,i),this.renderTargetEdgeBuffer1.setSize(r,i),this.separableBlurMaterial1.uniforms.texSize.value.set(r,i),r=Math.round(r/2),i=Math.round(i/2),this.renderTargetBlurBuffer2.setSize(r,i),this.renderTargetEdgeBuffer2.setSize(r,i),this.separableBlurMaterial2.uniforms.texSize.value.set(r,i)}},{key:"changeVisibilityOfSelectedObjects",value:function(e){var t=this._visibilityCache;function r(r){r.isMesh&&(!0===e?r.visible=t.get(r):(t.set(r,r.visible),r.visible=e))}for(var i=0;i<this.selectedObjects.length;i++){this.selectedObjects[i].traverse(r)}}},{key:"changeVisibilityOfNonSelectedObjects",value:function(e){var t=this._visibilityCache,r=[];function i(e){e.isMesh&&r.push(e)}for(var a=0;a<this.selectedObjects.length;a++){this.selectedObjects[a].traverse(i)}this.renderScene.traverse((function(i){if(i.isMesh||i.isSprite){for(var a=!1,n=0;n<r.length;n++){if(r[n].id===i.id){a=!0;break}}if(!1===a){var s=i.visible;!1!==e&&!0!==t.get(i)||(i.visible=e),t.set(i,s)}}else(i.isPoints||i.isLine)&&(!0===e?i.visible=t.get(i):(t.set(i,i.visible),i.visible=e))}))}},{key:"updateTextureMatrix",value:function(){this.textureMatrix.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),this.textureMatrix.multiply(this.renderCamera.projectionMatrix),this.textureMatrix.multiply(this.renderCamera.matrixWorldInverse)}},{key:"render",value:function(e,t,i,a,n){if(this.selectedObjects.length>0){e.getClearColor(this._oldClearColor),this.oldClearAlpha=e.getClearAlpha();var s=e.autoClear;e.autoClear=!1,n&&e.state.buffers.stencil.setTest(!1),e.setClearColor(16777215,1),this.changeVisibilityOfSelectedObjects(!1);var l=this.renderScene.background;if(this.renderScene.background=null,this.renderScene.overrideMaterial=this.depthMaterial,e.setRenderTarget(this.renderTargetDepthBuffer),e.clear(),e.render(this.renderScene,this.renderCamera),this.changeVisibilityOfSelectedObjects(!0),this._visibilityCache.clear(),this.updateTextureMatrix(),this.changeVisibilityOfNonSelectedObjects(!1),this.renderScene.overrideMaterial=this.prepareMaskMaterial,this.prepareMaskMaterial.uniforms.cameraNearFar.value.set(this.renderCamera.near,this.renderCamera.far),this.prepareMaskMaterial.uniforms.depthTexture.value=this.renderTargetDepthBuffer.texture,this.prepareMaskMaterial.uniforms.textureMatrix.value=this.textureMatrix,e.setRenderTarget(this.renderTargetMaskBuffer),e.clear(),e.render(this.renderScene,this.renderCamera),this.renderScene.overrideMaterial=null,this.changeVisibilityOfNonSelectedObjects(!0),this._visibilityCache.clear(),this.renderScene.background=l,this.fsQuad.material=this.materialCopy,this.copyUniforms.tDiffuse.value=this.renderTargetMaskBuffer.texture,e.setRenderTarget(this.renderTargetMaskDownSampleBuffer),e.clear(),this.fsQuad.render(e),this.tempPulseColor1.copy(this.visibleEdgeColor),this.tempPulseColor2.copy(this.hiddenEdgeColor),this.pulsePeriod>0){var o=.625+.75*Math.cos(.01*performance.now()/this.pulsePeriod)/2;this.tempPulseColor1.multiplyScalar(o),this.tempPulseColor2.multiplyScalar(o)}this.fsQuad.material=this.edgeDetectionMaterial,this.edgeDetectionMaterial.uniforms.maskTexture.value=this.renderTargetMaskDownSampleBuffer.texture,this.edgeDetectionMaterial.uniforms.texSize.value.set(this.renderTargetMaskDownSampleBuffer.width,this.renderTargetMaskDownSampleBuffer.height),this.edgeDetectionMaterial.uniforms.visibleEdgeColor.value=this.tempPulseColor1,this.edgeDetectionMaterial.uniforms.hiddenEdgeColor.value=this.tempPulseColor2,e.setRenderTarget(this.renderTargetEdgeBuffer1),e.clear(),this.fsQuad.render(e),this.fsQuad.material=this.separableBlurMaterial1,this.separableBlurMaterial1.uniforms.colorTexture.value=this.renderTargetEdgeBuffer1.texture,this.separableBlurMaterial1.uniforms.direction.value=r.BlurDirectionX,this.separableBlurMaterial1.uniforms.kernelRadius.value=this.edgeThickness,e.setRenderTarget(this.renderTargetBlurBuffer1),e.clear(),this.fsQuad.render(e),this.separableBlurMaterial1.uniforms.colorTexture.value=this.renderTargetBlurBuffer1.texture,this.separableBlurMaterial1.uniforms.direction.value=r.BlurDirectionY,e.setRenderTarget(this.renderTargetEdgeBuffer1),e.clear(),this.fsQuad.render(e),this.fsQuad.material=this.separableBlurMaterial2,this.separableBlurMaterial2.uniforms.colorTexture.value=this.renderTargetEdgeBuffer1.texture,this.separableBlurMaterial2.uniforms.direction.value=r.BlurDirectionX,e.setRenderTarget(this.renderTargetBlurBuffer2),e.clear(),this.fsQuad.render(e),this.separableBlurMaterial2.uniforms.colorTexture.value=this.renderTargetBlurBuffer2.texture,this.separableBlurMaterial2.uniforms.direction.value=r.BlurDirectionY,e.setRenderTarget(this.renderTargetEdgeBuffer2),e.clear(),this.fsQuad.render(e),this.fsQuad.material=this.overlayMaterial,this.overlayMaterial.uniforms.maskTexture.value=this.renderTargetMaskBuffer.texture,this.overlayMaterial.uniforms.edgeTexture1.value=this.renderTargetEdgeBuffer1.texture,this.overlayMaterial.uniforms.edgeTexture2.value=this.renderTargetEdgeBuffer2.texture,this.overlayMaterial.uniforms.patternTexture.value=this.patternTexture,this.overlayMaterial.uniforms.edgeStrength.value=this.edgeStrength,this.overlayMaterial.uniforms.edgeGlow.value=this.edgeGlow,this.overlayMaterial.uniforms.usePatternTexture.value=this.usePatternTexture,n&&e.state.buffers.stencil.setTest(!0),e.setRenderTarget(i),this.fsQuad.render(e),e.setClearColor(this._oldClearColor,this.oldClearAlpha),e.autoClear=s}this.renderToScreen&&(this.fsQuad.material=this.materialCopy,this.copyUniforms.tDiffuse.value=i.texture,e.setRenderTarget(null),this.fsQuad.render(e))}},{key:"getPrepareMaskMaterial",value:function(){return new a.jyz({uniforms:{depthTexture:{value:null},cameraNearFar:{value:new a.FM8(.5,.5)},textureMatrix:{value:null}},vertexShader:"#include <morphtarget_pars_vertex>\n\t\t\t\t#include <skinning_pars_vertex>\n\n\t\t\t\tvarying vec4 projTexCoord;\n\t\t\t\tvarying vec4 vPosition;\n\t\t\t\tuniform mat4 textureMatrix;\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\t#include <skinbase_vertex>\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <morphtarget_vertex>\n\t\t\t\t\t#include <skinning_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t\tvPosition = mvPosition;\n\n\t\t\t\t\tvec4 worldPosition = vec4( transformed, 1.0 );\n\n\t\t\t\t\t#ifdef USE_INSTANCING\n\n\t\t\t\t\t\tworldPosition = instanceMatrix * worldPosition;\n\n\t\t\t\t\t#endif\n\t\t\t\t\t\n\t\t\t\t\tworldPosition = modelMatrix * worldPosition;\n\n\t\t\t\t\tprojTexCoord = textureMatrix * worldPosition;\n\n\t\t\t\t}",fragmentShader:"#include <packing>\n\t\t\t\tvarying vec4 vPosition;\n\t\t\t\tvarying vec4 projTexCoord;\n\t\t\t\tuniform sampler2D depthTexture;\n\t\t\t\tuniform vec2 cameraNearFar;\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tfloat depth = unpackRGBAToDepth(texture2DProj( depthTexture, projTexCoord ));\n\t\t\t\t\tfloat viewZ = - DEPTH_TO_VIEW_Z( depth, cameraNearFar.x, cameraNearFar.y );\n\t\t\t\t\tfloat depthTest = (-vPosition.z > viewZ) ? 1.0 : 0.0;\n\t\t\t\t\tgl_FragColor = vec4(0.0, depthTest, 1.0, 1.0);\n\n\t\t\t\t}"})}},{key:"getEdgeDetectionMaterial",value:function(){return new a.jyz({uniforms:{maskTexture:{value:null},texSize:{value:new a.FM8(.5,.5)},visibleEdgeColor:{value:new a.Pa4(1,1,1)},hiddenEdgeColor:{value:new a.Pa4(1,1,1)}},vertexShader:"varying vec2 vUv;\n\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",fragmentShader:"varying vec2 vUv;\n\n\t\t\t\tuniform sampler2D maskTexture;\n\t\t\t\tuniform vec2 texSize;\n\t\t\t\tuniform vec3 visibleEdgeColor;\n\t\t\t\tuniform vec3 hiddenEdgeColor;\n\n\t\t\t\tvoid main() {\n\t\t\t\t\tvec2 invSize = 1.0 / texSize;\n\t\t\t\t\tvec4 uvOffset = vec4(1.0, 0.0, 0.0, 1.0) * vec4(invSize, invSize);\n\t\t\t\t\tvec4 c1 = texture2D( maskTexture, vUv + uvOffset.xy);\n\t\t\t\t\tvec4 c2 = texture2D( maskTexture, vUv - uvOffset.xy);\n\t\t\t\t\tvec4 c3 = texture2D( maskTexture, vUv + uvOffset.yw);\n\t\t\t\t\tvec4 c4 = texture2D( maskTexture, vUv - uvOffset.yw);\n\t\t\t\t\tfloat diff1 = (c1.r - c2.r)*0.5;\n\t\t\t\t\tfloat diff2 = (c3.r - c4.r)*0.5;\n\t\t\t\t\tfloat d = length( vec2(diff1, diff2) );\n\t\t\t\t\tfloat a1 = min(c1.g, c2.g);\n\t\t\t\t\tfloat a2 = min(c3.g, c4.g);\n\t\t\t\t\tfloat visibilityFactor = min(a1, a2);\n\t\t\t\t\tvec3 edgeColor = 1.0 - visibilityFactor > 0.001 ? visibleEdgeColor : hiddenEdgeColor;\n\t\t\t\t\tgl_FragColor = vec4(edgeColor, 1.0) * vec4(d);\n\t\t\t\t}"})}},{key:"getSeperableBlurMaterial",value:function(e){return new a.jyz({defines:{MAX_RADIUS:e},uniforms:{colorTexture:{value:null},texSize:{value:new a.FM8(.5,.5)},direction:{value:new a.FM8(.5,.5)},kernelRadius:{value:1}},vertexShader:"varying vec2 vUv;\n\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",fragmentShader:"#include <common>\n\t\t\t\tvarying vec2 vUv;\n\t\t\t\tuniform sampler2D colorTexture;\n\t\t\t\tuniform vec2 texSize;\n\t\t\t\tuniform vec2 direction;\n\t\t\t\tuniform float kernelRadius;\n\n\t\t\t\tfloat gaussianPdf(in float x, in float sigma) {\n\t\t\t\t\treturn 0.39894 * exp( -0.5 * x * x/( sigma * sigma))/sigma;\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\t\t\t\t\tvec2 invSize = 1.0 / texSize;\n\t\t\t\t\tfloat sigma = kernelRadius/2.0;\n\t\t\t\t\tfloat weightSum = gaussianPdf(0.0, sigma);\n\t\t\t\t\tvec4 diffuseSum = texture2D( colorTexture, vUv) * weightSum;\n\t\t\t\t\tvec2 delta = direction * invSize * kernelRadius/float(MAX_RADIUS);\n\t\t\t\t\tvec2 uvOffset = delta;\n\t\t\t\t\tfor( int i = 1; i <= MAX_RADIUS; i ++ ) {\n\t\t\t\t\t\tfloat x = kernelRadius * float(i) / float(MAX_RADIUS);\n\t\t\t\t\t\tfloat w = gaussianPdf(x, sigma);\n\t\t\t\t\t\tvec4 sample1 = texture2D( colorTexture, vUv + uvOffset);\n\t\t\t\t\t\tvec4 sample2 = texture2D( colorTexture, vUv - uvOffset);\n\t\t\t\t\t\tdiffuseSum += ((sample1 + sample2) * w);\n\t\t\t\t\t\tweightSum += (2.0 * w);\n\t\t\t\t\t\tuvOffset += delta;\n\t\t\t\t\t}\n\t\t\t\t\tgl_FragColor = diffuseSum/weightSum;\n\t\t\t\t}"})}},{key:"getOverlayMaterial",value:function(){return new a.jyz({uniforms:{maskTexture:{value:null},edgeTexture1:{value:null},edgeTexture2:{value:null},patternTexture:{value:null},edgeStrength:{value:1},edgeGlow:{value:1},usePatternTexture:{value:0}},vertexShader:"varying vec2 vUv;\n\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",fragmentShader:"varying vec2 vUv;\n\n\t\t\t\tuniform sampler2D maskTexture;\n\t\t\t\tuniform sampler2D edgeTexture1;\n\t\t\t\tuniform sampler2D edgeTexture2;\n\t\t\t\tuniform sampler2D patternTexture;\n\t\t\t\tuniform float edgeStrength;\n\t\t\t\tuniform float edgeGlow;\n\t\t\t\tuniform bool usePatternTexture;\n\n\t\t\t\tvoid main() {\n\t\t\t\t\tvec4 edgeValue1 = texture2D(edgeTexture1, vUv);\n\t\t\t\t\tvec4 edgeValue2 = texture2D(edgeTexture2, vUv);\n\t\t\t\t\tvec4 maskColor = texture2D(maskTexture, vUv);\n\t\t\t\t\tvec4 patternColor = texture2D(patternTexture, 6.0 * vUv);\n\t\t\t\t\tfloat visibilityFactor = 1.0 - maskColor.g > 0.0 ? 1.0 : 0.5;\n\t\t\t\t\tvec4 edgeValue = edgeValue1 + edgeValue2 * edgeGlow;\n\t\t\t\t\tvec4 finalColor = edgeStrength * maskColor.r * edgeValue;\n\t\t\t\t\tif(usePatternTexture)\n\t\t\t\t\t\tfinalColor += + visibilityFactor * (1.0 - maskColor.r) * (1.0 - patternColor.r);\n\t\t\t\t\tgl_FragColor = finalColor;\n\t\t\t\t}",blending:a.WMw,depthTest:!1,depthWrite:!1,transparent:!0})}}]),r}(f);x.BlurDirectionX=new a.FM8(1,0),x.BlurDirectionY=new a.FM8(0,1);var w=function(e){(0,d.Z)(r,e);var t=(0,h.Z)(r);function r(e,i){var n;return(0,o.Z)(this,r),(n=t.call(this)).textureID=void 0!==i?i:"tDiffuse",e instanceof a.jyz?(n.uniforms=e.uniforms,n.material=e):e&&(n.uniforms=a.rDY.clone(e.uniforms),n.material=new a.jyz({defines:Object.assign({},e.defines),uniforms:n.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader})),n.fsQuad=new p(n.material),n}return(0,u.Z)(r,[{key:"render",value:function(e,t,r){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=r.texture),this.fsQuad.material=this.material,this.renderToScreen?(e.setRenderTarget(null),this.fsQuad.render(e)):(e.setRenderTarget(t),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),this.fsQuad.render(e))}},{key:"dispose",value:function(){this.material.dispose(),this.fsQuad.dispose()}}]),r}(f),M=function(e){(0,d.Z)(r,e);var t=(0,h.Z)(r);function r(e,i){var a;return(0,o.Z)(this,r),(a=t.call(this)).scene=e,a.camera=i,a.clear=!0,a.needsSwap=!1,a.inverse=!1,a}return(0,u.Z)(r,[{key:"render",value:function(e,t,r){var i,a,n=e.getContext(),s=e.state;s.buffers.color.setMask(!1),s.buffers.depth.setMask(!1),s.buffers.color.setLocked(!0),s.buffers.depth.setLocked(!0),this.inverse?(i=0,a=1):(i=1,a=0),s.buffers.stencil.setTest(!0),s.buffers.stencil.setOp(n.REPLACE,n.REPLACE,n.REPLACE),s.buffers.stencil.setFunc(n.ALWAYS,i,4294967295),s.buffers.stencil.setClear(a),s.buffers.stencil.setLocked(!0),e.setRenderTarget(r),this.clear&&e.clear(),e.render(this.scene,this.camera),e.setRenderTarget(t),this.clear&&e.clear(),e.render(this.scene,this.camera),s.buffers.color.setLocked(!1),s.buffers.depth.setLocked(!1),s.buffers.stencil.setLocked(!1),s.buffers.stencil.setFunc(n.EQUAL,1,4294967295),s.buffers.stencil.setOp(n.KEEP,n.KEEP,n.KEEP),s.buffers.stencil.setLocked(!0)}}]),r}(f),T=function(e){(0,d.Z)(r,e);var t=(0,h.Z)(r);function r(){var e;return(0,o.Z)(this,r),(e=t.call(this)).needsSwap=!1,e}return(0,u.Z)(r,[{key:"render",value:function(e){e.state.buffers.stencil.setLocked(!1),e.state.buffers.stencil.setTest(!1)}}]),r}(f),b=function(){function e(t,r){if((0,o.Z)(this,e),this.renderer=t,void 0===r){var i=t.getSize(new a.FM8);this._pixelRatio=t.getPixelRatio(),this._width=i.width,this._height=i.height,(r=new a.dd2(this._width*this._pixelRatio,this._height*this._pixelRatio)).texture.name="EffectComposer.rt1"}else this._pixelRatio=1,this._width=r.width,this._height=r.height;this.renderTarget1=r,this.renderTarget2=r.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.renderToScreen=!0,this.passes=[],this.copyPass=new w(m),this.clock=new a.SUY}return(0,u.Z)(e,[{key:"swapBuffers",value:function(){var e=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=e}},{key:"addPass",value:function(e){this.passes.push(e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}},{key:"insertPass",value:function(e,t){this.passes.splice(t,0,e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}},{key:"removePass",value:function(e){var t=this.passes.indexOf(e);-1!==t&&this.passes.splice(t,1)}},{key:"isLastEnabledPass",value:function(e){for(var t=e+1;t<this.passes.length;t++)if(this.passes[t].enabled)return!1;return!0}},{key:"render",value:function(e){void 0===e&&(e=this.clock.getDelta());for(var t=this.renderer.getRenderTarget(),r=!1,i=0,a=this.passes.length;i<a;i++){var n=this.passes[i];if(!1!==n.enabled){if(n.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(i),n.render(this.renderer,this.writeBuffer,this.readBuffer,e,r),n.needsSwap){if(r){var s=this.renderer.getContext(),l=this.renderer.state.buffers.stencil;l.setFunc(s.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,e),l.setFunc(s.EQUAL,1,4294967295)}this.swapBuffers()}void 0!==M&&(n instanceof M?r=!0:n instanceof T&&(r=!1))}}this.renderer.setRenderTarget(t)}},{key:"reset",value:function(e){if(void 0===e){var t=this.renderer.getSize(new a.FM8);this._pixelRatio=this.renderer.getPixelRatio(),this._width=t.width,this._height=t.height,(e=this.renderTarget1.clone()).setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=e,this.renderTarget2=e.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2}},{key:"setSize",value:function(e,t){this._width=e,this._height=t;var r=this._width*this._pixelRatio,i=this._height*this._pixelRatio;this.renderTarget1.setSize(r,i),this.renderTarget2.setSize(r,i);for(var a=0;a<this.passes.length;a++)this.passes[a].setSize(r,i)}},{key:"setPixelRatio",value:function(e){this._pixelRatio=e,this.setSize(this._width,this._height)}},{key:"dispose",value:function(){this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.copyPass.dispose()}}]),e}(),S=r(184);function C(){var e=new a.xsS,t=new a.cPb(25,window.innerWidth/window.innerHeight,.1,1e3);t.position.set(-20,0,0),t.lookAt(0,0,0),e.add(t);var o=new a.CP7;new n.z(t,o.domElement).enableDamping=!0,o.setSize(window.innerWidth,window.innerHeight);var u={mouse:new a.FM8,composer:null,effectFXAA:null,outlinePass:null,visibleEdgeColor:"#00ff00",hiddenEdgeColor:"#190a05",selectedObjects:[]},d=(0,i.useRef)();function h(){u.raycaster.setFromCamera(u.mouse,t);var r,i=u.raycaster.intersectObject(e,!0);if(i.length>0){var a=i[0].object;r=a,u.selectedObjects=[],u.selectedObjects.push(r),u.outlinePass.selectedObjects=u.selectedObjects}else u.outlinePass.selectedObjects=[]}function f(e){!1!==e.isPrimary&&(u.mouse.x=e.clientX/window.innerWidth*2-1,u.mouse.y=-e.clientY/window.innerHeight*2+1,h())}function c(){var e=window.innerWidth,r=window.innerHeight;t.aspect=e/r,t.updateProjectionMatrix(),o.setSize(e,r)}function v(r){o.render(e,t),u.composer.render(),window.requestAnimationFrame(v)}return(0,i.useEffect)((function(){!function(){(function(){var t=new a.Mig(16777215,.5);e.add(t);var r=new a.Ox3(16777215);r.position.set(0,200,100),r.castShadow=!0,r.shadow.camera.top=180,r.shadow.camera.bottom=-100,r.shadow.camera.left=-120,r.shadow.camera.right=400,r.shadow.camera.near=.1,r.shadow.camera.far=400,r.shadow.mapSize.set(1024,1024),e.add(r)})(),function(){var t=(new a.cBK).load([r(4031),r(5159),r(9521),r(8729),r(8487),r(3106)]);e.background=t}(),u.raycaster=new a.iMs,(new l.E).load(r(6998),(function(t){e.add(t.scene),u.plane=t.scene,u.propeller=u.plane.getObjectByName("propeller")})),function(){u.composer=new b(o);var r=new g(e,t);u.composer.addPass(r),u.outlinePass=new x(new a.FM8(window.innerWidth,window.innerHeight),e,t),u.composer.addPass(u.outlinePass)}(),d.current.addEventListener("mousemove",f);var i=new a.DvJ,n=new a.Kj0(i,new a.vBJ({color:"#ff0000"}));n.position.set(3,2,0),e.add(n)}(),window.addEventListener("resize",c,!1),d.current.appendChild(o.domElement),v()}),[]),(0,S.jsxs)("div",{children:[(0,S.jsx)("div",{className:s.header,children:"\u9ad8\u4eae\u8fb9\u6846\u9009\u4e2ddemo"}),(0,S.jsx)("div",{ref:d})]})}},6998:function(e,t,r){e.exports=r.p+"static/media/microplane.bbfe7b3c9aa4195a5d45.glb"},5159:function(e,t,r){e.exports=r.p+"static/media/negx.85113ee44885764a3453.jpg"},8729:function(e,t,r){e.exports=r.p+"static/media/negy.41eaa3c045820a513794.jpg"},3106:function(e,t,r){e.exports=r.p+"static/media/negz.1ab86a2bbc9f6bbb2cbf.jpg"},4031:function(e,t,r){e.exports=r.p+"static/media/posx.f980a546f32a0366ca90.jpg"},9521:function(e,t,r){e.exports=r.p+"static/media/posy.9df9323e7535fba041d9.jpg"},8487:function(e,t,r){e.exports=r.p+"static/media/posz.c7033b4c484e6f9e905d.jpg"}}]);
//# sourceMappingURL=140.aa3ff573.chunk.js.map