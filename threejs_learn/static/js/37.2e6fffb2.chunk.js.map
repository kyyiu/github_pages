{"version":3,"file":"static/js/37.2e6fffb2.chunk.js","mappings":"0LAIMA,EAAQ,IAAIC,EAAAA,IACZC,EAAS,IAAID,EAAAA,IACf,GACAE,OAAOC,WAAWD,OAAOE,YACzB,GACA,KAGJH,EAAOI,SAASC,IAAI,EAAE,EAAE,IACxBP,EAAMQ,IAAIN,GAEV,IAAMO,EAAQ,IAAIR,EAAAA,IAAwB,SAAU,GACpDQ,EAAMH,SAASC,IAAK,GAAK,EAAG,GAAIG,YAChCV,EAAMQ,IAAKC,GAGX,IAAME,EAAW,IAAIV,EAAAA,IAAoB,CAACW,OAAO,IACjDD,EAASE,cAAgB,GACR,IAAIC,EAAAA,EAAcZ,EAAQS,EAASI,YAE3CC,eAAgB,EACzBL,EAASM,QAAQd,OAAOC,WAAYD,OAAOE,aAE3C,IAaIa,EAAUC,EAASC,EAAMC,EAbvBC,EAAW,CACfC,EAAQ,OAGJC,EAAQ,SAAHC,GAA8B,IAAjBC,EAAQD,EAARC,SAAUC,EAAGF,EAAHE,IAChC,OAAOC,EAAAA,EAAAA,KAAA,SAAOC,GAAE,QAAAC,OAAUH,GAAOI,MAAM,MAAMC,OAAO,MAAMC,UAAQ,EAACC,UAAU,KAAKC,MAAI,EAAAC,UACpFR,EAAAA,EAAAA,KAAA,UACES,IAAKX,EACLY,KAAK,wCAGX,EAIe,aACX,IAAMC,GAAYC,EAAAA,EAAAA,UAmBlB,SAASC,EAAQC,GACXtB,IACFA,EAAKuB,SAASC,GAAK,IACnBxB,EAAKuB,SAASE,GAAK,KAErBlC,EAASmC,OAAO9C,EAAOE,GACvBC,OAAO4C,sBAAsBN,EAC/B,CAcA,OAtCAO,EAAAA,EAAAA,YAAU,WACR,IAAI3B,EAAJ,CAGAA,GAAU,GACVH,EAAW+B,SAASC,eAAe,WAC1BC,OACThC,GAAU,EACV,IAAMiC,EAAM,IAAInD,EAAAA,IAAkB,EAAE,EAAE,GAChCoD,EAAS,IAAIpD,EAAAA,IAAmBiB,GAChCoC,EAAI,IAAIrD,EAAAA,IAA0B,CAACsD,IAAKF,EAAQG,MAAO,WAC7DpC,EAAO,IAAInB,EAAAA,IAAWmD,EAAKE,GAC3BtD,EAAMQ,IAAIY,GACVmB,EAAUkB,QAAQC,YAAY/C,EAASI,YACvC0B,GAXA,CAYF,GAAG,KAuBIkB,EAAAA,EAAAA,MAAA,OAAKC,QAZZ,WACEC,QAAQC,IAAI,MAAO5C,GACfA,IACEC,EACFD,EAAS6C,QAET7C,EAASiC,QAGbhC,GAAWA,CACb,EAEgCiB,SAAA,EAC9BR,EAAAA,EAAAA,KAAA,OAAKoC,MAAO,CAAC1D,SAAU,WAAYyB,MAAO,OAAQkC,UAAW,SAAUC,UAAW,QAAQ9B,SAAC,0CAEzFd,EAASiC,KAAI,SAACY,EAAGC,GAAC,OAAKxC,EAAAA,EAAAA,KAACJ,EAAK,CAACE,SAAUyC,EAAWxC,IAAKyC,EAAE,GAAVA,EAAc,KAEhExC,EAAAA,EAAAA,KAAA,OAAKyC,IAAK9B,MAEd,C","sources":["practice/material/videoTexture.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport * as Three from 'three'\r\nimport {OrbitControls} from 'three/examples/jsm/controls/OrbitControls'\r\n\r\nconst sence = new Three.Scene();\r\nconst camera = new Three.PerspectiveCamera(\r\n    75,\r\n    window.innerWidth/window.innerHeight,\r\n    0.1,\r\n    1000\r\n)\r\n\r\ncamera.position.set(0,0,10)\r\nsence.add(camera)\r\n\r\nconst light = new Three.DirectionalLight( 0xffffff, 3 );\r\nlight.position.set( 0.5, 1, 1 ).normalize();\r\nsence.add( light );\r\n\r\n\r\nconst renderer = new Three.WebGLRenderer({alpha: true})\r\nrenderer.setClearAlpha = 0.5\r\nconst controls = new OrbitControls(camera, renderer.domElement)\r\n// 设置阻尼，让控制器更真实, 必须在动画循环调用update方法\r\ncontrols.enableDamping = true\r\nrenderer.setSize(window.innerWidth, window.innerHeight)\r\n\r\nconst vedioArr = [\r\n  require('../../assets/videos/Anniversary.ogv')\r\n]\r\n\r\nconst Vedio = function({videoSrc, idx}) {\r\n  return <video id={`vedio${idx}`} width=\"750\" height=\"500\" controls className=\"dn\" loop>\r\n    <source \r\n      src={videoSrc}\r\n      type='video/ogg; codecs=\"theora, vorbis\"'\r\n    ></source>\r\n  </video>\r\n}\r\n\r\nlet vedioDom, playing, cube, mounted;\r\n\r\nexport default function() {\r\n    const container = useRef()\r\n  \r\n    useEffect(() => {\r\n      if (mounted) {\r\n        return\r\n      }\r\n      mounted = true\r\n      vedioDom = document.getElementById(\"vedio1\")\r\n      vedioDom.play()\r\n      playing = true;\r\n      const box = new Three.BoxGeometry(5,5,5)\r\n      const textur = new Three.VideoTexture(vedioDom)\r\n      const m = new Three.MeshLambertMaterial({map: textur, color: 0xffffff})\r\n      cube = new Three.Mesh(box, m)\r\n      sence.add(cube)\r\n      container.current.appendChild(renderer.domElement)\r\n      refresh()\r\n    }, [])\r\n\r\n    function refresh(time) {\r\n      if (cube) {\r\n        cube.rotation.y += 0.01\r\n        cube.rotation.x += 0.01\r\n      }\r\n      renderer.render(sence, camera)\r\n      window.requestAnimationFrame(refresh)\r\n    }\r\n\r\n    function togglePlay() {\r\n      console.log('zzz', vedioDom)\r\n      if (vedioDom) {\r\n        if (playing) {\r\n          vedioDom.pause();\r\n        } else {\r\n          vedioDom.play();\r\n        }\r\n      }\r\n      playing = !playing\r\n    }\r\n  \r\n    return <div onClick={togglePlay}>\r\n      <div style={{position: 'absolute', width: '100%', textAlign: 'center', marginTop: '40px'}}>点击暂停/播放</div>\r\n      {\r\n        vedioArr.map((e, i) => <Vedio videoSrc={e} key={i} idx={i+1}/>)\r\n      }\r\n      <div ref={container}></div>\r\n    </div>\r\n  }"],"names":["sence","Three","camera","window","innerWidth","innerHeight","position","set","add","light","normalize","renderer","alpha","setClearAlpha","OrbitControls","domElement","enableDamping","setSize","vedioDom","playing","cube","mounted","vedioArr","require","Vedio","_ref","videoSrc","idx","_jsx","id","concat","width","height","controls","className","loop","children","src","type","container","useRef","refresh","time","rotation","y","x","render","requestAnimationFrame","useEffect","document","getElementById","play","box","textur","m","map","color","current","appendChild","_jsxs","onClick","console","log","pause","style","textAlign","marginTop","e","i","ref"],"sourceRoot":""}